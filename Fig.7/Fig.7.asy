import three;
usepackage("esvect");
size(10cm);
currentprojection = perspective(0, -1, 0);
draw(box(O, (4*X + 2*Y + 2*Z)), black);

// 手动绘制 x 轴刻度
for (int i = 1; i <= 10; ++i) {
    draw((i*(4/9)-(4/9), 0, 0)--(i*(4/9)-(4/9), 0, 0.1), black);  // 绘制刻度线
    label("$" + string(i) + "$", ((i-1)*(4/9), 0,-0.1));  // 添加刻度标签
}

// 添加 x 轴标签
label("$Time$", (2,-0.2,-0.3));
label("$Start\_time$", (-0.8,0.8,-0.2));
label("$Cost\_time$", (-1,0.2,1));

// 定义轨迹点与 x 轴的 10 个点对应

triple[] points = {
    (0, 1.1081053214, 0.4500918727),
    (0.4444444444, 1.0595485882, 0.77496661),
    (0.8888888889, 0.8089879063, 1.1455717397),
    (1.3333333333, 0.9284232209, 0.9881328913),
    (1.7777777778, 0.8918946786, 0.3366118777),
    (2.2222222222, 0.9102536766, 1.3661389652),
    (2.6666666667, 1.1142746058, 0.6338610348),
    (3.1111111111, 1.6298631491, 1.25397557),
    (3.5555555556, 1.787589636, 1.8350708442),
    (4, 0.6860726901, 0.8900827229)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1777991043, 0.6428330556),
    (0.4444444444, 1.1204715245, 0.6338610348),
    (0.8888888889, 0.9881328913, 0.6516268117),
    (1.3333333333, 1.0958428304, 1.0178039682),
    (1.7777777778, 0.5425964137, 0.9344448153),
    (2.2222222222, 0.9524253441, 0.7608975995),
    (2.6666666667, 0.5187864154, 0.564870242),
    (3.1111111111, 1.5209243416, 1.1875969245),
    (3.5555555556, 0.7318084089, 0.8089879063),
    (4, 0.7664003613, 0.4479429594)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4141437444, 1.0836708428),
    (0.4444444444, 1.1910120937, 1.4040715568),
    (0.8888888889, 1.3661389652, 1.0958428304),
    (1.3333333333, 1.0595485882, 0.9821960318),
    (1.7777777778, 0.8287335876, 0.9940671063),
    (2.2222222222, 1.4690983238, 1.2756874683),
    (2.6666666667, 0.5755110625, 0.4342199962),
    (3.1111111111, 1.5527638817, 1.5527638817),
    (3.5555555556, 0.5062071281, 0.9344448153),
    (4, 0.6021507957, 0.7237544271)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4937928719, 1.619805772),
    (0.4444444444, 1.1142746058, 1.0118671087),
    (0.8888888889, 0.8287335876, 1.0178039682),
    (1.3333333333, 1.2320315815, 0.8544282603),
    (1.7777777778, 0.232476943, 0.6153324361),
    (2.2222222222, 0.8857253942, 1.0958428304),
    (2.6666666667, 0.5425964137, 0.9881328913),
    (3.1111111111, 1.216293833, 1.3471384292),
    (3.5555555556, 0.2507601471, 1.3571669444),
    (4, 0.3699515547, 0.260837433)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5205547536, 1.4460916883),
    (0.4444444444, 1.1455717397, 0.6428330556),
    (0.8888888889, 1.1712664124, 0.8733021547),
    (1.3333333333, 1.0059328937, 0.8089879063),
    (1.7777777778, 0.8980380465, 0.7608975995),
    (2.2222222222, 1.4460916883, 1.1142746058),
    (2.6666666667, 0.6602533881, 0.7167173699),
    (3.1111111111, 1.23109971, 0.9944807008),
    (3.5555555556, 1.0059328937, 0.7608975995),
    (4, 0.8586782576, 0.6703190838)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3483731883, 0.9404514118),
    (0.4444444444, 1.1019619535, 0.7887593284),
    (0.8888888889, 1.0059328937, 0.8352203718),
    (1.3333333333, 0.7887593284, 0.7679684185),
    (1.7777777778, 0.7243125317, 0.4173916178),
    (2.2222222222, 0.8607539595, 1.0237447997),
    (2.6666666667, 0.5425964137, 0.6811530255),
    (3.1111111111, 1.2697291762, 1.0877242166),
    (3.5555555556, 0.1013003807, 0.7243125317),
    (4, 0.1358580679, 0.6373880481)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2181042243, 1.0897463234),
    (0.4444444444, 1.2607898392, 0.9643562786),
    (0.8888888889, 1.3229552183, 0.9163291572),
    (1.3333333333, 1.1266978453, 0.2507601471),
    (1.7777777778, 1, 0.8156198524),
    (2.2222222222, 1.0059328937, 1.1583364078),
    (2.6666666667, 1.0655551847, 0.7465226249),
    (3.1111111111, 1.1875969245, 0.9883617877),
    (3.5555555556, 0.6516268117, 0.6516268117),
    (4, 0.6703190838, 0.6860726901)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3067209471, 0.7608975995),
    (0.4444444444, 1.435129758, 1.2756874683),
    (0.8888888889, 1.0296909368, 1.1976976108),
    (1.3333333333, 0.9464444491, 0.7243125317),
    (1.7777777778, 0.6428330556, 1.2044394932),
    (2.2222222222, 1.1777991043, 1.4040715568),
    (2.6666666667, 0.9762552003, 0.8733021547),
    (3.1111111111, 1.5700967054, 1.2859393044),
    (3.5555555556, 0.8607539595, 1.6633881223),
    (4, 0.8838451809, 0.716392928)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4040715568, 0.6338610348),
    (0.4444444444, 1.22503339, 0.7955605068),
    (0.8888888889, 1.0178039682, 0.7955605068),
    (1.3333333333, 1.22503339, 0.4500918727),
    (1.7777777778, 0.4931132021, 0.8918946786),
    (2.2222222222, 0.8416635922, 1.2320315815),
    (2.6666666667, 0.7818957757, 0.5425964137),
    (3.1111111111, 1.126512999, 1.0251850552),
    (3.5555555556, 0.8857253942, 1.2607898392),
    (4, 0.3514718165, 0.3514718165)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4244889375, 0.9041571696),
    (0.4444444444, 1.5348671048, 1.2112406716),
    (0.8888888889, 1.0897463234, 1.2534773751),
    (1.3333333333, 1.1329553904, 1.0296909368),
    (1.7777777778, 0.564870242, 0.9703090632),
    (2.2222222222, 1.4812135846, 1.2391024005),
    (2.6666666667, 0.6246986086, 0.8287335876),
    (3.1111111111, 1.8956630523, 1.5209243416),
    (3.5555555556, 1.1976976108, 1.6406354152),
    (4, 0.5162488282, 0.1588258096)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7012067491, 0.5309016762),
    (0.4444444444, 0.6932790529, 0.4931132021),
    (0.8888888889, 0.8222008957, 1.1266978453),
    (1.3333333333, 0.8795284755, 0.4342199962),
    (1.7777777778, 0.9193594994, 0.1649291558),
    (2.2222222222, 0.9284232209, 1.0296909368),
    (2.6666666667, 0.8980380465, 0.9762552003),
    (3.1111111111, 1.1667619774, 1.1397431709),
    (3.5555555556, 0.9223851651, 0.9163291572),
    (4, 0.3101851109, 0.2867503717)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1329553904, 0.9881328913),
    (0.4444444444, 1.2832826301, 0.8156198524),
    (0.8888888889, 1.0237447997, 0.6602533881),
    (1.3333333333, 0.8023023892, 0.9223851651),
    (1.7777777778, 0.3366118777, 0.8857253942),
    (2.2222222222, 0.9223851651, 1.3846675639),
    (2.6666666667, 0.9940671063, 0.9404514118),
    (3.1111111111, 1.006736303, 0.97002413),
    (3.5555555556, 0.380194228, 1.2681915911),
    (4, 0.4479429594, 0.6288167486)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5348671048, 1.600550296),
    (0.4444444444, 0.9583954939, 1.1843801476),
    (0.8888888889, 0.9223851651, 1.0118671087),
    (1.3333333333, 1.619805772, 0.380194228),
    (1.7777777778, 0.283190682, 0.5425964137),
    (2.2222222222, 0.8980380465, 1.1519345001),
    (2.6666666667, 0.283190682, 0.3593645848),
    (3.1111111111, 1.3026602119, 1.2018030917),
    (3.5555555556, 0.5858562556, 0.9583954939),
    (4, 0.6112081523, 0.5434660666)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6852275105, 0.6602533881),
    (0.4444444444, 1.0475746559, 0.9881328913),
    (0.8888888889, 0.7955605068, 0.8023023892),
    (1.3333333333, 0.9583954939, 0.5959284432),
    (1.7777777778, 0.7818957757, 0.9163291572),
    (2.2222222222, 0.7392101608, 1.0059328937),
    (2.6666666667, 0.399449704, 0.5309016762),
    (3.1111111111, 1.4181972811, 1.2462549974),
    (3.5555555556, 0.5367991317, 1.3397466119),
    (4, 0.7418222679, 0.8395284066)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4460916883, 1.1329553904),
    (0.4444444444, 1.2044394932, 1.1910120937),
    (0.8888888889, 1.1843801476, 1.0715767791),
    (1.3333333333, 0.9940671063, 0.9163291572),
    (1.7777777778, 0.6687229368, 0.9524253441),
    (2.2222222222, 0.8156198524, 1.1910120937),
    (2.6666666667, 0.6338610348, 0.9223851651),
    (3.1111111111, 1.25397557, 1.4294878048),
    (3.5555555556, 0.4422670155, 0.9821960318),
    (4, 0.583472753, 0.3101851109)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3229552183, 0.8980380465),
    (0.4444444444, 1.3229552183, 1),
    (0.8888888889, 1.0715767791, 0.7090174101),
    (1.3333333333, 0.9524253441, 0.5187864154),
    (1.7777777778, 0.7012067491, 0.8287335876),
    (2.2222222222, 0.7955605068, 1.0475746559),
    (2.6666666667, 0.8670446096, 0.9041571696),
    (3.1111111111, 1.0128757674, 0.9639133927),
    (3.5555555556, 0.5367991317, 1.0715767791),
    (4, 0.5929098309, 0.7594563851)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3661389652, 1.1910120937),
    (0.4444444444, 1.3397466119, 0.8980380465),
    (0.8888888889, 1.2987932509, 1.1392460405),
    (1.3333333333, 0.9344448153, 0.6153324361),
    (1.7777777778, 0.1013003807, 0.5062071281),
    (2.2222222222, 0.9643562786, 1.3571669444),
    (2.6666666667, 0.4651328952, 0.6932790529),
    (3.1111111111, 1.0624606776, 1.4786188729),
    (3.5555555556, 0.7818957757, 1.600550296),
    (4, 0.8069414507, 0.8330832862)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2534773751, 0.7243125317),
    (0.4444444444, 0.7679684185, 0.5858562556),
    (0.8888888889, 0.7608975995, 0.6338610348),
    (1.3333333333, 0.8287335876, 0.8480654999),
    (1.7777777778, 0.4723745208, 0.9223851651),
    (2.2222222222, 0.9940671063, 1.0178039682),
    (2.6666666667, 0.8287335876, 0.7537503456),
    (3.1111111111, 1.2617984034, 1.216293833),
    (3.5555555556, 0.7167173699, 1.4244889375),
    (4, 0.8003050892, 0.6458160614)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 0.8795284755),
    (0.4444444444, 1.3483731883, 1.4690983238),
    (0.8888888889, 1.1519345001, 1.2462496544),
    (1.3333333333, 0.7318084089, 0.4794452464),
    (1.7777777778, 0.7465226249, 0.7679684185),
    (2.2222222222, 0.9821960318, 1.1081053214),
    (2.6666666667, 0.1013003807, 0.6811530255),
    (3.1111111111, 0.9761348674, 1.0499655372),
    (3.5555555556, 0.212410364, 1.3942521925),
    (4, 0.4989094734, 0.7664003613)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3942521925, 1.2462496544),
    (0.4444444444, 1.4937928719, 1.3571669444),
    (0.8888888889, 1.3571669444, 1.2607898392),
    (1.3333333333, 0.8980380465, 0.6770447817),
    (1.7777777778, 0.9524253441, 0.8416635922),
    (2.2222222222, 1.5348671048, 1.3942521925),
    (2.6666666667, 0.5425964137, 0.8089879063),
    (3.1111111111, 1.5364162319, 1.4921053007),
    (3.5555555556, 0.1649291558, 1.787589636),
    (4, 0.3316391408, 0.4868641759)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2987932509, 1.1204715245),
    (0.4444444444, 1.7492398529, 1.4244889375),
    (0.8888888889, 1.1976976108, 1.1777991043),
    (1.3333333333, 0.9102536766, 0.6428330556),
    (1.7777777778, 0.7679684185, 0.2507601471),
    (2.2222222222, 1.7492398529, 1.3229552183),
    (2.6666666667, 0.8287335876, 0.9344448153),
    (3.1111111111, 1.2386313716, 1.4072374927),
    (3.5555555556, 0.8670446096, 1.619805772),
    (4, 0.7200837722, 0.5738258213)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3366118777, 0.9163291572),
    (0.4444444444, 1.1329553904, 0.4342199962),
    (0.8888888889, 0.8352203718, 0.7608975995),
    (1.3333333333, 0.8544282603, 0.7818957757),
    (1.7777777778, 1.0535555509, 0.7537503456),
    (2.2222222222, 1.0715767791, 0.7465226249),
    (2.6666666667, 0.5858562556, 0.380194228),
    (3.1111111111, 1.0006050785, 1.3565755071),
    (3.5555555556, 1.5499081273, 1.4812135846),
    (4, 0.4191239185, 0.4191239185)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 1.3942521925),
    (0.4444444444, 1.6406354152, 1.1777991043),
    (0.8888888889, 1.3483731883, 0.9583954939),
    (1.3333333333, 0.7818957757, 0.5062071281),
    (1.7777777778, 0.1649291558, 0.4931132021),
    (2.2222222222, 1.8350708442, 1.2681915911),
    (2.6666666667, 0.2507601471, 0.5539083117),
    (3.1111111111, 0, 0),
    (3.5555555556, 1.2534773751, 0.1013003807),
    (4, 0.4036320282, 0.8523240435)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4794452464, 0.3114530955),
    (0.4444444444, 0.5755110625, 0.8670446096),
    (0.8888888889, 1.0416045061, 1.1583364078),
    (1.3333333333, 0.8156198524, 0.7392101608),
    (1.7777777778, 0.7608975995, 0),
    (2.2222222222, 1.0776148349, 1.0836708428),
    (2.6666666667, 0.7955605068, 0.283190682),
    (3.1111111111, 1.0375443884, 1.3662224388),
    (3.5555555556, 1.1519345001, 1.5068867979),
    (4, 1.0251850552, 0.6541089557)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0178039682, 0.4931132021),
    (0.4444444444, 0.9284232209, 0.399449704),
    (0.8888888889, 1.1647796282, 0.4794452464),
    (1.3333333333, 0.8918946786, 1.1142746058),
    (1.7777777778, 1.0655551847, 0.7090174101),
    (2.2222222222, 1.619805772, 1.1647796282),
    (2.6666666667, 0.9643562786, 0.8156198524),
    (3.1111111111, 1.1134441918, 0.9333119571),
    (3.5555555556, 0.6057478075, 0.7887593284),
    (4, 0.7418222679, 0.521850979)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4690983238, 0.9940671063),
    (0.4444444444, 1.4460916883, 1.1712664124),
    (0.8888888889, 1.0475746559, 0.7818957757),
    (1.3333333333, 0.9643562786, 0.9583954939),
    (1.7777777778, 0.8795284755, 1.1777991043),
    (2.2222222222, 1.4574035863, 1.3147724895),
    (2.6666666667, 0.7205276973, 0.6602533881),
    (3.1111111111, 1.679210827, 1.5700967054),
    (3.5555555556, 1.6406354152, 1.3067209471),
    (4, 0.8459413668, 0.2317278291)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9643562786, 0.8857253942),
    (0.4444444444, 1.2320315815, 1.0416045061),
    (0.8888888889, 1.2320315815, 0.9881328913),
    (1.3333333333, 0.7012067491, 0.8670446096),
    (1.7777777778, 0.4500918727, 0.8089879063),
    (2.2222222222, 0.8222008957, 1),
    (2.6666666667, 0.380194228, 0.4931132021),
    (3.1111111111, 1.1331068094, 1.126512999),
    (3.5555555556, 0.6932790529, 1.716809318),
    (4, 0.5328107674, 0.8838451809)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3753013914, 0.7679684185),
    (0.4444444444, 1.1976976108, 1.2909825899),
    (0.8888888889, 1.0655551847, 1.0535555509),
    (1.3333333333, 0.8222008957, 0.7955605068),
    (1.7777777778, 0.7955605068, 0.5858562556),
    (2.2222222222, 1.0897463234, 0.9583954939),
    (2.6666666667, 0.8089879063, 0.5858562556),
    (3.1111111111, 1.3862080833, 1.0750424818),
    (3.5555555556, 1.1329553904, 1.3147724895),
    (4, 0.7200837722, 0.7801170272)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6406354152, 1.0715767791),
    (0.4444444444, 1.5068867979, 1.3942521925),
    (0.8888888889, 1.435129758, 1.0356437214),
    (1.3333333333, 0.985164875, 1.0059328937),
    (1.7777777778, 0.6008685523, 0.380194228),
    (2.2222222222, 1.3942521925, 1.3312770632),
    (2.6666666667, 0.8857253942, 0.8795284755),
    (3.1111111111, 1.3662224388, 1.3965821935),
    (3.5555555556, 0.7955605068, 1.8986996193),
    (4, 0.8713083274, 0.4036320282)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.435129758, 1.2320315815),
    (0.4444444444, 1.3067209471, 1.1329553904),
    (0.8888888889, 1.2391024005, 1.0655551847),
    (1.3333333333, 0.77496661, 0.4651328952),
    (1.7777777778, 0.9583954939, 0.8670446096),
    (2.2222222222, 0.6687229368, 1.0715767791),
    (2.6666666667, 0.6811530255, 0.8480654999),
    (3.1111111111, 1.1397431709, 1.0562030792),
    (3.5555555556, 0.7887593284, 0.9464444491),
    (4, 0.6373880481, 0.5639538851)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9284232209, 0.283190682),
    (0.4444444444, 0.6729017692, 0.4651328952),
    (0.8888888889, 0.9314359837, 0.4342199962),
    (1.3333333333, 0.7955605068, 0.5858562556),
    (1.7777777778, 0.6153324361, 0.4500918727),
    (2.2222222222, 1.5826083822, 1.1455717397),
    (2.6666666667, 0.8287335876, 0.8918946786),
    (3.1111111111, 0.9944807008, 0.8586782576),
    (3.5555555556, 0.3366118777, 0.6246986086),
    (4, 0.6782498566, 0.1983251607)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3571669444, 1.0776148349),
    (0.4444444444, 1.2756874683, 0.5959284432),
    (0.8888888889, 1.1019619535, 1.1910120937),
    (1.3333333333, 1.0178039682, 1.0776148349),
    (1.7777777778, 0.8544282603, 0.9404514118),
    (2.2222222222, 0.9762552003, 1.0118671087),
    (2.6666666667, 0.7714763629, 0.7679684185),
    (3.1111111111, 1.4411387867, 1.4531840842),
    (3.5555555556, 0.6338610348, 1.0897463234),
    (4, 0.4614293872, 0.8618452459)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2320315815, 0.7012067491),
    (0.4444444444, 1.2462496544, 0.9940671063),
    (0.8888888889, 1.1392460405, 1.1019619535),
    (1.3333333333, 1.1142746058, 0.564870242),
    (1.7777777778, 0.8023023892, 1.2112406716),
    (2.2222222222, 0.9404514118, 1.2987932509),
    (2.6666666667, 0.9881328913, 0.7887593284),
    (3.1111111111, 1.2942321987, 1.1464244022),
    (3.5555555556, 0.6153324361, 1.3229552183),
    (4, 0.7594563851, 0.8003050892)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 2, 1.8350708442),
    (0.4444444444, 1.8350708442, 1.5068867979),
    (0.8888888889, 1.5348671048, 1.2832826301),
    (1.3333333333, 1.1976976108, 1.0958428304),
    (1.7777777778, 1.1081053214, 0.564870242),
    (2.2222222222, 1.6406354152, 1.3483731883),
    (2.6666666667, 1.0237447997, 0.9524253441),
    (3.1111111111, 1.1464244022, 1.4656625104),
    (3.5555555556, 1.0356437214, 1.5657800038),
    (4, 0.9394431816, 0.7346502981)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.619805772, 1.6633881223),
    (0.4444444444, 1.4040715568, 1.4574035863),
    (0.8888888889, 1.2909825899, 1.1519345001),
    (1.3333333333, 0.9163291572, 1.0535555509),
    (1.7777777778, 0.8416635922, 0.6057478075),
    (2.2222222222, 1.4244889375, 1.2909825899),
    (2.6666666667, 0.4794452464, 0.8023023892),
    (3.1111111111, 1.7417230994, 1.4181972811),
    (3.5555555556, 0.5187864154, 1.4141437444),
    (4, 0.5162488282, 0.3872843784)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5499081273, 1.2391024005),
    (0.4444444444, 1.1519345001, 1.3753013914),
    (0.8888888889, 1.2181042243, 1.1081053214),
    (1.3333333333, 0.7608975995, 0.9344448153),
    (1.7777777778, 0.380194228, 0.5755110625),
    (2.2222222222, 1.1976976108, 1.1777991043),
    (2.6666666667, 0.3243705185, 0.7318084089),
    (3.1111111111, 1.0437464854, 1.1199595093),
    (3.5555555556, 0.8918946786, 1.2987932509),
    (4, 0.260837433, 0.7089485501)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1843801476, 1.0475746559),
    (0.4444444444, 1.3312770632, 0.6516268117),
    (0.8888888889, 1.1777991043, 0.7318084089),
    (1.3333333333, 0.8670446096, 0.6852275105),
    (1.7777777778, 0.4085711774, 0.9284232209),
    (2.2222222222, 0.9464444491, 0.9881328913),
    (2.6666666667, 0.212410364, 0.8352203718),
    (3.1111111111, 1.1736478987, 0.9578012944),
    (3.5555555556, 1.4690983238, 0.8156198524),
    (4, 0.8135352611, 0.5538401768)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2391024005, 0.6770447817),
    (0.4444444444, 1.2987932509, 0.8222008957),
    (0.8888888889, 0.8670446096, 0.7243125317),
    (1.3333333333, 1.0715767791, 0.9464444491),
    (1.7777777778, 0.8089879063, 0.3114530955),
    (2.2222222222, 0.8733021547, 0.9940671063),
    (2.6666666667, 0.7537503456, 0.8980380465),
    (3.1111111111, 1.3112315114, 1.3199549421),
    (3.5555555556, 0.6428330556, 1.5348671048),
    (4, 0.5538401768, 0.6937932627)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7243125317, 0.7392101608),
    (0.4444444444, 0.9163291572, 1.2681915911),
    (0.8888888889, 0.8480654999, 0.5755110625),
    (1.3333333333, 0.8607539595, 0.7887593284),
    (1.7777777778, 0.5539083117, 0.7318084089),
    (2.2222222222, 0.8795284755, 0.7318084089),
    (2.6666666667, 0.6972579443, 1.0059328937),
    (3.1111111111, 0.5105604553, 0.8775875825),
    (3.5555555556, 0.564870242, 0.6602533881),
    (4, 0.8266040683, 0.4989094734)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5425964137, 0.1649291558),
    (0.4444444444, 0.8089879063, 0.283190682),
    (0.8888888889, 1.1266978453, 0.399449704),
    (1.3333333333, 0.7679684185, 0.5539083117),
    (1.7777777778, 0.4085711774, 0.7465226249),
    (2.2222222222, 0.7465226249, 0.6516268117),
    (2.6666666667, 0.3243705185, 0.4651328952),
    (3.1111111111, 0.7453820419, 0.8459413668),
    (3.5555555556, 0.4422670155, 0.8023023892),
    (4, 0.1983251607, 0.7936238579)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7090174101, 0.212410364),
    (0.4444444444, 1.1647796282, 0.3593645848),
    (0.8888888889, 1.0356437214, 0.5425964137),
    (1.3333333333, 0.8733021547, 0.3593645848),
    (1.7777777778, 0.9102536766, 0.4342199962),
    (2.2222222222, 0.8287335876, 1.1329553904),
    (2.6666666667, 1.0118671087, 0.7243125317),
    (3.1111111111, 1.0877242166, 0.8650057783),
    (3.5555555556, 0.7679684185, 1.2909825899),
    (4, 0.8200887508, 0.8135352611)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6885469045, 1.5657800038),
    (0.4444444444, 1.5826083822, 1.3661389652),
    (0.8888888889, 1.5826083822, 1.2044394932),
    (1.3333333333, 1.1204715245, 0.6687229368),
    (1.7777777778, 0.6852275105, 1.1843801476),
    (2.2222222222, 1.5068867979, 1.2044394932),
    (2.6666666667, 0.7887593284, 0.7818957757),
    (3.1111111111, 1.5885764436, 1.2777739686),
    (3.5555555556, 1.3571669444, 1.3846675639),
    (4, 0.3872843784, 0.7014168885)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1266978453, 0.77496661),
    (0.4444444444, 1.619805772, 1.22503339),
    (0.8888888889, 1.5499081273, 1.2320315815),
    (1.3333333333, 0.9223851651, 0.7090174101),
    (1.7777777778, 0.9762552003, 0.212410364),
    (2.2222222222, 1.716809318, 1.2112406716),
    (2.6666666667, 1.1329553904, 0.6057478075),
    (3.1111111111, 1.7812224505, 1.376094375),
    (3.5555555556, 1.8986996193, 1.4517019394),
    (4, 0.9333119571, 0.4743857496)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2044394932, 1.1081053214),
    (0.4444444444, 0.9762552003, 0.8416635922),
    (0.8888888889, 1.2681915911, 1),
    (1.3333333333, 0.8416635922, 0.6338610348),
    (1.7777777778, 0.77496661, 0.399449704),
    (2.2222222222, 0.4173916178, 0.6338610348),
    (2.6666666667, 1, 0.4794452464),
    (3.1111111111, 1.4072374927, 1.0624606776),
    (3.5555555556, 0.283190682, 0),
    (4, 0.2867503717, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0, 0.380194228),
    (0.4444444444, 1.2391024005, 0.6246986086),
    (0.8888888889, 1.1329553904, 0.3366118777),
    (1.3333333333, 0.7243125317, 0.9703090632),
    (1.7777777778, 0.5309016762, 0.4794452464),
    (2.2222222222, 0.9703090632, 1.0655551847),
    (2.6666666667, 1.0475746559, 0.8222008957),
    (3.1111111111, 1.0941068932, 0.9210233824),
    (3.5555555556, 0.4173916178, 0.4173916178),
    (4, 0.6541089557, 0.8266040683)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5068867979, 1.7492398529),
    (0.4444444444, 1.4812135846, 1.4812135846),
    (0.8888888889, 1.2607898392, 1.2681915911),
    (1.3333333333, 0.8480654999, 0.9524253441),
    (1.7777777778, 0.8156198524, 1.0535555509),
    (2.2222222222, 1.787589636, 1.4141437444),
    (2.6666666667, 0.8156198524, 0.9821960318),
    (3.1111111111, 1.1805918749, 1.2090110601),
    (3.5555555556, 0.5755110625, 1.5205547536),
    (4, 0.5434660666, 0.5105604553)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 0.7167173699),
    (0.4444444444, 1.3571669444, 1.0178039682),
    (0.8888888889, 0.9940671063, 0.8857253942),
    (1.3333333333, 0.7465226249, 0.6602533881),
    (1.7777777778, 0.5125577543, 0.9102536766),
    (2.2222222222, 0.8918946786, 1.3397466119),
    (2.6666666667, 0.7608975995, 0.6687229368),
    (3.1111111111, 1.3199549421, 1.1134441918),
    (3.5555555556, 0.7392101608, 2),
    (4, 0.7310372, 0.7346502981)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0897463234, 1.1519345001),
    (0.4444444444, 1.4244889375, 1.0059328937),
    (0.8888888889, 1.1455717397, 0.9404514118),
    (1.3333333333, 0.8089879063, 0.212410364),
    (1.7777777778, 0.4342199962, 1.1910120937),
    (2.2222222222, 1.4040715568, 1.2462496544),
    (2.6666666667, 1.1266978453, 0.5959284432),
    (3.1111111111, 1.3565755071, 1.2386313716),
    (3.5555555556, 0.6246986086, 1.4690983238),
    (4, 0.911778517, 0.6782498566)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0356437214, 0.7537503456),
    (0.4444444444, 0.7318084089, 0.5309016762),
    (0.8888888889, 1.1142746058, 0.5062071281),
    (1.3333333333, 0.9041571696, 0.283190682),
    (1.7777777778, 0.6852275105, 0.4651328952),
    (2.2222222222, 0.9881328913, 1.0897463234),
    (2.6666666667, 0.4931132021, 0.6153324361),
    (3.1111111111, 1.1199595093, 0.9516864724),
    (3.5555555556, 0.399449704, 0.7679684185),
    (4, 0.6937932627, 0.7524513356)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3147724895, 1.716809318),
    (0.4444444444, 1.6885469045, 1.4141437444),
    (0.8888888889, 1.5205547536, 1.2391024005),
    (1.3333333333, 1.0836708428, 0.9284232209),
    (1.7777777778, 0.6516268117, 0.7243125317),
    (2.2222222222, 1.5205547536, 1.3067209471),
    (2.6666666667, 0.6153324361, 0.7608975995),
    (3.1111111111, 1.6532978884, 1.5364162319),
    (3.5555555556, 0.9643562786, 1.7492398529),
    (4, 0.8395284066, 0.5328107674)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.716809318, 1.5826083822),
    (0.4444444444, 1.4690983238, 1.1583364078),
    (0.8888888889, 1.4460916883, 1.1843801476),
    (1.3333333333, 0.7537503456, 0.8980380465),
    (1.7777777778, 0.9193594994, 1),
    (2.2222222222, 1.5499081273, 1.1712664124),
    (2.6666666667, 0.8857253942, 0.8416635922),
    (3.1111111111, 1.2236553321, 1.1531529172),
    (3.5555555556, 0.7243125317, 1.5826083822),
    (4, 0.8775875825, 0.8069414507)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9464444491, 0.3593645848),
    (0.4444444444, 0.7955605068, 0.4794452464),
    (0.8888888889, 0.9494363266, 0.9344448153),
    (1.3333333333, 0.9404514118, 0.8156198524),
    (1.7777777778, 0.3366118777, 1.2181042243),
    (2.2222222222, 0.8670446096, 0.7392101608),
    (2.6666666667, 0.8857253942, 0.5187864154),
    (3.1111111111, 1.0562030792, 0.9271724927),
    (3.5555555556, 0.4794452464, 0.4500918727),
    (4, 0.4338652948, 0.6200933179)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5826083822, 1.3397466119),
    (0.4444444444, 1.2681915911, 1.0958428304),
    (0.8888888889, 1.22503339, 0.9940671063),
    (1.3333333333, 0.7392101608, 0.8352203718),
    (1.7777777778, 0.8352203718, 0.5539083117),
    (2.2222222222, 0.9583954939, 1.22503339),
    (2.6666666667, 0.6972579443, 0.9583954939),
    (3.1111111111, 1.5061829653, 1.3288401077),
    (3.5555555556, 0.4651328952, 1.4937928719),
    (4, 0.4868641759, 0.8618452459)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0595485882, 0.7318084089),
    (0.4444444444, 1.1583364078, 0.5539083117),
    (0.8888888889, 0.8416635922, 0.7887593284),
    (1.3333333333, 1.0776148349, 0.3114530955),
    (1.7777777778, 0.5125577543, 1.0237447997),
    (2.2222222222, 0.9041571696, 1.0535555509),
    (2.6666666667, 0.6811530255, 0.5062071281),
    (3.1111111111, 1.0499655372, 1.0687399327),
    (3.5555555556, 1.2987932509, 1.2756874683),
    (4, 0.7524513356, 0.1099213108)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2607898392, 0.4794452464),
    (0.4444444444, 0.380194228, 0.7243125317),
    (0.8888888889, 0.8918946786, 0.6932790529),
    (1.3333333333, 0, 0),
    (1.7777777778, 0.4723745208, 1.1647796282),
    (2.2222222222, 1.600550296, 1.1392460405),
    (2.6666666667, 0.6008685523, 0.8670446096),
    (3.1111111111, 1.2462549974, 1.2617984034),
    (3.5555555556, 0.6645071899, 1.3312770632),
    (4, 0.6622742915, 0.3316391408)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.77496661, 0.6687229368),
    (0.4444444444, 1.0267171214, 0.8287335876),
    (0.8888888889, 0.9404514118, 0.9284232209),
    (1.3333333333, 1.1019619535, 0.6972579443),
    (1.7777777778, 0.9464444491, 0.5309016762),
    (2.2222222222, 0.9344448153, 0.9762552003),
    (2.6666666667, 1.0356437214, 0.6516268117),
    (3.1111111111, 1.3471384292, 1.0128757674),
    (3.5555555556, 0.7537503456, 0.399449704),
    (4, 0, 0)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9762552003, 0.5959284432),
    (0.4444444444, 0.9102536766, 1.2832826301),
    (0.8888888889, 1.0595485882, 0.6246986086),
    (1.3333333333, 0.9762552003, 0.9762552003),
    (1.7777777778, 0.5755110625, 0.7955605068),
    (2.2222222222, 0.9163291572, 0.7167173699),
    (2.6666666667, 1.0296909368, 1.0178039682),
    (3.1111111111, 1.1069649739, 0.9394431816),
    (3.5555555556, 0.7012067491, 0.5858562556),
    (4, 0.9025038717, 0.8713083274)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.8986996193, 1.6885469045),
    (0.4444444444, 1.600550296, 1.4937928719),
    (0.8888888889, 1.5657800038, 1.2756874683),
    (1.3333333333, 1.0897463234, 0.8857253942),
    (1.7777777778, 1.0416045061, 0.5959284432),
    (2.2222222222, 1.6633881223, 1.2534773751),
    (2.6666666667, 0.9434495363, 0.1013003807),
    (3.1111111111, 2, 1.5885764436),
    (3.5555555556, 2, 1.6885469045),
    (4, 0.8650057783, 0.4614293872)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2681915911, 0.7818957757),
    (0.4444444444, 1.5657800038, 1.2044394932),
    (0.8888888889, 1.0836708428, 1.22503339),
    (1.3333333333, 1.0655551847, 0.399449704),
    (1.7777777778, 0.8857253942, 0.3593645848),
    (2.2222222222, 1.1910120937, 1.2181042243),
    (2.6666666667, 1.0535555509, 0.9102536766),
    (3.1111111111, 1.7083204309, 1.3378974644),
    (3.5555555556, 1.5068867979, 1.4517019394),
    (4, 0.6288167486, 0.3699515547)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0776148349, 0.6057478075),
    (0.4444444444, 1.6633881223, 1.2181042243),
    (0.8888888889, 1.0776148349, 1.2181042243),
    (1.3333333333, 1.0178039682, 0.8222008957),
    (1.7777777778, 0.3366118777, 0.1013003807),
    (2.2222222222, 1.5657800038, 1.1976976108),
    (2.6666666667, 0.8416635922, 0.7012067491),
    (3.1111111111, 1.6084091192, 1.3112315114),
    (3.5555555556, 1.8350708442, 1.435129758),
    (4, 0.5639538851, 0.6021507957)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4812135846, 1.787589636),
    (0.4444444444, 1.3942521925, 0.9223851651),
    (0.8888888889, 1.2832826301, 0.5309016762),
    (1.3333333333, 1.0178039682, 0.5755110625),
    (1.7777777778, 0.7167173699, 0.77496661),
    (2.2222222222, 1.1712664124, 1.0356437214),
    (2.6666666667, 0.7714763629, 0.9163291572),
    (3.1111111111, 1.2090110601, 1.23109971),
    (3.5555555556, 1.0715767791, 1.3483731883),
    (4, 0.6458160614, 0.6112081523)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3312770632, 1.1455717397),
    (0.4444444444, 1.4574035863, 1.0836708428),
    (0.8888888889, 1.3753013914, 0.9041571696),
    (1.3333333333, 1.0535555509, 0.1013003807),
    (1.7777777778, 0.5858562556, 0.9881328913),
    (2.2222222222, 1.4141437444, 1.2832826301),
    (2.6666666667, 0.9072081498, 0.9464444491),
    (3.1111111111, 1.0750424818, 1.5061829653),
    (3.5555555556, 0.8733021547, 1.5499081273),
    (4, 0.7936238579, 0.7453820419)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1647796282, 0.2507601471),
    (0.4444444444, 0.8670446096, 0.564870242),
    (0.8888888889, 0.9821960318, 0),
    (1.3333333333, 0.985164875, 0.8287335876),
    (1.7777777778, 0.6246986086, 0.7887593284),
    (2.2222222222, 0.6932790529, 0.6428330556),
    (2.6666666667, 0.4500918727, 1),
    (3.1111111111, 1.1599312329, 0.9455675593),
    (3.5555555556, 0.3593645848, 0.7818957757),
    (4, 0.2317278291, 0.6622742915)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9940671063, 1.0118671087),
    (0.4444444444, 1.3661389652, 1.3067209471),
    (0.8888888889, 1.3147724895, 0.9464444491),
    (1.3333333333, 0.9703090632, 0.3366118777),
    (1.7777777778, 0.6602533881, 1.0715767791),
    (2.2222222222, 1.1583364078, 1.1204715245),
    (2.6666666667, 0.9284232209, 0.9643562786),
    (3.1111111111, 1.0813700025, 1.0190248777),
    (3.5555555556, 1.0296909368, 1.3753013914),
    (4, 0.911778517, 0.8459413668)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5657800038, 1.6406354152),
    (0.4444444444, 1.5205547536, 1.435129758),
    (0.8888888889, 1.5068867979, 1.1712664124),
    (1.3333333333, 1.0416045061, 0.1649291558),
    (1.7777777778, 0.8480654999, 1.0475746559),
    (2.2222222222, 1.1843801476, 1.1019619535),
    (2.6666666667, 1.0958428304, 0.8857253942),
    (3.1111111111, 1.8301269492, 1.4411387867),
    (3.5555555556, 1.3753013914, 1.0416045061),
    (4, 1.031357739, 0.8775875825)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5062071281, 0.4342199962),
    (0.4444444444, 1.3147724895, 0.8857253942),
    (0.8888888889, 0.7167173699, 0.7465226249),
    (1.3333333333, 1.0326664139, 0.8416635922),
    (1.7777777778, 0.7465226249, 1.1976976108),
    (2.2222222222, 1.435129758, 1.1266978453),
    (2.6666666667, 0.6008685523, 0.8544282603),
    (3.1111111111, 1.3965821935, 1.1946662182),
    (3.5555555556, 0.7090174101, 1.4040715568),
    (4, 0.7732862827, 0.4338652948)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2756874683, 0.6852275105),
    (0.4444444444, 1.1777991043, 0.6057478075),
    (0.8888888889, 0.9762552003, 0.7392101608),
    (1.3333333333, 1.0326664139, 0.7167173699),
    (1.7777777778, 0.7465226249, 0.7167173699),
    (2.2222222222, 0.7818957757, 1.1843801476),
    (2.6666666667, 0.8544282603, 0.9703090632),
    (3.1111111111, 1.2777739686, 1.3026602119),
    (3.5555555556, 0.7465226249, 1.3661389652),
    (4, 0.7868953429, 0.7732862827)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1019619535, 0.6153324361),
    (0.4444444444, 0.9643562786, 0.8352203718),
    (0.8888888889, 1.0118671087, 0.77496661),
    (1.3333333333, 1.0475746559, 0.8795284755),
    (1.7777777778, 0.7318084089, 0.283190682),
    (2.2222222222, 1.8986996193, 1.3753013914),
    (2.6666666667, 0.9524253441, 0.6428330556),
    (3.1111111111, 1.2859393044, 1.031357739),
    (3.5555555556, 1.435129758, 1.2832826301),
    (4, 0.5738258213, 0.583472753)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3114530955, 0.1013003807),
    (0.4444444444, 0.4794452464, 0.5425964137),
    (0.8888888889, 0.7318084089, 0.6428330556),
    (1.3333333333, 1, 0.7537503456),
    (1.7777777778, 0.232476943, 0.9041571696),
    (2.2222222222, 0.7243125317, 0.7537503456),
    (2.6666666667, 0.4173916178, 0.5755110625),
    (3.1111111111, 1.1005198534, 0.9148632049),
    (3.5555555556, 0.6645071899, 0.5062071281),
    (4, 0.7801170272, 0.7868953429)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.7492398529, 1.3147724895),
    (0.4444444444, 1.4141437444, 1.2320315815),
    (0.8888888889, 1.2112406716, 1.0237447997),
    (1.3333333333, 0.8352203718, 0.4931132021),
    (1.7777777778, 0, 0.5187864154),
    (2.2222222222, 1.1204715245, 1.2607898392),
    (2.6666666667, 0, 0.6246986086),
    (3.1111111111, 1.4786188729, 1.3862080833),
    (3.5555555556, 0, 0.8918946786),
    (4, 0.1358580679, 0.5929098309)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1204715245, 1.2909825899),
    (0.4444444444, 0.6008685523, 0.8733021547),
    (0.8888888889, 0.399449704, 0.8287335876),
    (1.3333333333, 0.6246986086, 0.6516268117),
    (1.7777777778, 1.3846675639, 1.0595485882),
    (2.2222222222, 1.4937928719, 1.0416045061),
    (2.6666666667, 1.0715767791, 0.77496661),
    (3.1111111111, 1.4921053007, 1.1331068094),
    (3.5555555556, 1.4937928719, 0.8795284755),
    (4, 1.5364162319, 1.679210827)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8023023892, 1.22503339),
    (0.4444444444, 0.212410364, 0.4173916178),
    (0.8888888889, 0.5539083117, 0.1013003807),
    (1.3333333333, 0.6153324361, 0.8023023892),
    (1.7777777778, 0.9344448153, 0.6602533881),
    (2.2222222222, 0.3593645848, 0.4342199962),
    (2.6666666667, 0.9163291572, 0.212410364),
    (3.1111111111, 0.1983251607, 0.4191239185),
    (3.5555555556, 0.8416635922, 0.4342199962),
    (4, 1.2236553321, 1.3565755071)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4651328952, 0.8918946786),
    (0.4444444444, 0.2507601471, 0.7318084089),
    (0.8888888889, 0, 0.5959284432),
    (1.3333333333, 0.2507601471, 1.3753013914),
    (1.7777777778, 0.9881328913, 0.6516268117),
    (2.2222222222, 0, 0.212410364),
    (2.6666666667, 0.1649291558, 0),
    (3.1111111111, 0.1588258096, 0.1588258096),
    (3.5555555556, 0.7608975995, 0.283190682),
    (4, 1.2617984034, 1.4072374927)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0416045061, 0.5187864154),
    (0.4444444444, 0.8416635922, 0.8480654999),
    (0.8888888889, 0.4931132021, 1.1204715245),
    (1.3333333333, 0.4651328952, 1.8986996193),
    (1.7777777778, 1.0715767791, 1.1266978453),
    (2.2222222222, 0.7608975995, 0.7679684185),
    (2.6666666667, 0.6687229368, 1.0416045061),
    (3.1111111111, 0.9086905211, 0.6541089557),
    (3.5555555556, 0.8156198524, 0.9524253441),
    (4, 1.2859393044, 1.5527638817)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6932790529, 1.2534773751),
    (0.4444444444, 0.7090174101, 1.1392460405),
    (0.8888888889, 0.7679684185, 0.8222008957),
    (1.3333333333, 0.6008685523, 1.1647796282),
    (1.7777777778, 1.0836708428, 1.0416045061),
    (2.2222222222, 1.0836708428, 1.4690983238),
    (2.6666666667, 0.8480654999, 1.3229552183),
    (3.1111111111, 0.9271724927, 1.2697291762),
    (3.5555555556, 1.5657800038, 0.9404514118),
    (4, 1.5700967054, 1.5209243416)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0535555509, 1.2607898392),
    (0.4444444444, 0.5062071281, 0.9102536766),
    (0.8888888889, 0.3366118777, 1.0836708428),
    (1.3333333333, 0.5187864154, 1.1081053214),
    (1.7777777778, 1.0118671087, 1.0059328937),
    (2.2222222222, 0.4651328952, 0.4931132021),
    (2.6666666667, 0.6516268117, 1.2681915911),
    (3.1111111111, 0.6860726901, 0.8330832862),
    (3.5555555556, 0.9821960318, 1.0059328937),
    (4, 1.5885764436, 1.4921053007)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7818957757, 1.1712664124),
    (0.4444444444, 0.4173916178, 0.8089879063),
    (0.8888888889, 1.3312770632, 0.5187864154),
    (1.3333333333, 0.6687229368, 0.9404514118),
    (1.7777777778, 1.3942521925, 1.1142746058),
    (2.2222222222, 0.6057478075, 1.5205547536),
    (2.6666666667, 1.0178039682, 0.4173916178),
    (3.1111111111, 0.6200933179, 0.8395284066),
    (3.5555555556, 1.2112406716, 1.0535555509),
    (4, 1.6532978884, 1.7083204309)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5309016762, 0.6246986086),
    (0.4444444444, 0.399449704, 0.7608975995),
    (0.8888888889, 0.2507601471, 0.564870242),
    (1.3333333333, 0.4651328952, 1.3147724895),
    (1.7777777778, 1.0059328937, 0.8544282603),
    (2.2222222222, 0.4500918727, 0.5062071281),
    (2.6666666667, 0.9434495363, 0.7955605068),
    (3.1111111111, 0.6782498566, 0.6288167486),
    (3.5555555556, 1.0595485882, 0.4794452464),
    (4, 1.23109971, 1.1069649739)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.212410364, 0.5858562556),
    (0.4444444444, 0.564870242, 0),
    (0.8888888889, 0.7537503456, 0.4500918727),
    (1.3333333333, 0.6428330556, 1.3229552183),
    (1.7777777778, 0.9940671063, 0.6428330556),
    (2.2222222222, 0.7537503456, 0.4651328952),
    (2.6666666667, 1.1204715245, 1.0356437214),
    (3.1111111111, 0.97002413, 0.7524513356),
    (3.5555555556, 1.2756874683, 0.3114530955),
    (4, 1.2462549974, 0.9148632049)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9163291572, 0.9524253441),
    (0.4444444444, 2, 2),
    (0.8888888889, 0.9102536766, 1.1647796282),
    (1.3333333333, 0.5425964137, 1.3846675639),
    (1.7777777778, 1.4040715568, 1.1204715245),
    (2.2222222222, 0.1901110634, 0.4500918727),
    (2.6666666667, 0.9703090632, 1.3571669444),
    (3.1111111111, 0, 0),
    (3.5555555556, 1.716809318, 0.9881328913),
    (4, 2, 1.7812224505)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1392460405, 1.1392460405),
    (0.4444444444, 0.7608975995, 0.9041571696),
    (0.8888888889, 0.8023023892, 1.0776148349),
    (1.3333333333, 0.7167173699, 0.9041571696),
    (1.7777777778, 1.0776148349, 0.8480654999),
    (2.2222222222, 1, 1.4812135846),
    (2.6666666667, 1.0595485882, 1.4141437444),
    (3.1111111111, 0.6541089557, 1.2942321987),
    (3.5555555556, 1.4812135846, 0.9102536766),
    (4, 1.679210827, 1.4786188729)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6428330556, 0.5755110625),
    (0.4444444444, 0.6008685523, 1.1976976108),
    (0.8888888889, 0.6892692082, 1.1329553904),
    (1.3333333333, 0.5309016762, 0.9102536766),
    (1.7777777778, 1.1142746058, 0.6338610348),
    (2.2222222222, 0.3114530955, 1.4244889375),
    (2.6666666667, 0.8023023892, 0.4500918727),
    (3.1111111111, 0.6288167486, 1.0813700025),
    (3.5555555556, 0.9284232209, 1.0237447997),
    (4, 1.4181972811, 1.3471384292)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.380194228, 0.8607539595),
    (0.4444444444, 0.1013003807, 0.7392101608),
    (0.8888888889, 0.1013003807, 0.8607539595),
    (1.3333333333, 0.3114530955, 0.9643562786),
    (1.7777777778, 0.7090174101, 1.0118671087),
    (2.2222222222, 0.5755110625, 0.1013003807),
    (2.6666666667, 1.1392460405, 0.7090174101),
    (3.1111111111, 0.4479429594, 0.9761348674),
    (3.5555555556, 1.0416045061, 0.7012067491),
    (4, 1.25397557, 1.3862080833)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1583364078, 1.0958428304),
    (0.4444444444, 0.4931132021, 1.0535555509),
    (0.8888888889, 0.9643562786, 0.6852275105),
    (1.3333333333, 0.6516268117, 1.3397466119),
    (1.7777777778, 0.8222008957, 0.8023023892),
    (2.2222222222, 0.5539083117, 0.564870242),
    (2.6666666667, 0.9344448153, 0.9940671063),
    (3.1111111111, 0.4743857496, 0.521850979),
    (3.5555555556, 1.2462496544, 1.0475746559),
    (4, 1.3965821935, 1.4411387867)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9881328913, 1.8986996193),
    (0.4444444444, 0.5248991803, 0.3114530955),
    (0.8888888889, 0.4794452464, 0.212410364),
    (1.3333333333, 0.4342199962, 1.2909825899),
    (1.7777777778, 0.9041571696, 0.6932790529),
    (2.2222222222, 0.6153324361, 0.5309016762),
    (2.6666666667, 0.7205276973, 1.1266978453),
    (3.1111111111, 1.1531529172, 0.8713083274),
    (3.5555555556, 0.9132939473, 0.77496661),
    (4, 1.2697291762, 1.3288401077)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1519345001, 0.8670446096),
    (0.4444444444, 0.5539083117, 0.8023023892),
    (0.8888888889, 0.6153324361, 0.7012067491),
    (1.3333333333, 0.283190682, 1.2607898392),
    (1.7777777778, 1.0356437214, 0.7818957757),
    (2.2222222222, 0.3366118777, 0.6057478075),
    (2.6666666667, 0.9223851651, 0.8607539595),
    (3.1111111111, 0.3872843784, 0.6937932627),
    (3.5555555556, 1.0237447997, 0.5425964137),
    (4, 1.3199549421, 1.1005198534)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6153324361, 0.9344448153),
    (0.4444444444, 0.283190682, 1.1455717397),
    (0.8888888889, 0.380194228, 1.0897463234),
    (1.3333333333, 0.6852275105, 1.1455717397),
    (1.7777777778, 1.0475746559, 1.0897463234),
    (2.2222222222, 0.564870242, 0.2507601471),
    (2.6666666667, 0.7090174101, 0.2507601471),
    (3.1111111111, 0.7200837722, 0.3872843784),
    (3.5555555556, 1.2607898392, 0.6852275105),
    (4, 1.6084091192, 1.4656625104)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.22503339, 0.9703090632),
    (0.4444444444, 0.8480654999, 0.380194228),
    (0.8888888889, 1.3067209471, 0.8980380465),
    (1.3333333333, 0.6932790529, 0.8918946786),
    (1.7777777778, 0.9284232209, 1.0776148349),
    (2.2222222222, 0.4931132021, 0.5425964137),
    (2.6666666667, 0.7318084089, 1.0595485882),
    (3.1111111111, 0.9025038717, 0.9025038717),
    (3.5555555556, 1.619805772, 1.0595485882),
    (4, 1.7812224505, 1.8301269492)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9583954939, 0.399449704),
    (0.4444444444, 0.5248991803, 0.7465226249),
    (0.8888888889, 0.5959284432, 0.2507601471),
    (1.3333333333, 0.3366118777, 0.5425964137),
    (1.7777777778, 0.8670446096, 0.9643562786),
    (2.2222222222, 0.1013003807, 0.3366118777),
    (2.6666666667, 0.3593645848, 1.2391024005),
    (3.1111111111, 0.2867503717, 0.1099213108),
    (3.5555555556, 0.6770447817, 0.6932790529),
    (4, 1.1331068094, 1.3965821935)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6338610348, 1.1583364078),
    (0.4444444444, 0.1649291558, 0.9821960318),
    (0.8888888889, 0.5755110625, 1.0296909368),
    (1.3333333333, 0.1013003807, 1.4040715568),
    (1.7777777778, 0.8607539595, 0.8222008957),
    (2.2222222222, 0.2507601471, 0.4794452464),
    (2.6666666667, 0.6428330556, 0.3114530955),
    (3.1111111111, 0.260837433, 0.2317278291),
    (3.5555555556, 0.5959284432, 0.8544282603),
    (4, 1.8301269492, 1.6532978884)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8222008957, 0.7465226249),
    (0.4444444444, 0.9703090632, 0.8795284755),
    (0.8888888889, 0.5309016762, 0.9102536766),
    (1.3333333333, 0.4931132021, 1.4812135846),
    (1.7777777778, 0.8733021547, 1.0178039682),
    (2.2222222222, 0.380194228, 0.5187864154),
    (2.6666666667, 0.8733021547, 1.1204715245),
    (3.1111111111, 0.3101851109, 0.260837433),
    (3.5555555556, 0.9132939473, 0.8857253942),
    (4, 1.5527638817, 1.8956630523)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8416635922, 0.8733021547),
    (0.4444444444, 1.1843801476, 0.7679684185),
    (0.8888888889, 0.7428772632, 0.7167173699),
    (1.3333333333, 0.4085711774, 1.4574035863),
    (1.7777777778, 1.0296909368, 0.9464444491),
    (2.2222222222, 0.5425964137, 0.9703090632),
    (2.6666666667, 0.7392101608, 1.0715767791),
    (3.1111111111, 0.6937932627, 0.5328107674),
    (3.5555555556, 0.8287335876, 0.6153324361),
    (4, 1.4921053007, 1.376094375)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3593645848, 1.0059328937),
    (0.4444444444, 0.77496661, 0.9404514118),
    (0.8888888889, 0.8733021547, 0.9821960318),
    (1.3333333333, 0.380194228, 1.2534773751),
    (1.7777777778, 1.1329553904, 1.1392460405),
    (2.2222222222, 1.6885469045, 1.5068867979),
    (2.6666666667, 1.0806405006, 1.0475746559),
    (3.1111111111, 1.4531840842, 1.7083204309),
    (3.5555555556, 1.4574035863, 1.0178039682),
    (4, 1.5209243416, 1.5791815461)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8319825694, 0.9821960318),
    (0.4444444444, 1.0416045061, 1.0595485882),
    (0.8888888889, 1.2756874683, 1.2112406716),
    (1.3333333333, 0.5062071281, 1.0118671087),
    (1.7777777778, 1.1266978453, 1.1583364078),
    (2.2222222222, 0.6428330556, 0.283190682),
    (2.6666666667, 1.1455717397, 1.3483731883),
    (3.1111111111, 1.4656625104, 1.6532978884),
    (3.5555555556, 1.4141437444, 1.0356437214),
    (4, 0, 0)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8480654999, 0.4651328952),
    (0.4444444444, 0.3366118777, 0.7537503456),
    (0.8888888889, 0.3114530955, 0.5858562556),
    (1.3333333333, 0.564870242, 1.0475746559),
    (1.7777777778, 0.9703090632, 0.9762552003),
    (2.2222222222, 0.5187864154, 0.380194228),
    (2.6666666667, 0.8607539595, 0.1649291558),
    (3.1111111111, 0.3699515547, 0.3101851109),
    (3.5555555556, 1.0776148349, 0.7090174101),
    (4, 1.6298631491, 1.4294878048)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1, 0.7887593284),
    (0.4444444444, 0.7465226249, 0.7818957757),
    (0.8888888889, 0.7428772632, 0.6153324361),
    (1.3333333333, 0.5858562556, 1.1583364078),
    (1.7777777778, 1.0897463234, 1.0356437214),
    (2.2222222222, 0.5062071281, 0.5959284432),
    (2.6666666667, 1.1081053214, 1.0535555509),
    (3.1111111111, 0.6703190838, 0.6458160614),
    (3.5555555556, 1.0958428304, 0.5309016762),
    (4, 1.4786188729, 1.3662224388)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7608975995, 1.1843801476),
    (0.4444444444, 0.4342199962, 1.2391024005),
    (0.8888888889, 0.5187864154, 0.9762552003),
    (1.3333333333, 0.4651328952, 1.1843801476),
    (1.7777777778, 0.9821960318, 1.1019619535),
    (2.2222222222, 0.5309016762, 1.4574035863),
    (2.6666666667, 0.9821960318, 1.2832826301),
    (3.1111111111, 0.4989094734, 1.6298631491),
    (3.5555555556, 1.3483731883, 1.0296909368),
    (4, 1.7083204309, 1.5061829653)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0655551847, 1.1019619535),
    (0.4444444444, 0.5858562556, 1.0897463234),
    (0.8888888889, 0.7243125317, 1.0416045061),
    (1.3333333333, 0.1649291558, 0.6057478075),
    (1.7777777778, 0.9404514118, 1.1081053214),
    (2.2222222222, 0.6338610348, 1.5348671048),
    (2.6666666667, 0.4342199962, 1.3067209471),
    (3.1111111111, 1.376094375, 1.2236553321),
    (3.5555555556, 0.8980380465, 0.9940671063),
    (4, 1.3862080833, 1.6298631491)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0118671087, 0.564870242),
    (0.4444444444, 0.6153324361, 0.6153324361),
    (0.8888888889, 0.283190682, 0.4651328952),
    (1.3333333333, 0.6602533881, 1.7492398529),
    (1.7777777778, 0.7887593284, 0.8607539595),
    (2.2222222222, 0.4342199962, 0.5858562556),
    (2.6666666667, 0.564870242, 1.0237447997),
    (3.1111111111, 0.9210233824, 0.5639538851),
    (3.5555555556, 1.3067209471, 0.3366118777),
    (4, 1.2386313716, 1.3199549421)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4422670155, 0.3366118777),
    (0.4444444444, 0.4500918727, 0.1649291558),
    (0.8888888889, 0.5425964137, 0.3114530955),
    (1.3333333333, 0.212410364, 1.8350708442),
    (1.7777777778, 0.6852275105, 0.6687229368),
    (2.2222222222, 0.1901110634, 0),
    (2.6666666667, 1.0806405006, 0.9284232209),
    (3.1111111111, 0.3417396402, 0.4614293872),
    (3.5555555556, 0.3114530955, 0.380194228),
    (4, 1.216293833, 1.0687399327)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.2507601471, 0.6516268117),
    (0.4444444444, 0.7167173699, 0.1013003807),
    (0.8888888889, 1.2534773751, 0.5539083117),
    (1.3333333333, 0.7090174101, 1.6885469045),
    (1.7777777778, 0.6338610348, 0.6246986086),
    (2.2222222222, 0.5858562556, 0.1649291558),
    (2.6666666667, 1.0059328937, 1.0118671087),
    (3.1111111111, 1.1946662182, 0.8963017747),
    (3.5555555556, 0.8222008957, 0.9223851651),
    (4, 1.2777739686, 0.9333119571)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0237447997, 1.0655551847),
    (0.4444444444, 0.6729017692, 1.0715767791),
    (0.8888888889, 1.1583364078, 1.0475746559),
    (1.3333333333, 0.4085711774, 0.7318084089),
    (1.7777777778, 1.1204715245, 1.1455717397),
    (2.2222222222, 0.7012067491, 1.4937928719),
    (2.6666666667, 1.0416045061, 1.0776148349),
    (3.1111111111, 0.7524513356, 0.4868641759),
    (3.5555555556, 1.1455717397, 0.7955605068),
    (4, 1.4531840842, 1.7417230994)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8575956151, 0.9762552003),
    (0.4444444444, 0.6246986086, 1.0296909368),
    (0.8888888889, 1.4574035863, 1.0059328937),
    (1.3333333333, 0.3593645848, 1.2681915911),
    (1.7777777778, 1.1455717397, 1.1329553904),
    (2.2222222222, 0.7128808491, 1.5499081273),
    (2.6666666667, 1.619805772, 1.3846675639),
    (3.1111111111, 1.4294878048, 1.1069649739),
    (3.5555555556, 1.5205547536, 1.0655551847),
    (4, 1.4656625104, 1.6084091192)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4173916178, 1),
    (0.4444444444, 1.0267171214, 1.0475746559),
    (0.8888888889, 0.9041571696, 1.1142746058),
    (1.3333333333, 0.8857253942, 1.1777991043),
    (1.7777777778, 1.0958428304, 1.1519345001),
    (2.2222222222, 0.4794452464, 0.6246986086),
    (2.6666666667, 1.1019619535, 0.7392101608),
    (3.1111111111, 0.3417396402, 0.5434660666),
    (3.5555555556, 0.5539083117, 1.0118671087),
    (4, 1.7417230994, 1.5791815461)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7392101608, 0.9643562786),
    (0.4444444444, 0.9041571696, 1.1519345001),
    (0.8888888889, 0.7887593284, 0.8544282603),
    (1.3333333333, 0.6770447817, 1.1019619535),
    (1.7777777778, 1.0237447997, 1.0958428304),
    (2.2222222222, 0.6770447817, 0.3593645848),
    (2.6666666667, 0.7465226249, 1.3147724895),
    (3.1111111111, 0.6458160614, 0.4743857496),
    (3.5555555556, 0.6852275105, 0.6338610348),
    (4, 1.4072374927, 1.3378974644)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5539083117, 0.5539083117),
    (0.4444444444, 0.3114530955, 0.212410364),
    (0.8888888889, 0.3593645848, 0.4173916178),
    (1.3333333333, 0.5755110625, 0.8607539595),
    (1.7777777778, 0.9643562786, 0.6770447817),
    (2.2222222222, 0.399449704, 0.3114530955),
    (2.6666666667, 0.5062071281, 0.3366118777),
    (3.1111111111, 0.7089485501, 0.2867503717),
    (3.5555555556, 0.77496661, 0.564870242),
    (4, 1.4411387867, 1.4181972811)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7537503456, 0.7090174101),
    (0.4444444444, 0.3593645848, 0.5755110625),
    (0.8888888889, 0.4577093786, 0.9223851651),
    (1.3333333333, 0.5539083117, 1.2987932509),
    (1.7777777778, 1.0595485882, 1.0836708428),
    (2.2222222222, 0.6246986086, 0.6153324361),
    (2.6666666667, 0.9072081498, 1.0296909368),
    (3.1111111111, 0.9394431816, 0.8523240435),
    (3.5555555556, 1.0655551847, 0.8416635922),
    (4, 1.5061829653, 1.4531840842)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1142746058, 0.9464444491),
    (0.4444444444, 0.7012067491, 0.2507601471),
    (0.8888888889, 0.4342199962, 0.4931132021),
    (1.3333333333, 0.6338610348, 0.7465226249),
    (1.7777777778, 1.0178039682, 0.9821960318),
    (2.2222222222, 0.5959284432, 0.399449704),
    (2.6666666667, 0.9583954939, 0.399449704),
    (3.1111111111, 0.6622742915, 0.5538401768),
    (3.5555555556, 1.0178039682, 0.9284232209),
    (4, 1.4294878048, 2)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6633881223, 2),
    (0.4444444444, 0.6602533881, 0.9163291572),
    (0.8888888889, 1.2044394932, 1.0595485882),
    (1.3333333333, 0.6008685523, 1.6406354152),
    (1.7777777778, 1.1019619535, 1.0655551847),
    (2.2222222222, 0.283190682, 0.5755110625),
    (2.6666666667, 1.1647796282, 1.3753013914),
    (3.1111111111, 1.0687399327, 1.679210827),
    (3.5555555556, 1.4460916883, 0.8980380465),
    (4, 1.8956630523, 1.5364162319)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8670446096, 1.4812135846),
    (0.4444444444, 1.0836708428, 1.8986996193),
    (0.8888888889, 1.600550296, 1.7492398529),
    (1.3333333333, 1.2534773751, 1.1976976108),
    (1.7777777778, 1.6406354152, 1.4690983238),
    (2.2222222222, 1.1329553904, 1.600550296),
    (2.6666666667, 1.5205547536, 1.716809318),
    (3.1111111111, 0.9455675593, 1.8301269492),
    (3.5555555556, 0.9762552003, 1.1976976108),
    (4, 1.0499655372, 1.2777739686)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9102536766, 1.3753013914),
    (0.4444444444, 1.8986996193, 1.6885469045),
    (0.8888888889, 1.6633881223, 1.6885469045),
    (1.3333333333, 1.3753013914, 1.4141437444),
    (1.7777777778, 1.7492398529, 1.5499081273),
    (2.2222222222, 1.3397466119, 1.716809318),
    (2.6666666667, 1.8986996193, 1.8350708442),
    (3.1111111111, 0.7310372, 1.7812224505),
    (3.5555555556, 0.9344448153, 1.1583364078),
    (4, 1.1397431709, 1.2090110601)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9344448153, 1.1142746058),
    (0.4444444444, 1.1266978453, 1.3846675639),
    (0.8888888889, 0.7818957757, 1.2909825899),
    (1.3333333333, 1.5068867979, 1.2320315815),
    (1.7777777778, 1.5826083822, 1.3661389652),
    (2.2222222222, 1.2462496544, 0.8795284755),
    (2.6666666667, 1.6406354152, 1.4460916883),
    (3.1111111111, 0.8900827229, 0.5105604553),
    (3.5555555556, 0.9940671063, 0.9041571696),
    (4, 1.0813700025, 1.2859393044)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6516268117, 1.1266978453),
    (0.4444444444, 0.8156198524, 0.5062071281),
    (0.8888888889, 0.8544282603, 1.3397466119),
    (1.3333333333, 1.2462496544, 1.787589636),
    (1.7777777778, 1.2320315815, 1.3312770632),
    (2.2222222222, 0.7887593284, 0.8480654999),
    (2.6666666667, 1.2320315815, 1.1976976108),
    (3.1111111111, 0.8330832862, 0.6703190838),
    (3.5555555556, 0.8544282603, 1.1392460405),
    (4, 1.1069649739, 1.2462549974)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6729017692, 0.9223851651),
    (0.4444444444, 1.0655551847, 0.4500918727),
    (0.8888888889, 0.6516268117, 0.283190682),
    (1.3333333333, 1.3397466119, 0.9970336357),
    (1.7777777778, 0.6008685523, 0.6852275105),
    (2.2222222222, 0.77496661, 0.7090174101),
    (2.6666666667, 1.1519345001, 1.0897463234),
    (3.1111111111, 0.4191239185, 0.6021507957),
    (3.5555555556, 1.2181042243, 0.5959284432),
    (4, 0.8900827229, 0.9271724927)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8980380465, 1.4244889375),
    (0.4444444444, 1.0897463234, 1.3147724895),
    (0.8888888889, 0.9583954939, 1.3147724895),
    (1.3333333333, 1.2756874683, 1.22503339),
    (1.7777777778, 1.6633881223, 1.3483731883),
    (2.2222222222, 1.2607898392, 0.8544282603),
    (2.6666666667, 1.4244889375, 1.2607898392),
    (3.1111111111, 0.4868641759, 0.1983251607),
    (3.5555555556, 1.3846675639, 0.7465226249),
    (4, 1.1805918749, 1.2018030917)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5755110625, 1.2681915911),
    (0.4444444444, 0.8918946786, 1.2607898392),
    (0.8888888889, 0.8795284755, 1.6406354152),
    (1.3333333333, 1.1519345001, 1.6633881223),
    (1.7777777778, 1.2181042243, 1.3753013914),
    (2.2222222222, 0.6852275105, 0.8156198524),
    (2.6666666667, 1.2044394932, 1.4812135846),
    (3.1111111111, 0.8003050892, 0.8135352611),
    (3.5555555556, 0.8023023892, 1.2181042243),
    (4, 1.0006050785, 1.1946662182)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6602533881, 1.0178039682),
    (0.4444444444, 0.6428330556, 1.1204715245),
    (0.8888888889, 1.6406354152, 1.5657800038),
    (1.3333333333, 1.1647796282, 0.7608975995),
    (1.7777777778, 1.8986996193, 1.4574035863),
    (2.2222222222, 1.2534773751, 0.8980380465),
    (2.6666666667, 1.716809318, 1.6633881223),
    (3.1111111111, 0.5929098309, 0.716392928),
    (3.5555555556, 1.6885469045, 1),
    (4, 1.3565755071, 1.1667619774)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1976976108, 1.0535555509),
    (0.4444444444, 0.7887593284, 0.6602533881),
    (0.8888888889, 1.4812135846, 0.8795284755),
    (1.3333333333, 2, 1.0237447997),
    (1.7777777778, 1.3753013914, 1.1712664124),
    (2.2222222222, 1.3753013914, 0.9404514118),
    (2.6666666667, 1.5657800038, 1.2462496544),
    (3.1111111111, 0.7868953429, 0.6112081523),
    (3.5555555556, 1.4244889375, 0.5755110625),
    (4, 1.3112315114, 1.0190248777)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2112406716, 1.5348671048),
    (0.4444444444, 0.8544282603, 1.3483731883),
    (0.8888888889, 1.0958428304, 1.5499081273),
    (1.3333333333, 1.2681915911, 1.0715767791),
    (1.7777777778, 1.787589636, 1.8986996193),
    (2.2222222222, 1.2681915911, 1.0776148349),
    (2.6666666667, 1.3753013914, 1.5205547536),
    (3.1111111111, 1.0190248777, 1.1599312329),
    (3.5555555556, 1.3147724895, 1.1081053214),
    (4, 1.2090110601, 1.126512999)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0836708428, 1.5499081273),
    (0.4444444444, 1.3753013914, 1.5499081273),
    (0.8888888889, 1.4040715568, 1.8350708442),
    (1.3333333333, 1.2909825899, 1.3661389652),
    (1.7777777778, 1.5205547536, 1.787589636),
    (2.2222222222, 0.8089879063, 0.8733021547),
    (2.6666666667, 1.1976976108, 1.6406354152),
    (3.1111111111, 0.9608575988, 0.9086905211),
    (3.5555555556, 1.3397466119, 1.2320315815),
    (4, 1.1946662182, 1.2386313716)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8575956151, 0.5425964137),
    (0.4444444444, 1.3846675639, 1.787589636),
    (0.8888888889, 1.4141437444, 1.716809318),
    (1.3333333333, 1.2987932509, 1.3312770632),
    (1.7777777778, 1.2909825899, 1.619805772),
    (2.2222222222, 0.8480654999, 0.8089879063),
    (2.6666666667, 1.2607898392, 1.1081053214),
    (3.1111111111, 0.7732862827, 0.583472753),
    (3.5555555556, 0.8089879063, 1.1204715245),
    (4, 0.8963017747, 0.9761348674)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3846675639, 0.8544282603),
    (0.4444444444, 1.787589636, 1.3397466119),
    (0.8888888889, 1.3942521925, 0.6687229368),
    (1.3333333333, 1.3571669444, 0.4173916178),
    (1.7777777778, 1.1712664124, 0.7392101608),
    (2.2222222222, 1.0416045061, 0.7012067491),
    (2.6666666667, 1.1910120937, 1.1142746058),
    (3.1111111111, 1.2018030917, 0.9822469657),
    (3.5555555556, 1.1266978453, 0.4931132021),
    (4, 1.3471384292, 1.1134441918)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7887593284, 0.8480654999),
    (0.4444444444, 0.8670446096, 0.6932790529),
    (0.8888888889, 0.6338610348, 0.8089879063),
    (1.3333333333, 1.1455717397, 1.3942521925),
    (1.7777777778, 1.22503339, 0.8795284755),
    (2.2222222222, 1.0237447997, 0.6932790529),
    (2.6666666667, 1.2987932509, 1.2756874683),
    (3.1111111111, 0.7594563851, 0.6860726901),
    (3.5555555556, 1.5348671048, 0.9762552003),
    (4, 1.3026602119, 1.0562030792)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.600550296, 0.8287335876),
    (0.4444444444, 1.1392460405, 0.7012067491),
    (0.8888888889, 0.77496661, 0.8416635922),
    (1.3333333333, 1.4040715568, 1.0836708428),
    (1.7777777778, 1.3397466119, 1.3942521925),
    (2.2222222222, 1.0118671087, 0.6852275105),
    (2.6666666667, 1.2681915911, 1.1329553904),
    (3.1111111111, 0.8200887508, 0.7936238579),
    (3.5555555556, 1.2391024005, 0.6428330556),
    (4, 1.006736303, 0.9455675593)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 1.5068867979),
    (0.4444444444, 1.0535555509, 1.0776148349),
    (0.8888888889, 1.3846675639, 0.8670446096),
    (1.3333333333, 1.4141437444, 1.5657800038),
    (1.7777777778, 1.4574035863, 1.6885469045),
    (2.2222222222, 0.7318084089, 0.6687229368),
    (2.6666666667, 1.2391024005, 1.0958428304),
    (3.1111111111, 0.5639538851, 0.4479429594),
    (3.5555555556, 1.0475746559, 0.7392101608),
    (4, 1.0750424818, 0.9086905211)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1455717397, 1.3483731883),
    (0.4444444444, 0.8857253942, 1.716809318),
    (0.8888888889, 0.9163291572, 1.600550296),
    (1.3333333333, 1.600550296, 1.4937928719),
    (1.7777777778, 1.619805772, 1.4460916883),
    (2.2222222222, 1.0958428304, 1.4460916883),
    (2.6666666667, 1.4574035863, 1.5499081273),
    (3.1111111111, 0.8395284066, 0.7382451684),
    (3.5555555556, 1.1142746058, 0.6057478075),
    (4, 0.7014168885, 1.1464244022)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1649291558, 0.9284232209),
    (0.4444444444, 0.8795284755, 0.9583954939),
    (0.8888888889, 0.7090174101, 1.3571669444),
    (1.3333333333, 1.1843801476, 1.5205547536),
    (1.7777777778, 1.2534773751, 1.435129758),
    (2.2222222222, 1.3661389652, 1.6406354152),
    (2.6666666667, 1.600550296, 1.600550296),
    (3.1111111111, 0.2317278291, 1.1805918749),
    (3.5555555556, 1.5826083822, 1.1910120937),
    (4, 1.1875969245, 1.2617984034)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7167173699, 0.7955605068),
    (0.4444444444, 0.6516268117, 0.6770447817),
    (0.8888888889, 0.7012067491, 0.380194228),
    (1.3333333333, 1.6406354152, 1.1910120937),
    (1.7777777778, 1.1583364078, 0.7012067491),
    (2.2222222222, 0.6602533881, 0.5539083117),
    (2.6666666667, 1.0897463234, 1.0836708428),
    (3.1111111111, 0.8838451809, 0.6782498566),
    (3.5555555556, 1.1392460405, 0.3593645848),
    (4, 1.0687399327, 0.8963017747)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9404514118, 1.4690983238),
    (0.4444444444, 1.0715767791, 1.5348671048),
    (0.8888888889, 0.8857253942, 1.3942521925),
    (1.3333333333, 1.5348671048, 1.2391024005),
    (1.7777777778, 1.2987932509, 1.2909825899),
    (2.2222222222, 1.22503339, 0.7818957757),
    (2.6666666667, 1.4040715568, 1.2987932509),
    (3.1111111111, 0.4614293872, 0.3316391408),
    (3.5555555556, 0.9404514118, 1.2044394932),
    (4, 1.0624606776, 1.1736478987)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6246986086, 1.2112406716),
    (0.4444444444, 1, 1.3312770632),
    (0.8888888889, 1.4244889375, 1.3753013914),
    (1.3333333333, 1.2112406716, 1.2462496544),
    (1.7777777778, 1.1777991043, 1.4040715568),
    (2.2222222222, 1.2320315815, 0.8670446096),
    (2.6666666667, 1.2756874683, 1.1843801476),
    (3.1111111111, 0.8135352611, 0.7089485501),
    (3.5555555556, 0.9583954939, 1.0776148349),
    (4, 1.0562030792, 0.9578012944)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8795284755, 1.2044394932),
    (0.4444444444, 1.2909825899, 1.1266978453),
    (0.8888888889, 1.4937928719, 1.2987932509),
    (1.3333333333, 1.8986996193, 0.9970336357),
    (1.7777777778, 1.2756874683, 1.5348671048),
    (2.2222222222, 1.2987932509, 0.9102536766),
    (2.6666666667, 1.4460916883, 1.5068867979),
    (3.1111111111, 0.5538401768, 2),
    (3.5555555556, 1.1204715245, 1.1329553904),
    (4, 1.3288401077, 1.0499655372)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 1.2832826301),
    (0.4444444444, 1.1712664124, 1.4460916883),
    (0.8888888889, 0.6602533881, 1.6633881223),
    (1.3333333333, 1.3942521925, 0.8733021547),
    (1.7777777778, 1.4141437444, 2),
    (2.2222222222, 1.3229552183, 0.9223851651),
    (2.6666666667, 1.4937928719, 1.3397466119),
    (3.1111111111, 0.8266040683, 0.8266040683),
    (3.5555555556, 0.8480654999, 1.22503339),
    (4, 1.1199595093, 1.1397431709)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1910120937, 1.0595485882),
    (0.4444444444, 1.2534773751, 0.5187864154),
    (0.8888888889, 1.4690983238, 0.9524253441),
    (1.3333333333, 1.716809318, 1.2044394932),
    (1.7777777778, 1.2044394932, 1.0296909368),
    (2.2222222222, 1.2181042243, 0.8857253942),
    (2.6666666667, 1.8350708442, 1.787589636),
    (3.1111111111, 0.7382451684, 0.6622742915),
    (3.5555555556, 1.4040715568, 1.1712664124),
    (4, 1.3378974644, 1.3026602119)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1013003807, 0.8352203718),
    (0.4444444444, 0.9821960318, 0.6852275105),
    (0.8888888889, 0.6428330556, 0.3593645848),
    (1.3333333333, 1.2607898392, 1.2756874683),
    (1.7777777778, 1.2607898392, 1.2607898392),
    (2.2222222222, 0.7128808491, 0.4173916178),
    (2.6666666667, 1.2112406716, 1.1519345001),
    (3.1111111111, 0.9516864724, 0.7310372),
    (3.5555555556, 1.0836708428, 0.7318084089),
    (4, 0.9210233824, 0.9210233824)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4422670155, 1.1647796282),
    (0.4444444444, 0.9223851651, 1.1019619535),
    (0.8888888889, 1.1910120937, 0.7679684185),
    (1.3333333333, 1.1081053214, 1.4460916883),
    (1.7777777778, 1.2391024005, 1.22503339),
    (2.2222222222, 1.0535555509, 0.7887593284),
    (2.6666666667, 1.2181042243, 1.1583364078),
    (3.1111111111, 0.1099213108, 0.7732862827),
    (3.5555555556, 0.4931132021, 0.8222008957),
    (4, 0.4743857496, 0.9944807008)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5187864154, 1.435129758),
    (0.4444444444, 0.5425964137, 1.1142746058),
    (0.8888888889, 0.6246986086, 1.4460916883),
    (1.3333333333, 1.1712664124, 1.3483731883),
    (1.7777777778, 1.4244889375, 1.5657800038),
    (2.2222222222, 1.2044394932, 1.7492398529),
    (2.6666666667, 1.6633881223, 2),
    (3.1111111111, 0.4338652948, 1.1667619774),
    (3.5555555556, 1, 1.1519345001),
    (4, 0.6200933179, 1.1805918749)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.283190682, 1.2987932509),
    (0.4444444444, 1.0059328937, 1.2534773751),
    (0.8888888889, 0.4577093786, 1.4690983238),
    (1.3333333333, 1.3067209471, 0.6972579443),
    (1.7777777778, 1.600550296, 1.2987932509),
    (2.2222222222, 1.2909825899, 0.9041571696),
    (2.6666666667, 1.3942521925, 1.4574035863),
    (3.1111111111, 0.8713083274, 1.0941068932),
    (3.5555555556, 1.2832826301, 1.1777991043),
    (4, 1.0877242166, 1.1875969245)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.399449704, 0.8222008957),
    (0.4444444444, 0.9911002466, 1.0655551847),
    (0.8888888889, 0.9703090632, 1.3067209471),
    (1.3333333333, 1.3661389652, 1.0655551847),
    (1.7777777778, 1.3147724895, 1.2756874683),
    (2.2222222222, 1.0356437214, 0.8023023892),
    (2.6666666667, 1.2832826301, 1.1647796282),
    (3.1111111111, 0.521850979, 0.4036320282),
    (3.5555555556, 0.9703090632, 0.4651328952),
    (4, 1.0437464854, 1.23109971)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2462496544, 1.2181042243),
    (0.4444444444, 1.0958428304, 1.7492398529),
    (0.8888888889, 1.7492398529, 2),
    (1.3333333333, 1.4812135846, 2),
    (1.7777777778, 1.4460916883, 1.7492398529),
    (2.2222222222, 1.1019619535, 1.8986996193),
    (2.6666666667, 1.5348671048, 1.7492398529),
    (3.1111111111, 0.9608575988, 1.8956630523),
    (3.5555555556, 1.1712664124, 1.2391024005),
    (4, 1.1531529172, 1.3112315114)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9524253441, 1.3661389652),
    (0.4444444444, 0, 1.6633881223),
    (0.8888888889, 1.6885469045, 1.5205547536),
    (1.3333333333, 1.7492398529, 1.2181042243),
    (1.7777777778, 2, 1.5205547536),
    (2.2222222222, 2, 1.6885469045),
    (2.6666666667, 2, 1.8986996193),
    (3.1111111111, 1.3288401077, 1.0006050785),
    (3.5555555556, 1.7492398529, 1.1647796282),
    (4, 1.376094375, 1.216293833)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4931132021, 1.0416045061),
    (0.4444444444, 0.8670446096, 1.600550296),
    (0.8888888889, 1, 1.5068867979),
    (1.3333333333, 1.1392460405, 1.716809318),
    (1.7777777778, 1.3571669444, 1.600550296),
    (2.2222222222, 1.0595485882, 0.7955605068),
    (2.6666666667, 1.2909825899, 1.1777991043),
    (3.1111111111, 0.5434660666, 1.7417230994),
    (3.5555555556, 1.0118671087, 1.0836708428),
    (4, 0.8523240435, 0.97002413)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8733021547, 1.3571669444),
    (0.4444444444, 0.7537503456, 1.2987932509),
    (0.8888888889, 1.1081053214, 1.4040715568),
    (1.3333333333, 1.5657800038, 1.0416045061),
    (1.7777777778, 1.2462496544, 1.5068867979),
    (2.2222222222, 1.0475746559, 1.6633881223),
    (2.6666666667, 1.1843801476, 1.0655551847),
    (3.1111111111, 0.9333119571, 0.6373880481),
    (3.5555555556, 1.1777991043, 0.7167173699),
    (4, 1.0190248777, 1.0251850552)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8089879063, 1.0356437214),
    (0.4444444444, 0.9464444491, 1.5657800038),
    (0.8888888889, 1.8986996193, 1.5348671048),
    (1.3333333333, 1.787589636, 1.3571669444),
    (1.7777777778, 1.4937928719, 1.5826083822),
    (2.2222222222, 0.6516268117, 0.8352203718),
    (2.6666666667, 1.1712664124, 1.2534773751),
    (3.1111111111, 0.6021507957, 0.7868953429),
    (3.5555555556, 1.2320315815, 0.8733021547),
    (4, 0.7089485501, 1.25397557)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8156198524, 1.3229552183),
    (0.4444444444, 0.7243125317, 1.619805772),
    (0.8888888889, 1.716809318, 1.787589636),
    (1.3333333333, 1.5205547536, 1.1204715245),
    (1.7777777778, 1.6885469045, 1.4937928719),
    (2.2222222222, 1.3846675639, 1.8350708442),
    (2.6666666667, 1.3147724895, 1.22503339),
    (3.1111111111, 0.8775875825, 0.8003050892),
    (3.5555555556, 1.1910120937, 1.2112406716),
    (4, 0.9944807008, 1.0941068932)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2832826301, 1.0296909368),
    (0.4444444444, 1.5499081273, 1.1081053214),
    (0.8888888889, 1.0535555509, 1.3229552183),
    (1.3333333333, 1.4244889375, 1.4244889375),
    (1.7777777778, 1.3229552183, 1.2832826301),
    (2.2222222222, 1.1142746058, 0.8918946786),
    (2.6666666667, 1.3661389652, 1.4040715568),
    (3.1111111111, 0.5738258213, 0.7594563851),
    (3.5555555556, 0.8352203718, 0.8352203718),
    (4, 0.9822469657, 0.9883617877)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3397466119, 1.4141437444),
    (0.4444444444, 1.0118671087, 1.2462496544),
    (0.8888888889, 0.8607539595, 1.4244889375),
    (1.3333333333, 1.8350708442, 1.5348671048),
    (1.7777777778, 1.3661389652, 1.4141437444),
    (2.2222222222, 1.1647796282, 1.5657800038),
    (2.6666666667, 1.5826083822, 1.3661389652),
    (3.1111111111, 1.0251850552, 1.1736478987),
    (3.5555555556, 1.6633881223, 0.9643562786),
    (4, 1.2018030917, 1.0750424818)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0715767791, 0.8156198524),
    (0.4444444444, 0.8352203718, 0.8544282603),
    (0.8888888889, 0.4173916178, 0.7537503456),
    (1.3333333333, 1.4460916883, 1.5826083822),
    (1.7777777778, 1.1647796282, 0.8352203718),
    (2.2222222222, 0.8544282603, 0.7243125317),
    (2.6666666667, 1.3067209471, 1.1455717397),
    (3.1111111111, 0.7014168885, 0.8200887508),
    (3.5555555556, 1.2044394932, 0.9703090632),
    (4, 0.97002413, 1.1331068094)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0059328937, 1.3312770632),
    (0.4444444444, 0.9344448153, 1.0356437214),
    (0.8888888889, 1.2462496544, 1.4574035863),
    (1.3333333333, 1.2391024005, 1.2832826301),
    (1.7777777778, 1.2681915911, 1.3067209471),
    (2.2222222222, 1.1519345001, 0.9344448153),
    (2.6666666667, 1.3483731883, 1.4244889375),
    (3.1111111111, 0.8523240435, 0.8069414507),
    (3.5555555556, 1.1081053214, 0.8480654999),
    (4, 1.0128757674, 1.0877242166)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5909251609, 0.8089879063),
    (0.4444444444, 0.8287335876, 1.6406354152),
    (0.8888888889, 1.787589636, 1.4937928719),
    (1.3333333333, 1.5499081273, 1.435129758),
    (1.7777777778, 1.8350708442, 1.6633881223),
    (2.2222222222, 1.3312770632, 1.5826083822),
    (2.6666666667, 1.5499081273, 1.619805772),
    (3.1111111111, 0.583472753, 0.7664003613),
    (3.5555555556, 1.1019619535, 1.1843801476),
    (4, 1.1667619774, 1.1531529172)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7679684185, 1.0237447997),
    (0.4444444444, 0.6852275105, 0.8918946786),
    (0.8888888889, 0.5062071281, 0.8918946786),
    (1.3333333333, 1.1910120937, 0.77496661),
    (1.7777777778, 1.4812135846, 1.2391024005),
    (2.2222222222, 1.2391024005, 0.9163291572),
    (2.6666666667, 1.1583364078, 1.4937928719),
    (3.1111111111, 0.8069414507, 0.7014168885),
    (3.5555555556, 0.9464444491, 0.5539083117),
    (4, 0.9455675593, 0.9394431816)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.4574035863),
    (0.4444444444, 0.8980380465, 1.3229552183),
    (0.8888888889, 0.9494363266, 1.435129758),
    (1.3333333333, 1.5826083822, 1.1392460405),
    (1.7777777778, 1.716809318, 1.4244889375),
    (2.2222222222, 1.3571669444, 1.619805772),
    (2.6666666667, 1.787589636, 1.6885469045),
    (3.1111111111, 0.9148632049, 1.6084091192),
    (3.5555555556, 1.22503339, 0.2507601471),
    (4, 1.1464244022, 1.2697291762)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7465226249, 0.4173916178),
    (0.4444444444, 0.8023023892, 0.3366118777),
    (0.8888888889, 0.6892692082, 0.1649291558),
    (1.3333333333, 1.4574035863, 1.0897463234),
    (1.7777777778, 1.1519345001, 0.9583954939),
    (2.2222222222, 0.7679684185, 0.6602533881),
    (2.6666666667, 1.2534773751, 1.1392460405),
    (3.1111111111, 0.7801170272, 0.5929098309),
    (3.5555555556, 0.9524253441, 0.5187864154),
    (4, 0.9516864724, 1.0006050785)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2909825899, 0.6932790529),
    (0.4444444444, 0.9524253441, 1.1647796282),
    (0.8888888889, 0.9314359837, 1.3312770632),
    (1.3333333333, 1.6633881223, 1.1712664124),
    (1.7777777778, 1.435129758, 1.3397466119),
    (2.2222222222, 1.0296909368, 0.8607539595),
    (2.6666666667, 1.6885469045, 1.5657800038),
    (3.1111111111, 1.031357739, 0.8900827229),
    (3.5555555556, 1.3312770632, 0.8607539595),
    (4, 1.2942321987, 1.0437464854)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1712664124, 1.4040715568),
    (0.4444444444, 0.9404514118, 0.9464444491),
    (0.8888888889, 0.8980380465, 1.3483731883),
    (1.3333333333, 1.3846675639, 1.5499081273),
    (1.7777777778, 1.1843801476, 1.2462496544),
    (2.2222222222, 1.0655551847, 0.8416635922),
    (2.6666666667, 1.2462496544, 1.1712664124),
    (3.1111111111, 0.6373880481, 0.7237544271),
    (3.5555555556, 1.1843801476, 1.1455717397),
    (4, 1.0375443884, 1.031357739)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.787589636, 1.3067209471),
    (0.4444444444, 0.9911002466, 0.9703090632),
    (0.8888888889, 0.1649291558, 0.9703090632),
    (1.3333333333, 1.2832826301, 0.6246986086),
    (1.7777777778, 1.3067209471, 1.3147724895),
    (2.2222222222, 1.2756874683, 0.8287335876),
    (2.6666666667, 1.435129758, 1.2320315815),
    (3.1111111111, 0.8586782576, 1.0375443884),
    (3.5555555556, 1.1583364078, 0.7537503456),
    (4, 0.9883617877, 1.0813700025)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6729017692, 0.9583954939),
    (0.4444444444, 0.7392101608, 0.8607539595),
    (0.8888888889, 0.8156198524, 0.9643562786),
    (1.3333333333, 1.2181042243, 1.2112406716),
    (1.7777777778, 1.5499081273, 1.3571669444),
    (2.2222222222, 1.1455717397, 0.9821960318),
    (2.6666666667, 1.3571669444, 1.2909825899),
    (3.1111111111, 0.7936238579, 0.7801170272),
    (3.5555555556, 1.3942521925, 0.6770447817),
    (4, 1.1005198534, 1.006736303)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9041571696, 1.1777991043),
    (0.4444444444, 0.4651328952, 0.7167173699),
    (0.8888888889, 0.5858562556, 0.8480654999),
    (1.3333333333, 1.3483731883, 1.4690983238),
    (1.7777777778, 1.4690983238, 1.3846675639),
    (2.2222222222, 1.3067209471, 1.0595485882),
    (2.6666666667, 1.3397466119, 1.2044394932),
    (3.1111111111, 0.7200837722, 0.4338652948),
    (3.5555555556, 1.1647796282, 0.8670446096),
    (4, 1.0941068932, 1.0375443884)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9703090632, 0),
    (0.4444444444, 1.2181042243, 0.9344448153),
    (0.8888888889, 1.3397466119, 1.3661389652),
    (1.3333333333, 1.2044394932, 1.5068867979),
    (1.7777777778, 1.2112406716, 1.2534773751),
    (2.2222222222, 1.1266978453, 1.787589636),
    (2.6666666667, 1.7492398529, 1.5348671048),
    (3.1111111111, 1.3378974644, 1.0437464854),
    (3.5555555556, 1.600550296, 1.1266978453),
    (4, 0.9578012944, 1.2942321987)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8319825694, 0.8416635922),
    (0.4444444444, 1.1081053214, 1.0237447997),
    (0.8888888889, 0.6687229368, 1.3846675639),
    (1.3333333333, 1.1777991043, 1.3067209471),
    (1.7777777778, 1.1910120937, 1.2681915911),
    (2.2222222222, 0.8352203718, 0.8222008957),
    (2.6666666667, 1.1777991043, 1.4690983238),
    (3.1111111111, 0.7664003613, 0.5738258213),
    (3.5555555556, 1.2681915911, 0.212410364),
    (4, 1.126512999, 0.9639133927)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0475746559, 0.9102536766),
    (0.4444444444, 1.0178039682, 0.7090174101),
    (0.8888888889, 0.6770447817, 0.6057478075),
    (1.3333333333, 1.3229552183, 0.5309016762),
    (1.7777777778, 1.5348671048, 1.2320315815),
    (2.2222222222, 1.1392460405, 0.9464444491),
    (2.6666666667, 1.4141437444, 1.2181042243),
    (3.1111111111, 0.8650057783, 0.6200933179),
    (3.5555555556, 1.0535555509, 1.1019619535),
    (4, 1.1134441918, 0.9822469657)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9821960318, 1.2756874683),
    (0.4444444444, 1.0356437214, 0.9284232209),
    (0.8888888889, 0.6057478075, 1.5826083822),
    (1.3333333333, 1.4690983238, 1.1519345001),
    (1.7777777778, 1.5068867979, 1.8350708442),
    (2.2222222222, 1.1081053214, 1.435129758),
    (2.6666666667, 1.4690983238, 1.3942521925),
    (3.1111111111, 0.8963017747, 1.1005198534),
    (3.5555555556, 1.3229552183, 1.2462496544),
    (4, 1.1736478987, 1.0624606776)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.564870242, 1.1976976108),
    (0.4444444444, 1.2112406716, 1.8350708442),
    (0.8888888889, 1.8350708442, 1.8986996193),
    (1.3333333333, 1.6885469045, 1.0356437214),
    (1.7777777778, 1.2832826301, 1.716809318),
    (2.2222222222, 1.3483731883, 0.9284232209),
    (2.6666666667, 1.4812135846, 1.5826083822),
    (3.1111111111, 0.8459413668, 0.3699515547),
    (3.5555555556, 1.2909825899, 1.2534773751),
    (4, 0.8330832862, 1.2236553321)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6057478075, 0.8023023892),
    (0.4444444444, 0.7818957757, 0.6687229368),
    (0.8888888889, 0.212410364, 0.8156198524),
    (1.3333333333, 1.1583364078, 1.1266978453),
    (1.7777777778, 1.1392460405, 0.8980380465),
    (2.2222222222, 1.0178039682, 0.6770447817),
    (2.6666666667, 1.22503339, 1.1019619535),
    (3.1111111111, 0.6112081523, 0.4989094734),
    (3.5555555556, 0.9041571696, 0.8287335876),
    (4, 0.9639133927, 0.9516864724)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7955605068, 0.5062071281),
    (0.4444444444, 0.6338610348, 0.9762552003),
    (0.8888888889, 0.564870242, 0.6770447817),
    (1.3333333333, 1.3312770632, 1.0595485882),
    (1.7777777778, 1.1976976108, 0.8733021547),
    (2.2222222222, 0.8023023892, 0.77496661),
    (2.6666666667, 1.3846675639, 1.2112406716),
    (3.1111111111, 0.5328107674, 0.3514718165),
    (3.5555555556, 0.9881328913, 0.1649291558),
    (4, 0.9761348674, 1.0128757674)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.8350708442, 1.5205547536),
    (0.4444444444, 1.716809318, 1.5826083822),
    (0.8888888889, 2, 1.619805772),
    (1.3333333333, 1.3147724895, 1.619805772),
    (1.7777777778, 1.5657800038, 1.6406354152),
    (2.2222222222, 1.2832826301, 2),
    (2.6666666667, 1.5068867979, 1.1910120937),
    (3.1111111111, 0.9822469657, 0.8838451809),
    (3.5555555556, 1.3661389652, 1.0958428304),
    (4, 1.1599312329, 1.1199595093)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8918946786, 1.4937928719),
    (0.4444444444, 1.0776148349, 0.9524253441),
    (0.8888888889, 1.619805772, 1.4141437444),
    (1.3333333333, 1.435129758, 1.1329553904),
    (1.7777777778, 1.3312770632, 1.3229552183),
    (2.2222222222, 1.2112406716, 0.9643562786),
    (2.6666666667, 1.3229552183, 1.3312770632),
    (3.1111111111, 0.9883617877, 1.006736303),
    (3.5555555556, 1.0897463234, 0.6687229368),
    (4, 0.9271724927, 0.9025038717)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5909251609, 1.3846675639),
    (0.4444444444, 0.8222008957, 1.5205547536),
    (0.8888888889, 1.1204715245, 1.4812135846),
    (1.3333333333, 1.4937928719, 1.600550296),
    (1.7777777778, 1.3483731883, 1.4812135846),
    (2.2222222222, 1.3147724895, 0.9524253441),
    (2.6666666667, 1.3312770632, 1.435129758),
    (3.1111111111, 0.4036320282, 0.7453820419),
    (3.5555555556, 0.8795284755, 1.1142746058),
    (4, 1.3662224388, 1.1599312329)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}

triple[] points = {
    (0, 1.2854397427, 1.031737289),
    (0.4444444444, 1.2733268812, 1.0636317828),
    (0.8888888889, 1.1557396377, 0.9849218094),
    (1.3333333333, 0.9393020419, 0.7097501233),
    (1.7777777778, 0.6900620298, 0.7400098097),
    (2.2222222222, 1.1934008289, 1.15983439),
    (2.6666666667, 0.7584776399, 0.7544183091),
    (3.1111111111, 1.3180074396, 1.2271229605),
    (3.5555555556, 0.8518135315, 1.2681700914),
    (4, 0.6302129543, 0.5947508912)
};
//dot(points[0], blue);

pen myPen = red + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9273165145, 1.1582368886),
    (0.4444444444, 0.9746252019, 1.2063959928),
    (0.8888888889, 1.0767103836, 1.306234096),
    (1.3333333333, 1.276937098, 1.226755535),
    (1.7777777778, 1.3901234817, 1.3616423051),
    (2.2222222222, 1.1136905632, 1.1303301405),
    (2.6666666667, 1.3830972964, 1.3847509456),
    (3.1111111111, 0.8135681186, 0.9385632064),
    (3.5555555556, 1.229548816, 0.9569483379),
    (4, 1.1739201495, 1.1957285442)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7438311147, 0.7712555822),
    (0.4444444444, 0.7014503295, 0.6748645151),
    (0.8888888889, 0.7201163902, 0.6494245221),
    (1.3333333333, 0.7396525782, 1.0764529881),
    (1.7777777778, 0.9035534617, 0.8776025556),
    (2.2222222222, 0.6302962733, 0.6506182184),
    (2.6666666667, 0.8295588384, 0.8324295455),
    (3.1111111111, 0.7397352517, 0.6986553551),
    (3.5555555556, 0.9020405501, 0.7289371689),
    (4, 1.1340579425, 1.150429065)
};
//dot(points[0], blue);

pen myPen = green + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}
