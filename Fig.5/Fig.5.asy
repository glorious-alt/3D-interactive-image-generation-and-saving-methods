import three;
usepackage("esvect");
size(10cm);
currentprojection = perspective(0, -1, 0);
draw(box(O, (4*X + 2*Y + 2*Z)), black);

// 手动绘制 x 轴刻度
for (int i = 1; i <= 10; ++i) {
    draw((i*(4/9)-(4/9), 0, 0)--(i*(4/9)-(4/9), 0, 0.1), black);  // 绘制刻度线
    label("$" + string(i) + "$", ((i-1)*(4/9), 0,-0.1));  // 添加刻度标签
}

// 添加 x 轴标签
label("$Time$", (2,-0.2,-0.3));
label("$Submission$", (-0.8,0.8,-0.2));
label("$Cost\_time$", (-1,0.2,1));

// 定义轨迹点与 x 轴的 10 个点对应

triple[] points = {
    (0, 1.1680174306, 0.4500918727),
    (0.4444444444, 1.2859393044, 0.77496661),
    (0.8888888889, 1.2236553321, 1.1455717397),
    (1.3333333333, 1.1876895938, 0.9881328913),
    (1.7777777778, 0.5187864154, 0.3366118777),
    (2.2222222222, 1.2657499273, 1.3661389652),
    (2.6666666667, 0.8416635922, 0.6338610348),
    (3.1111111111, 1.0406434124, 1.25397557),
    (3.5555555556, 0, 1.8350708442),
    (4, 0.5273705, 0.8900827229)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 0.6428330556),
    (0.4444444444, 0.755961689, 0.6338610348),
    (0.8888888889, 1.0593292721, 0.6516268117),
    (1.3333333333, 0.7428772632, 1.0178039682),
    (1.7777777778, 0.5187864154, 0.9344448153),
    (2.2222222222, 1.0655974966, 0.7608975995),
    (2.6666666667, 0.4500918727, 0.564870242),
    (3.1111111111, 1.1232313502, 1.1875969245),
    (3.5555555556, 0.9163291572, 0.8089879063),
    (4, 0.8650057783, 0.4479429594)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4931132021, 1.0836708428),
    (0.4444444444, 0.6021507957, 1.4040715568),
    (0.8888888889, 0.7629358153, 1.0958428304),
    (1.3333333333, 0.6852275105, 0.9821960318),
    (1.7777777778, 0.8826304984, 0.9940671063),
    (2.2222222222, 0.6937932627, 1.2756874683),
    (2.6666666667, 0.2507601471, 0.4342199962),
    (3.1111111111, 0.9486276129, 1.5527638817),
    (3.5555555556, 0.8639035426, 0.9344448153),
    (4, 0.6067016876, 0.7237544271)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 1.619805772),
    (0.4444444444, 1.7243948116, 1.0118671087),
    (0.8888888889, 1.3565755071, 1.0178039682),
    (1.3333333333, 0.4794452464, 0.8544282603),
    (1.7777777778, 0.8826304984, 0.6153324361),
    (2.2222222222, 1.4990659947, 1.0958428304),
    (2.6666666667, 0.9464444491, 0.9881328913),
    (3.1111111111, 1.1232313502, 1.3471384292),
    (3.5555555556, 1.2146644526, 1.3571669444),
    (4, 0.5273705, 0.260837433)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 1.4460916883),
    (0.4444444444, 0.467970379, 0.6428330556),
    (0.8888888889, 1.6532978884, 0.8733021547),
    (1.3333333333, 1.5276254792, 0.8089879063),
    (1.7777777778, 1.2571227368, 0.7608975995),
    (2.2222222222, 1.3199549421, 1.1142746058),
    (2.6666666667, 1.1943479843, 0.7167173699),
    (3.1111111111, 1.3026602119, 0.9944807008),
    (3.5555555556, 0.9583954939, 0.7608975995),
    (4, 0.6541089557, 0.6703190838)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 0.9404514118),
    (0.4444444444, 1.1364195285, 0.7887593284),
    (0.8888888889, 1.1464244022, 0.8352203718),
    (1.3333333333, 1.1392460405, 0.7679684185),
    (1.7777777778, 0.9643562786, 0.4173916178),
    (2.2222222222, 1.3518316261, 1.0237447997),
    (2.6666666667, 1.5136449116, 0.6811530255),
    (3.1111111111, 1.23109971, 1.0877242166),
    (3.5555555556, 1.5348671048, 0.7243125317),
    (4, 1.3471384292, 0.6373880481)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4517019394, 1.0897463234),
    (0.4444444444, 0.8963017747, 0.9643562786),
    (0.8888888889, 1.2657499273, 0.9163291572),
    (1.3333333333, 0.8733021547, 0.2507601471),
    (1.7777777778, 1.1583364078, 0.8156198524),
    (2.2222222222, 1.5364162319, 1.1583364078),
    (2.6666666667, 1.3527484993, 0.7465226249),
    (3.1111111111, 1.8301269492, 0.9883617877),
    (3.5555555556, 1.6300045071, 0.6516268117),
    (4, 1.2236553321, 0.6860726901)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1876895938, 0.7608975995),
    (0.4444444444, 0.8003050892, 1.2756874683),
    (0.8888888889, 1.2053979619, 1.1976976108),
    (1.3333333333, 0.9132939473, 0.7243125317),
    (1.7777777778, 0.6892692082, 1.2044394932),
    (2.2222222222, 0.5328107674, 1.4040715568),
    (2.6666666667, 1.2391024005, 0.8733021547),
    (3.1111111111, 1.5061829653, 1.2859393044),
    (3.5555555556, 0.7243125317, 1.6633881223),
    (4, 0.8200887508, 0.716392928)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4751008197, 0.6338610348),
    (0.4444444444, 1.2053979619, 0.7955605068),
    (0.8888888889, 1.5983086198, 0.7955605068),
    (1.3333333333, 1.264479259, 0.4500918727),
    (1.7777777778, 1.0867060527, 0.8918946786),
    (2.2222222222, 1.435266228, 1.2320315815),
    (2.6666666667, 1.0565504637, 0.5425964137),
    (3.1111111111, 1.0406434124, 1.0251850552),
    (3.5555555556, 1.1910120937, 1.2607898392),
    (4, 1.0159490284, 0.3514718165)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2285236371, 0.9041571696),
    (0.4444444444, 0.8003050892, 1.2112406716),
    (0.8888888889, 0.9944807008, 1.2534773751),
    (1.3333333333, 1.1173695016, 1.0296909368),
    (1.7777777778, 1.3991314477, 0.9703090632),
    (2.2222222222, 1.665906193, 1.2391024005),
    (2.6666666667, 1.5577329845, 0.8287335876),
    (3.1111111111, 0.3514718165, 1.5209243416),
    (3.5555555556, 1.2832826301, 1.6406354152),
    (4, 1.4593665102, 0.1588258096)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3753013914, 0.5309016762),
    (0.4444444444, 1.3378974644, 0.4931132021),
    (0.8888888889, 1.4531840842, 1.1266978453),
    (1.3333333333, 1.8350708442, 0.4342199962),
    (1.7777777778, 1.1392460405, 0.1649291558),
    (2.2222222222, 1.7812224505, 1.0296909368),
    (2.6666666667, 1.8986996193, 0.9762552003),
    (3.1111111111, 1.0750424818, 1.1397431709),
    (3.5555555556, 1.6633881223, 0.9163291572),
    (4, 1.5285703846, 0.2867503717)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0267171214, 0.9881328913),
    (0.4444444444, 0.6499789124, 0.8156198524),
    (0.8888888889, 1.0593292721, 0.6602533881),
    (1.3333333333, 1.3753013914, 0.9223851651),
    (1.7777777778, 1.1583364078, 0.8857253942),
    (2.2222222222, 0.1794939017, 1.3846675639),
    (2.6666666667, 1.2181042243, 0.9404514118),
    (3.1111111111, 1.23109971, 0.97002413),
    (3.5555555556, 1.2607898392, 1.2681915911),
    (4, 1.2053979619, 0.6288167486)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3846675639, 1.600550296),
    (0.4444444444, 0.2467392461, 1.1843801476),
    (0.8888888889, 1.0468537967, 1.0118671087),
    (1.3333333333, 0.380194228, 0.380194228),
    (1.7777777778, 0.6338610348, 0.5425964137),
    (2.2222222222, 0.7489249237, 1.1519345001),
    (2.6666666667, 0.9464444491, 0.3593645848),
    (3.1111111111, 0.8330832862, 1.2018030917),
    (3.5555555556, 1.0296909368, 0.9583954939),
    (4, 0.8650057783, 0.5434660666)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2909825899, 0.6602533881),
    (0.4444444444, 0.755961689, 0.9881328913),
    (0.8888888889, 1.2236553321, 0.8023023892),
    (1.3333333333, 0.6008685523, 0.5959284432),
    (1.7777777778, 1.0475746559, 0.9163291572),
    (2.2222222222, 1.1531529172, 1.0059328937),
    (2.6666666667, 1.0988994641, 0.5309016762),
    (3.1111111111, 1.4181972811, 1.2462549974),
    (3.5555555556, 1.2426662266, 1.3397466119),
    (4, 1.2859393044, 0.8395284066)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 1.1329553904),
    (0.4444444444, 1.513465642, 1.1910120937),
    (0.8888888889, 1.7083204309, 1.0715767791),
    (1.3333333333, 1.2391024005, 0.9163291572),
    (1.7777777778, 1.4460916883, 0.9524253441),
    (2.2222222222, 1.0941068932, 1.1910120937),
    (2.6666666667, 1.0565504637, 0.9223851651),
    (3.1111111111, 1.665906193, 1.4294878048),
    (3.5555555556, 1.2607898392, 0.9821960318),
    (4, 0.9086905211, 0.3101851109)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0.8980380465),
    (0.4444444444, 0.3787503473, 1),
    (0.8888888889, 0.7051939155, 0.7090174101),
    (1.3333333333, 0.8733021547, 0.5187864154),
    (1.7777777778, 0.4259343349, 0.8287335876),
    (2.2222222222, 0.7902656657, 1.0475746559),
    (2.6666666667, 0.9011005359, 0.9041571696),
    (3.1111111111, 1.0098049177, 0.9639133927),
    (3.5555555556, 1.1455717397, 1.0715767791),
    (4, 0.755961689, 0.7594563851)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1901110634, 1.1910120937),
    (0.4444444444, 0.5105604553, 0.8980380465),
    (0.8888888889, 0.2317278291, 1.1392460405),
    (1.3333333333, 0.3243705185, 0.6153324361),
    (1.7777777778, 0.1901110634, 0.5062071281),
    (2.2222222222, 0.3211346897, 1.3571669444),
    (2.6666666667, 0.3366118777, 0.6932790529),
    (3.1111111111, 0.6622742915, 1.4786188729),
    (3.5555555556, 0.7243125317, 1.600550296),
    (4, 0.6067016876, 0.8330832862)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3616299392, 0.7243125317),
    (0.4444444444, 1.23109971, 0.5858562556),
    (0.8888888889, 1.3243766758, 0.6338610348),
    (1.3333333333, 0.5594311332, 0.8480654999),
    (1.7777777778, 0.77496661, 0.9223851651),
    (2.2222222222, 1.0655974966, 1.0178039682),
    (2.6666666667, 0.8416635922, 0.7537503456),
    (3.1111111111, 0.6622742915, 1.216293833),
    (3.5555555556, 0.7679684185, 1.4244889375),
    (4, 1.0624606776, 0.6458160614)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9254063431, 0.8795284755),
    (0.4444444444, 1.544475646, 1.4690983238),
    (0.8888888889, 1.2900693477, 1.2462496544),
    (1.3333333333, 1.1876895938, 0.4794452464),
    (1.7777777778, 0.7280725506, 0.7679684185),
    (2.2222222222, 0.8775875825, 1.1081053214),
    (2.6666666667, 1.2391024005, 0.6811530255),
    (3.1111111111, 1.3199549421, 1.0499655372),
    (3.5555555556, 0.9940671063, 1.3942521925),
    (4, 0.7014168885, 0.7664003613)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5577329845, 1.2462496544),
    (0.4444444444, 0.97002413, 1.3571669444),
    (0.8888888889, 1.2386313716, 1.2607898392),
    (1.3333333333, 1.4192808631, 0.6770447817),
    (1.7777777778, 1.3107307918, 0.8416635922),
    (2.2222222222, 1.242431385, 1.3942521925),
    (2.6666666667, 1.2871191509, 0.8089879063),
    (3.1111111111, 0.9883617877, 1.4921053007),
    (3.5555555556, 1.5499081273, 1.787589636),
    (4, 1.1875969245, 0.4868641759)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1680174306, 1.1204715245),
    (0.4444444444, 0.4265826181, 1.4244889375),
    (0.8888888889, 1.0159490284, 1.1777991043),
    (1.3333333333, 1.0745936569, 0.6428330556),
    (1.7777777778, 0.9254063431, 0.2507601471),
    (2.2222222222, 0.5975540188, 1.3229552183),
    (2.6666666667, 0.7714763629, 0.9344448153),
    (3.1111111111, 1.2818411422, 1.4072374927),
    (3.5555555556, 0.9163291572, 1.619805772),
    (4, 1.1005198534, 0.5738258213)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0267171214, 0.9163291572),
    (0.4444444444, 0.97002413, 0.4342199962),
    (0.8888888889, 1.031357739, 0.7608975995),
    (1.3333333333, 0.5594311332, 0.7818957757),
    (1.7777777778, 0.6338610348, 0.7537503456),
    (2.2222222222, 1.0159490284, 0.7465226249),
    (2.6666666667, 0.9464444491, 0.380194228),
    (3.1111111111, 0.7382451684, 1.3565755071),
    (3.5555555556, 0.7243125317, 1.4812135846),
    (4, 0.8200887508, 0.4191239185)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2285236371, 1.3942521925),
    (0.4444444444, 0.8963017747, 1.1777991043),
    (0.8888888889, 1.0782030141, 0.9583954939),
    (1.3333333333, 0.8287335876, 0.5062071281),
    (1.7777777778, 0.6338610348, 0.4931132021),
    (2.2222222222, 0.9271724927, 1.2681915911),
    (2.6666666667, 1.1266978453, 0.5539083117),
    (3.1111111111, 0, 0),
    (3.5555555556, 0.232476943, 0.1013003807),
    (4, 0.8200887508, 0.8523240435)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 0.3114530955),
    (0.4444444444, 1.0782030141, 0.8670446096),
    (0.8888888889, 1.4294878048, 1.1583364078),
    (1.3333333333, 1.5914288226, 0.7392101608),
    (1.7777777778, 1.2794723027, 0),
    (2.2222222222, 1.4720778811, 1.0836708428),
    (2.6666666667, 2, 0.283190682),
    (3.1111111111, 1.1232313502, 1.3662224388),
    (3.5555555556, 1.3894315931, 1.5068867979),
    (4, 1.4593665102, 0.6541089557)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2498531951, 0.4931132021),
    (0.4444444444, 1.0782030141, 0.399449704),
    (0.8888888889, 0.8523240435, 0.4794452464),
    (1.3333333333, 0.6852275105, 1.1142746058),
    (1.7777777778, 1.0685640163, 0.7090174101),
    (2.2222222222, 1.0941068932, 1.1647796282),
    (2.6666666667, 1.1647796282, 0.8156198524),
    (3.1111111111, 1.6084091192, 0.9333119571),
    (3.5555555556, 1.6885469045, 0.7887593284),
    (4, 1.1005198534, 0.521850979)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3067209471, 0.9940671063),
    (0.4444444444, 1.0006050785, 1.1712664124),
    (0.8888888889, 1.8301269492, 0.7818957757),
    (1.3333333333, 1.1392460405, 0.9583954939),
    (1.7777777778, 1.1810834252, 1.1777991043),
    (2.2222222222, 1.5527638817, 1.3147724895),
    (2.6666666667, 1.1266978453, 0.6602533881),
    (3.1111111111, 1.1840865711, 1.5700967054),
    (3.5555555556, 0.8287335876, 1.3067209471),
    (4, 0.8869663603, 0.2317278291)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3483731883, 0.8857253942),
    (0.4444444444, 2, 1.0416045061),
    (0.8888888889, 1.6298631491, 0.9881328913),
    (1.3333333333, 1.787589636, 0.8670446096),
    (1.7777777778, 1.3753013914, 0.8089879063),
    (2.2222222222, 2, 1),
    (2.6666666667, 1.787589636, 0.4931132021),
    (3.1111111111, 2, 1.126512999),
    (3.5555555556, 1.787589636, 1.716809318),
    (4, 1.665906193, 0.8838451809)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0.7679684185),
    (0.4444444444, 0.6021507957, 1.2909825899),
    (0.8888888889, 0.4989094734, 1.0535555509),
    (1.3333333333, 0.1901110634, 0.7955605068),
    (1.7777777778, 0.1013003807, 0.5858562556),
    (2.2222222222, 0.7489249237, 0.9583954939),
    (2.6666666667, 0.3366118777, 0.5858562556),
    (3.1111111111, 1.1840865711, 1.0750424818),
    (3.5555555556, 0.5539083117, 1.3147724895),
    (4, 0.7014168885, 0.7801170272)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9583954939, 1.0715767791),
    (0.4444444444, 1.1069649739, 1.3942521925),
    (0.8888888889, 1.097309472, 1.0356437214),
    (1.3333333333, 0.9494363266, 1.0059328937),
    (1.7777777778, 0.9792261957, 0.380194228),
    (2.2222222222, 1.4181972811, 1.3312770632),
    (2.6666666667, 1.3188469745, 0.8795284755),
    (3.1111111111, 0.9486276129, 1.3965821935),
    (3.5555555556, 0.9940671063, 1.8986996193),
    (4, 0.6067016876, 0.4036320282)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6300045071, 1.2320315815),
    (0.4444444444, 1.8956630523, 1.1329553904),
    (0.8888888889, 1.5700967054, 1.0655551847),
    (1.3333333333, 0.8733021547, 0.4651328952),
    (1.7777777778, 1.0867060527, 0.8670446096),
    (2.2222222222, 1.0655974966, 1.0715767791),
    (2.6666666667, 0.6559603423, 0.8480654999),
    (3.1111111111, 1.23109971, 1.0562030792),
    (3.5555555556, 1.0685640163, 0.9464444491),
    (4, 0.755961689, 0.5639538851)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8384472847, 0.283190682),
    (0.4444444444, 1.25397557, 0.4651328952),
    (0.8888888889, 1.0468537967, 0.4342199962),
    (1.3333333333, 0.7818957757, 0.5858562556),
    (1.7777777778, 0.9643562786, 0.4500918727),
    (2.2222222222, 1.3333465725, 1.1455717397),
    (2.6666666667, 1.1266978453, 0.8918946786),
    (3.1111111111, 1.2578738582, 0.8586782576),
    (3.5555555556, 1.2756874683, 0.6246986086),
    (4, 0.7014168885, 0.1983251607)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9792261957, 1.0776148349),
    (0.4444444444, 1.1633398827, 0.5959284432),
    (0.8888888889, 1.031357739, 1.1910120937),
    (1.3333333333, 0.6852275105, 1.0776148349),
    (1.7777777778, 0.8826304984, 0.9404514118),
    (2.2222222222, 0.9853039509, 1.0118671087),
    (2.6666666667, 0.8416635922, 0.7679684185),
    (3.1111111111, 0.9486276129, 1.4531840842),
    (3.5555555556, 1.3027420557, 1.0897463234),
    (4, 1.0159490284, 0.8618452459)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0267171214, 0.7012067491),
    (0.4444444444, 1.2053979619, 0.9940671063),
    (0.8888888889, 0.9944807008, 1.1019619535),
    (1.3333333333, 0.6852275105, 0.564870242),
    (1.7777777778, 0.6338610348, 1.2112406716),
    (2.2222222222, 0.7489249237, 1.2987932509),
    (2.6666666667, 0.6559603423, 0.7887593284),
    (3.1111111111, 0.6622742915, 1.1464244022),
    (3.5555555556, 0.7679684185, 1.3229552183),
    (4, 0.755961689, 0.8003050892)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5367991317, 1.8350708442),
    (0.4444444444, 0.755961689, 1.5068867979),
    (0.8888888889, 0.6458160614, 1.2832826301),
    (1.3333333333, 1.1876895938, 1.0958428304),
    (1.7777777778, 0.8826304984, 0.564870242),
    (2.2222222222, 1.4018733017, 1.3483731883),
    (2.6666666667, 0.7714763629, 0.9524253441),
    (3.1111111111, 1.4786188729, 1.4656625104),
    (3.5555555556, 1.4632008683, 1.5657800038),
    (4, 0.5273705, 0.7346502981)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.8350708442, 1.6633881223),
    (0.4444444444, 1.3565755071, 1.4574035863),
    (0.8888888889, 1.7417230994, 1.1519345001),
    (1.3333333333, 1.264479259, 1.0535555509),
    (1.7777777778, 0.77496661, 0.6057478075),
    (2.2222222222, 1.7083204309, 1.2909825899),
    (2.6666666667, 1.3527484993, 0.8023023892),
    (3.1111111111, 1.1840865711, 1.4181972811),
    (3.5555555556, 1.2320315815, 1.4141437444),
    (4, 0.9086905211, 0.3872843784)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3067209471, 1.2391024005),
    (0.4444444444, 0.8003050892, 1.3753013914),
    (0.8888888889, 1.3565755071, 1.1081053214),
    (1.3333333333, 1.4751008197, 0.9344448153),
    (1.7777777778, 1.014835125, 0.5755110625),
    (2.2222222222, 0.9271724927, 1.1777991043),
    (2.6666666667, 1.2607898392, 0.7318084089),
    (3.1111111111, 1.5527638817, 1.1199595093),
    (3.5555555556, 1.0988994641, 1.2987932509),
    (4, 1.1005198534, 0.7089485501)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.0475746559),
    (0.4444444444, 0.467970379, 0.6516268117),
    (0.8888888889, 0.4989094734, 0.7318084089),
    (1.3333333333, 0.1901110634, 0.6852275105),
    (1.7777777778, 0.5187864154, 0.9284232209),
    (2.2222222222, 1.034449226, 0.9881328913),
    (2.6666666667, 0.7714763629, 0.8352203718),
    (3.1111111111, 0.1794939017, 0.9578012944),
    (3.5555555556, 0.6057478075, 0.8156198524),
    (4, 0.5273705, 0.5538401768)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5136449116, 0.6770447817),
    (0.4444444444, 0.9302433424, 0.8222008957),
    (0.8888888889, 0.3787503473, 0.7243125317),
    (1.3333333333, 1.5657800038, 0.9464444491),
    (1.7777777778, 0.8826304984, 0.3114530955),
    (2.2222222222, 1.4990659947, 0.9940671063),
    (2.6666666667, 0.7167173699, 0.8980380465),
    (3.1111111111, 0.9486276129, 1.3199549421),
    (3.5555555556, 1.1204715245, 1.5348671048),
    (4, 0.9086905211, 0.6937932627)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2498531951, 0.7392101608),
    (0.4444444444, 1.679210827, 1.2681915911),
    (0.8888888889, 1.5061829653, 0.5755110625),
    (1.3333333333, 0.9494363266, 0.7887593284),
    (1.7777777778, 0.5858562556, 0.7318084089),
    (2.2222222222, 1.8301269492, 0.7318084089),
    (2.6666666667, 1.1943479843, 1.0059328937),
    (3.1111111111, 1.0750424818, 0.8775875825),
    (3.5555555556, 0.9163291572, 0.6602533881),
    (4, 0.936378512, 0.4989094734)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 0.1649291558),
    (0.4444444444, 1.6298631491, 0.283190682),
    (0.8888888889, 1.2657499273, 0.399449704),
    (1.3333333333, 0.8733021547, 0.5539083117),
    (1.7777777778, 0.8189165748, 0.7465226249),
    (2.2222222222, 1.2657499273, 0.6516268117),
    (2.6666666667, 1.2871191509, 0.4651328952),
    (3.1111111111, 0.8963017747, 0.8459413668),
    (3.5555555556, 1.3527484993, 0.8023023892),
    (4, 0.8200887508, 0.7936238579)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 0.212410364),
    (0.4444444444, 0.6499789124, 0.3593645848),
    (0.8888888889, 0.6458160614, 0.5425964137),
    (1.3333333333, 0.6293044262, 0.3593645848),
    (1.7777777778, 0.6338610348, 0.4342199962),
    (2.2222222222, 0.8330832862, 1.1329553904),
    (2.6666666667, 0.985164875, 0.7243125317),
    (3.1111111111, 0.8963017747, 0.8650057783),
    (3.5555555556, 0.4931132021, 1.2909825899),
    (4, 0.5273705, 0.8135352611)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1, 1.5657800038),
    (0.4444444444, 1.0468537967, 1.3661389652),
    (0.8888888889, 1.0782030141, 1.2044394932),
    (1.3333333333, 1.4751008197, 0.6687229368),
    (1.7777777778, 1.3661389652, 1.1843801476),
    (2.2222222222, 0.4614293872, 1.2044394932),
    (2.6666666667, 1.1266978453, 0.7818957757),
    (3.1111111111, 1.5285703846, 1.2777739686),
    (3.5555555556, 1.600550296, 1.3846675639),
    (4, 1.2053979619, 0.7014168885)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4040715568, 0.77496661),
    (0.4444444444, 1.1069649739, 1.22503339),
    (0.8888888889, 0.8523240435, 1.2320315815),
    (1.3333333333, 1.2078324816, 0.7090174101),
    (1.7777777778, 0.8826304984, 0.212410364),
    (2.2222222222, 1.2053979619, 1.2112406716),
    (2.6666666667, 0.9464444491, 0.6057478075),
    (3.1111111111, 1.3662224388, 1.376094375),
    (3.5555555556, 1.3527484993, 1.4517019394),
    (4, 1.0624606776, 0.4743857496)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.716809318, 1.1081053214),
    (0.4444444444, 1.376094375, 0.8416635922),
    (0.8888888889, 1.4181972811, 1),
    (1.3333333333, 1.014835125, 0.6338610348),
    (1.7777777778, 1.2571227368, 0.399449704),
    (2.2222222222, 1.6298631491, 0.6338610348),
    (2.6666666667, 1.0565504637, 0.4794452464),
    (3.1111111111, 1.665906193, 1.0624606776),
    (3.5555555556, 1.1455717397, 0),
    (4, 1.4786188729, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5136449116, 0.380194228),
    (0.4444444444, 0.8963017747, 0.6246986086),
    (0.8888888889, 0.8681600685, 0.3366118777),
    (1.3333333333, 1.2987932509, 0.9703090632),
    (1.7777777778, 0.8826304984, 0.4794452464),
    (2.2222222222, 0.7902656657, 1.0655551847),
    (2.6666666667, 1.0565504637, 0.8222008957),
    (3.1111111111, 1.4531840842, 0.9210233824),
    (3.5555555556, 1.4090748391, 0.4173916178),
    (4, 1.0624606776, 0.8266040683)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3067209471, 1.7492398529),
    (0.4444444444, 1.7243948116, 1.4812135846),
    (0.8888888889, 0.8069414507, 1.2681915911),
    (1.3333333333, 1.4192808631, 0.9524253441),
    (1.7777777778, 1.5276254792, 1.0535555509),
    (2.2222222222, 0.1794939017, 1.4141437444),
    (2.6666666667, 1.2871191509, 0.9821960318),
    (3.1111111111, 1.1232313502, 1.2090110601),
    (3.5555555556, 0.8857253942, 1.5205547536),
    (4, 0.6541089557, 0.5105604553)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3243705185, 0.7167173699),
    (0.4444444444, 0.6499789124, 1.0178039682),
    (0.8888888889, 0.97002413, 0.8857253942),
    (1.3333333333, 0.6852275105, 0.6602533881),
    (1.7777777778, 0.8416635922, 0.9102536766),
    (2.2222222222, 1.0159490284, 1.3397466119),
    (2.6666666667, 0.7167173699, 0.6687229368),
    (3.1111111111, 0.3514718165, 1.1134441918),
    (3.5555555556, 0.7955605068, 2),
    (4, 0.4036320282, 0.7346502981)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.264479259, 1.1519345001),
    (0.4444444444, 0.2467392461, 1.0059328937),
    (0.8888888889, 0.4479429594, 0.9404514118),
    (1.3333333333, 0.9821960318, 0.212410364),
    (1.7777777778, 0.4259343349, 1.1910120937),
    (2.2222222222, 1.034449226, 1.2462496544),
    (2.6666666667, 0.1901110634, 0.5959284432),
    (3.1111111111, 1.1232313502, 1.2386313716),
    (3.5555555556, 0.8639035426, 1.4690983238),
    (4, 0.5273705, 0.6782498566)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8575956151, 0.7537503456),
    (0.4444444444, 0.755961689, 0.5309016762),
    (0.8888888889, 0.7629358153, 0.5062071281),
    (1.3333333333, 0.9821960318, 0.283190682),
    (1.7777777778, 0.77496661, 0.4651328952),
    (2.2222222222, 0.6937932627, 1.0897463234),
    (2.6666666667, 0.564870242, 0.6153324361),
    (3.1111111111, 1.0098049177, 0.9516864724),
    (3.5555555556, 1.1204715245, 0.7679684185),
    (4, 0.9669688464, 0.7524513356)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.787589636, 1.716809318),
    (0.4444444444, 1.2053979619, 1.4141437444),
    (0.8888888889, 1.3243766758, 1.2391024005),
    (1.3333333333, 0.9821960318, 0.9284232209),
    (1.7777777778, 0.9464444491, 0.7243125317),
    (2.2222222222, 1.3711292739, 1.3067209471),
    (2.6666666667, 0.8416635922, 0.7608975995),
    (3.1111111111, 1.0406434124, 1.5364162319),
    (3.5555555556, 1.1455717397, 1.7492398529),
    (4, 0.8869663603, 0.5328107674)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.264479259, 1.5826083822),
    (0.4444444444, 0.6499789124, 1.1583364078),
    (0.8888888889, 0.4479429594, 1.1843801476),
    (1.3333333333, 1.1647796282, 0.8980380465),
    (1.7777777778, 1.1976976108, 1),
    (2.2222222222, 1.1531529172, 1.1712664124),
    (2.6666666667, 1.2607898392, 0.8416635922),
    (3.1111111111, 1.6084091192, 1.1531529172),
    (3.5555555556, 1.5740656651, 1.5826083822),
    (4, 1.2462549974, 0.8069414507)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 0.3593645848),
    (0.4444444444, 0.6499789124, 0.4794452464),
    (0.8888888889, 0.829848063, 0.9344448153),
    (1.3333333333, 0.6852275105, 0.8156198524),
    (1.7777777778, 0.7280725506, 1.2181042243),
    (2.2222222222, 0.9271724927, 0.7392101608),
    (2.6666666667, 0.6559603423, 0.5187864154),
    (3.1111111111, 0.7382451684, 0.9271724927),
    (3.5555555556, 0.8287335876, 0.4500918727),
    (4, 0.8200887508, 0.6200933179)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 1.3397466119),
    (0.4444444444, 0.755961689, 1.0958428304),
    (0.8888888889, 1.2501028414, 0.9940671063),
    (1.3333333333, 0.6852275105, 0.8352203718),
    (1.7777777778, 0.9254063431, 0.5539083117),
    (2.2222222222, 0.7902656657, 1.22503339),
    (2.6666666667, 0.1901110634, 0.9583954939),
    (3.1111111111, 1.1840865711, 1.3288401077),
    (3.5555555556, 0.8287335876, 1.4937928719),
    (4, 1.1005198534, 0.8618452459)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2794723027, 0.7318084089),
    (0.4444444444, 0.55892837, 0.5539083117),
    (0.8888888889, 1.1232313502, 0.7887593284),
    (1.3333333333, 0.8287335876, 0.3114530955),
    (1.7777777778, 0.9464444491, 1.0237447997),
    (2.2222222222, 0.5328107674, 1.0535555509),
    (2.6666666667, 1.2871191509, 0.5062071281),
    (3.1111111111, 1.0750424818, 1.0687399327),
    (3.5555555556, 1.1712664124, 1.2756874683),
    (4, 0.1099213108, 0.1099213108)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0.4794452464),
    (0.4444444444, 0.97002413, 0.7243125317),
    (0.8888888889, 0.1358580679, 0.6932790529),
    (1.3333333333, 0, 0),
    (1.7777777778, 0.6338610348, 1.1647796282),
    (2.2222222222, 0.8330832862, 1.1392460405),
    (2.6666666667, 0.9464444491, 0.8670446096),
    (3.1111111111, 1.7417230994, 1.2617984034),
    (3.5555555556, 0.7955605068, 1.3312770632),
    (4, 0.755961689, 0.3316391408)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 0.6687229368),
    (0.4444444444, 0.3787503473, 0.8287335876),
    (0.8888888889, 0.8838451809, 0.9284232209),
    (1.3333333333, 0.6008685523, 0.6972579443),
    (1.7777777778, 0.3482549441, 0.5309016762),
    (2.2222222222, 1.2199644879, 0.9762552003),
    (2.6666666667, 0.8416635922, 0.6516268117),
    (3.1111111111, 0.6622742915, 1.0128757674),
    (3.5555555556, 0.8639035426, 0.399449704),
    (4, 0, 0)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2044394932, 0.5959284432),
    (0.4444444444, 1.5791815461, 1.2832826301),
    (0.8888888889, 1.1911233364, 0.6246986086),
    (1.3333333333, 0.9494363266, 0.9762552003),
    (1.7777777778, 0.9254063431, 0.7955605068),
    (2.2222222222, 1.3862080833, 0.7167173699),
    (2.6666666667, 1.4460916883, 1.0178039682),
    (3.1111111111, 1.1232313502, 0.9394431816),
    (3.5555555556, 0.8287335876, 0.5858562556),
    (4, 1.3471384292, 0.8713083274)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 1.6885469045),
    (0.4444444444, 1.1069649739, 1.4937928719),
    (0.8888888889, 1.2900693477, 1.2756874683),
    (1.3333333333, 0.8733021547, 0.8857253942),
    (1.7777777778, 1.1392460405, 0.5959284432),
    (2.2222222222, 1.1531529172, 1.2534773751),
    (2.6666666667, 0.1013003807, 0.1013003807),
    (3.1111111111, 1.3662224388, 1.5885764436),
    (3.5555555556, 1.2146644526, 1.6885469045),
    (4, 0.8200887508, 0.4614293872)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3312770632, 0.7818957757),
    (0.4444444444, 1.6084091192, 1.2044394932),
    (0.8888888889, 0.9394431816, 1.22503339),
    (1.3333333333, 0.9494363266, 0.399449704),
    (1.7777777778, 0.4259343349, 0.3593645848),
    (2.2222222222, 1.5791815461, 1.2181042243),
    (2.6666666667, 1.014835125, 0.9102536766),
    (3.1111111111, 1.2818411422, 1.3378974644),
    (3.5555555556, 1.0296909368, 1.4517019394),
    (4, 0.4036320282, 0.3699515547)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5826083822, 0.6057478075),
    (0.4444444444, 1.0468537967, 1.2181042243),
    (0.8888888889, 0.7051939155, 1.2181042243),
    (1.3333333333, 1.0745936569, 0.8222008957),
    (1.7777777778, 0.7280725506, 0.1013003807),
    (2.2222222222, 0.7489249237, 1.1976976108),
    (2.6666666667, 0.8416635922, 0.7012067491),
    (3.1111111111, 1.1232313502, 1.3112315114),
    (3.5555555556, 1.0296909368, 1.435129758),
    (4, 0.4036320282, 0.6021507957)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2044394932, 1.787589636),
    (0.4444444444, 0.5105604553, 0.9223851651),
    (0.8888888889, 0.8838451809, 0.5309016762),
    (1.3333333333, 0.6852275105, 0.5755110625),
    (1.7777777778, 0.8189165748, 0.77496661),
    (2.2222222222, 0.7489249237, 1.0356437214),
    (2.6666666667, 1.1647796282, 0.9163291572),
    (3.1111111111, 0.9883617877, 1.23109971),
    (3.5555555556, 1.0296909368, 1.3483731883),
    (4, 1.1633398827, 0.6112081523)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1876895938, 1.1455717397),
    (0.4444444444, 1.2859393044, 1.0836708428),
    (0.8888888889, 0.7382451684, 0.9041571696),
    (1.3333333333, 0.3243705185, 0.1013003807),
    (1.7777777778, 1.0296909368, 0.9881328913),
    (2.2222222222, 1.2859393044, 1.2832826301),
    (2.6666666667, 1.0867060527, 0.9464444491),
    (3.1111111111, 1.3662224388, 1.5061829653),
    (3.5555555556, 1.1910120937, 1.5499081273),
    (4, 0.8650057783, 0.7453820419)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 0.2507601471),
    (0.4444444444, 1.1633398827, 0.564870242),
    (0.8888888889, 0.9394431816, 0),
    (1.3333333333, 0.380194228, 0.8287335876),
    (1.7777777778, 0.9881328913, 0.7887593284),
    (2.2222222222, 0.8775875825, 0.6428330556),
    (2.6666666667, 1.3188469745, 1),
    (3.1111111111, 0.8330832862, 0.9455675593),
    (3.5555555556, 1.3354928101, 0.7818957757),
    (4, 1.1633398827, 0.6622742915)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 2, 1.0118671087),
    (0.4444444444, 1.4411387867, 1.3067209471),
    (0.8888888889, 1.5364162319, 0.9464444491),
    (1.3333333333, 1.3991314477, 0.3366118777),
    (1.7777777778, 1.3107307918, 1.0715767791),
    (2.2222222222, 1.8956630523, 1.1204715245),
    (2.6666666667, 1.3188469745, 0.9643562786),
    (3.1111111111, 1.7083204309, 1.0190248777),
    (3.5555555556, 1.7492398529, 1.3753013914),
    (4, 1.3913613433, 0.8459413668)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6633881223, 1.6406354152),
    (0.4444444444, 1.315573629, 1.435129758),
    (0.8888888889, 0.97002413, 1.1712664124),
    (1.3333333333, 0.1013003807, 0.1649291558),
    (1.7777777778, 0.77496661, 1.0475746559),
    (2.2222222222, 1.2199644879, 1.1019619535),
    (2.6666666667, 0.8416635922, 0.8857253942),
    (3.1111111111, 0.1794939017, 1.4411387867),
    (3.5555555556, 1.0988994641, 1.0416045061),
    (4, 1.0159490284, 0.8775875825)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4937928719, 0.4342199962),
    (0.4444444444, 0.467970379, 0.8857253942),
    (0.8888888889, 0.9394431816, 0.7465226249),
    (1.3333333333, 0.9132939473, 0.8416635922),
    (1.7777777778, 0.77496661, 1.1976976108),
    (2.2222222222, 0.7489249237, 1.1266978453),
    (2.6666666667, 1.0565504637, 0.8544282603),
    (3.1111111111, 1.0406434124, 1.1946662182),
    (3.5555555556, 0.6559603423, 1.4040715568),
    (4, 0.5273705, 0.4338652948)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9792261957, 0.6852275105),
    (0.4444444444, 0.836309986, 0.6057478075),
    (0.8888888889, 0.97002413, 0.7392101608),
    (1.3333333333, 0.8287335876, 0.7167173699),
    (1.7777777778, 0.5187864154, 0.7167173699),
    (2.2222222222, 1.3518316261, 1.1843801476),
    (2.6666666667, 0.8416635922, 0.9703090632),
    (3.1111111111, 0.9883617877, 1.3026602119),
    (3.5555555556, 1.3706955738, 1.3661389652),
    (4, 0.9914206472, 0.7732862827)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1901110634, 0.6153324361),
    (0.4444444444, 0.8003050892, 0.8352203718),
    (0.8888888889, 0.5434660666, 0.77496661),
    (1.3333333333, 0.7818957757, 0.8795284755),
    (1.7777777778, 0.283190682, 0.283190682),
    (2.2222222222, 0.7489249237, 1.3753013914),
    (2.6666666667, 0.564870242, 0.6428330556),
    (3.1111111111, 0.6622742915, 1.031357739),
    (3.5555555556, 0.9940671063, 1.2832826301),
    (4, 0.5273705, 0.583472753)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1, 0.1013003807),
    (0.4444444444, 1.5791815461, 0.5425964137),
    (0.8888888889, 1.7812224505, 0.6428330556),
    (1.3333333333, 1.2391024005, 0.7537503456),
    (1.7777777778, 0.9970336357, 0.9041571696),
    (2.2222222222, 0.9853039509, 0.7537503456),
    (2.6666666667, 0.564870242, 0.5755110625),
    (3.1111111111, 0.9486276129, 0.9148632049),
    (3.5555555556, 0.5539083117, 0.5062071281),
    (4, 0.5273705, 0.7868953429)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4040715568, 1.3147724895),
    (0.4444444444, 0.97002413, 1.2320315815),
    (0.8888888889, 1.4072374927, 1.0237447997),
    (1.3333333333, 1.6885469045, 0.4931132021),
    (1.7777777778, 1.4751008197, 0.5187864154),
    (2.2222222222, 1.6084091192, 1.2607898392),
    (2.6666666667, 1.619805772, 0.6246986086),
    (3.1111111111, 1.8956630523, 1.3862080833),
    (3.5555555556, 1.8350708442, 0.8918946786),
    (4, 1.3471384292, 0.5929098309)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 1.2909825899),
    (0.4444444444, 1.1840865711, 0.8733021547),
    (0.8888888889, 0.829848063, 0.8287335876),
    (1.3333333333, 1.0475746559, 0.6516268117),
    (1.7777777778, 0.6338610348, 1.0595485882),
    (2.2222222222, 0.5328107674, 1.0416045061),
    (2.6666666667, 0.564870242, 0.77496661),
    (3.1111111111, 0.3514718165, 1.1331068094),
    (3.5555555556, 0.8287335876, 0.8795284755),
    (4, 0.6541089557, 1.679210827)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0565504637, 1.22503339),
    (0.4444444444, 0.9486276129, 0.4173916178),
    (0.8888888889, 0.7382451684, 0.1013003807),
    (1.3333333333, 1.014835125, 0.8023023892),
    (1.7777777778, 1.1050305034, 0.6602533881),
    (2.2222222222, 1.1531529172, 0.4342199962),
    (2.6666666667, 0.9011005359, 0.212410364),
    (3.1111111111, 1.1232313502, 0.4191239185),
    (3.5555555556, 0.9163291572, 0.4342199962),
    (4, 0.936378512, 1.3565755071)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0565504637, 0.8918946786),
    (0.4444444444, 0.836309986, 0.7318084089),
    (0.8888888889, 0.9944807008, 0.5959284432),
    (1.3333333333, 1.2987932509, 1.3753013914),
    (1.7777777778, 0.9643562786, 0.6516268117),
    (2.2222222222, 0.9271724927, 0.212410364),
    (2.6666666667, 1.014835125, 0),
    (3.1111111111, 0.9486276129, 0.1588258096),
    (3.5555555556, 0.9583954939, 0.283190682),
    (4, 0.9669688464, 1.4072374927)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 0.5187864154),
    (0.4444444444, 0.8003050892, 0.8480654999),
    (0.8888888889, 1.1667619774, 1.1204715245),
    (1.3333333333, 0.8287335876, 1.8986996193),
    (1.7777777778, 0.8826304984, 1.1266978453),
    (2.2222222222, 0.9271724927, 0.7679684185),
    (2.6666666667, 1.3991314477, 1.0416045061),
    (3.1111111111, 1.6084091192, 0.6541089557),
    (3.5555555556, 1.3706955738, 0.9524253441),
    (4, 1.3913613433, 1.5527638817)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3397466119, 1.2534773751),
    (0.4444444444, 0.6021507957, 1.1392460405),
    (0.8888888889, 0.9944807008, 0.8222008957),
    (1.3333333333, 1.0745936569, 1.1647796282),
    (1.7777777778, 1.2355576796, 1.0416045061),
    (2.2222222222, 1.0655974966, 1.4690983238),
    (2.6666666667, 1.3753013914, 1.3229552183),
    (3.1111111111, 1.3662224388, 1.2697291762),
    (3.5555555556, 1.2146644526, 0.9404514118),
    (4, 1.1875969245, 1.5209243416)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 1.2607898392),
    (0.4444444444, 0.8963017747, 0.9102536766),
    (0.8888888889, 0.7868953429, 1.0836708428),
    (1.3333333333, 0.4794452464, 1.1081053214),
    (1.7777777778, 0.6892692082, 1.0059328937),
    (2.2222222222, 0.5975540188, 0.4931132021),
    (2.6666666667, 0.9011005359, 1.2681915911),
    (3.1111111111, 0.1794939017, 0.8330832862),
    (3.5555555556, 0.5539083117, 1.0059328937),
    (4, 1.0624606776, 1.4921053007)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3243705185, 1.1712664124),
    (0.4444444444, 1.0468537967, 0.8089879063),
    (0.8888888889, 0.2317278291, 0.5187864154),
    (1.3333333333, 0.2675841216, 0.9404514118),
    (1.7777777778, 0.77496661, 1.1142746058),
    (2.2222222222, 0.1794939017, 1.5205547536),
    (2.6666666667, 0.4500918727, 0.4173916178),
    (3.1111111111, 0.4868641759, 0.8395284066),
    (3.5555555556, 0.6559603423, 1.0535555509),
    (4, 0.7014168885, 1.7083204309)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 0.6246986086),
    (0.4444444444, 1.1633398827, 0.7608975995),
    (0.8888888889, 0.829848063, 0.564870242),
    (1.3333333333, 0.7428772632, 1.3147724895),
    (1.7777777778, 0.8416635922, 0.8544282603),
    (2.2222222222, 0.8330832862, 0.5062071281),
    (2.6666666667, 0.9464444491, 0.7955605068),
    (3.1111111111, 0.4868641759, 0.6288167486),
    (3.5555555556, 0.3243705185, 0.4794452464),
    (4, 1.2236553321, 1.1069649739)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 0.5858562556),
    (0.4444444444, 0, 0),
    (0.8888888889, 0.3787503473, 0.4500918727),
    (1.3333333333, 0.7818957757, 1.3229552183),
    (1.7777777778, 0.8189165748, 0.6428330556),
    (2.2222222222, 0, 0.4651328952),
    (2.6666666667, 0.4500918727, 1.0356437214),
    (3.1111111111, 0.6622742915, 0.7524513356),
    (3.5555555556, 0.6057478075, 0.3114530955),
    (4, 0.936378512, 0.9148632049)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0565504637, 0.9524253441),
    (0.4444444444, 0.2467392461, 2),
    (0.8888888889, 0.4989094734, 1.1647796282),
    (1.3333333333, 1.0988994641, 1.3846675639),
    (1.7777777778, 0, 1.1204715245),
    (2.2222222222, 0.4036320282, 0.4500918727),
    (2.6666666667, 0.4500918727, 1.3571669444),
    (3.1111111111, 0, 0),
    (3.5555555556, 0.4931132021, 0.9881328913),
    (4, 0.1588258096, 1.7812224505)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.1392460405),
    (0.4444444444, 0.467970379, 0.9041571696),
    (0.8888888889, 0.9055990341, 1.0776148349),
    (1.3333333333, 0.380194228, 0.9041571696),
    (1.7777777778, 0.283190682, 0.8480654999),
    (2.2222222222, 0.6937932627, 1.4812135846),
    (2.6666666667, 0.7714763629, 1.4141437444),
    (3.1111111111, 0.5786764305, 1.2942321987),
    (3.5555555556, 0.4173916178, 0.9102536766),
    (4, 0.7014168885, 1.4786188729)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 0.5755110625),
    (0.4444444444, 1.4294878048, 1.1976976108),
    (0.8888888889, 1.5527638817, 1.1329553904),
    (1.3333333333, 1.0988994641, 0.9102536766),
    (1.7777777778, 0.8416635922, 0.6338610348),
    (2.2222222222, 0.9853039509, 1.4244889375),
    (2.6666666667, 0.7167173699, 0.4500918727),
    (3.1111111111, 0.8963017747, 1.0813700025),
    (3.5555555556, 1.2426662266, 1.0237447997),
    (4, 1.1875969245, 1.3471384292)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1519345001, 0.8607539595),
    (0.4444444444, 1.0190248777, 0.7392101608),
    (0.8888888889, 1.4786188729, 0.8607539595),
    (1.3333333333, 1.0475746559, 0.9643562786),
    (1.7777777778, 1.0475746559, 1.0118671087),
    (2.2222222222, 0.8330832862, 0.1013003807),
    (2.6666666667, 1.014835125, 0.7090174101),
    (3.1111111111, 0.8330832862, 0.9761348674),
    (3.5555555556, 1.3027420557, 0.7012067491),
    (4, 1.1364195285, 1.3862080833)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.0958428304),
    (0.4444444444, 0.8523240435, 1.0535555509),
    (0.8888888889, 1.0159490284, 0.6852275105),
    (1.3333333333, 0.7818957757, 1.3397466119),
    (1.7777777778, 0.564870242, 0.8023023892),
    (2.2222222222, 0.6937932627, 0.564870242),
    (2.6666666667, 0.7167173699, 0.9940671063),
    (3.1111111111, 0.5786764305, 0.521850979),
    (3.5555555556, 0.5539083117, 1.0475746559),
    (4, 1.1005198534, 1.4411387867)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.8986996193),
    (0.4444444444, 0.6499789124, 0.3114530955),
    (0.8888888889, 0.5434660666, 0.212410364),
    (1.3333333333, 0.4794452464, 1.2909825899),
    (1.7777777778, 1.014835125, 0.6932790529),
    (2.2222222222, 0.3211346897, 0.5309016762),
    (2.6666666667, 0.6559603423, 1.1266978453),
    (3.1111111111, 0.3514718165, 0.8713083274),
    (3.5555555556, 0.6057478075, 0.77496661),
    (4, 0.8869663603, 1.3288401077)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 0.8670446096),
    (0.4444444444, 0.716392928, 0.8023023892),
    (0.8888888889, 0.6703190838, 0.7012067491),
    (1.3333333333, 0.4794452464, 1.2607898392),
    (1.7777777778, 0.5187864154, 0.7818957757),
    (2.2222222222, 0.8330832862, 0.6057478075),
    (2.6666666667, 0.564870242, 0.8607539595),
    (3.1111111111, 1.0406434124, 0.6937932627),
    (3.5555555556, 0.6559603423, 0.5425964137),
    (4, 1.315573629, 1.1005198534)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0.9344448153),
    (0.4444444444, 0.716392928, 1.1455717397),
    (0.8888888889, 0.583472753, 1.0897463234),
    (1.3333333333, 0.8287335876, 1.1455717397),
    (1.7777777778, 0.3482549441, 1.0897463234),
    (2.2222222222, 0.3211346897, 0.2507601471),
    (2.6666666667, 0.564870242, 0.2507601471),
    (3.1111111111, 0.5786764305, 0.3872843784),
    (3.5555555556, 0.5539083117, 0.6852275105),
    (4, 0.755961689, 1.4656625104)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4297708742, 0.9703090632),
    (0.4444444444, 0.6021507957, 0.380194228),
    (0.8888888889, 1.1232313502, 0.8980380465),
    (1.3333333333, 1.1647796282, 0.8918946786),
    (1.7777777778, 1.3312770632, 1.0776148349),
    (2.2222222222, 1.242431385, 0.5425964137),
    (2.6666666667, 1.4460916883, 1.0595485882),
    (3.1111111111, 1.7812224505, 0.9025038717),
    (3.5555555556, 1.5740656651, 1.0595485882),
    (4, 1.5885764436, 1.8301269492)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 0.399449704),
    (0.4444444444, 0.9302433424, 0.7465226249),
    (0.8888888889, 0.7629358153, 0.2507601471),
    (1.3333333333, 1.264479259, 0.5425964137),
    (1.7777777778, 1.0475746559, 0.9643562786),
    (2.2222222222, 0.5328107674, 0.3366118777),
    (2.6666666667, 0.7714763629, 1.2391024005),
    (3.1111111111, 0.7382451684, 0.1099213108),
    (3.5555555556, 0.7679684185, 0.6932790529),
    (4, 1.0375443884, 1.3965821935)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.1583364078),
    (0.4444444444, 1.0468537967, 0.9821960318),
    (0.8888888889, 0.8838451809, 1.0296909368),
    (1.3333333333, 0.8733021547, 1.4040715568),
    (1.7777777778, 0.9254063431, 0.8222008957),
    (2.2222222222, 0.7489249237, 0.4794452464),
    (2.6666666667, 0.4500918727, 0.3114530955),
    (3.1111111111, 0.7382451684, 0.2317278291),
    (3.5555555556, 0.7243125317, 0.8544282603),
    (4, 0.8200887508, 1.6532978884)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 0.7465226249),
    (0.4444444444, 1.1069649739, 0.8795284755),
    (0.8888888889, 1.3243766758, 0.9102536766),
    (1.3333333333, 1.435129758, 1.4812135846),
    (1.7777777778, 1.4574035863, 1.0178039682),
    (2.2222222222, 0.9271724927, 0.5187864154),
    (2.6666666667, 1.5136449116, 1.1204715245),
    (3.1111111111, 1.23109971, 0.260837433),
    (3.5555555556, 1.4090748391, 0.8857253942),
    (4, 1.6084091192, 1.8956630523)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1901110634, 0.8733021547),
    (0.4444444444, 0.9486276129, 0.7679684185),
    (0.8888888889, 1.1667619774, 0.7167173699),
    (1.3333333333, 0.8287335876, 1.4574035863),
    (1.7777777778, 0.4259343349, 0.9464444491),
    (2.2222222222, 0.6937932627, 0.9703090632),
    (2.6666666667, 0.6559603423, 1.0715767791),
    (3.1111111111, 0.6622742915, 0.5328107674),
    (3.5555555556, 0.9940671063, 0.6153324361),
    (4, 1.1364195285, 1.376094375)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3616299392, 1.0059328937),
    (0.4444444444, 1.2053979619, 0.9404514118),
    (0.8888888889, 0.6156715843, 0.9821960318),
    (1.3333333333, 1.3753013914, 1.2534773751),
    (1.7777777778, 0.8189165748, 1.1392460405),
    (2.2222222222, 0.6458160614, 1.5068867979),
    (2.6666666667, 0.564870242, 1.0475746559),
    (3.1111111111, 0.7801170272, 1.7083204309),
    (3.5555555556, 0.4931132021, 1.0178039682),
    (4, 0.6541089557, 1.5791815461)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 0.9821960318),
    (0.4444444444, 0.2467392461, 1.0595485882),
    (0.8888888889, 0.7868953429, 1.2112406716),
    (1.3333333333, 1.1876895938, 1.0118671087),
    (1.7777777778, 1.2181042243, 1.1583364078),
    (2.2222222222, 0.1794939017, 0.283190682),
    (2.6666666667, 1.3991314477, 1.3483731883),
    (3.1111111111, 0.9486276129, 1.6532978884),
    (3.5555555556, 0.4173916178, 1.0356437214),
    (4, 0, 0)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0, 0.4651328952),
    (0.4444444444, 0.2467392461, 0.7537503456),
    (0.8888888889, 0.4479429594, 0.5858562556),
    (1.3333333333, 0.7428772632, 1.0475746559),
    (1.7777777778, 0.283190682, 0.9762552003),
    (2.2222222222, 0.4614293872, 0.380194228),
    (2.6666666667, 0.3366118777, 0.1649291558),
    (3.1111111111, 0.4868641759, 0.3101851109),
    (3.5555555556, 0.232476943, 0.7090174101),
    (4, 0.755961689, 1.4294878048)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 0.7887593284),
    (0.4444444444, 0.836309986, 0.7818957757),
    (0.8888888889, 0.7051939155, 0.6153324361),
    (1.3333333333, 0.4794452464, 1.1583364078),
    (1.7777777778, 0.5187864154, 1.0356437214),
    (2.2222222222, 0.6458160614, 0.5959284432),
    (2.6666666667, 0.4500918727, 1.0535555509),
    (3.1111111111, 0.5786764305, 0.6458160614),
    (3.5555555556, 0.4931132021, 0.5309016762),
    (4, 0.7014168885, 1.3662224388)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1329553904, 1.1843801476),
    (0.4444444444, 0.8003050892, 1.2391024005),
    (0.8888888889, 0.4479429594, 0.9762552003),
    (1.3333333333, 0.9494363266, 1.1843801476),
    (1.7777777778, 0.6892692082, 1.1019619535),
    (2.2222222222, 0.6458160614, 1.4574035863),
    (2.6666666667, 1.2391024005, 1.2832826301),
    (3.1111111111, 0.3514718165, 1.6298631491),
    (3.5555555556, 0.4173916178, 1.0296909368),
    (4, 0.9669688464, 1.5061829653)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3243705185, 1.1019619535),
    (0.4444444444, 0.716392928, 1.0897463234),
    (0.8888888889, 0.7382451684, 1.0416045061),
    (1.3333333333, 0.7818957757, 0.6057478075),
    (1.7777777778, 0.6892692082, 1.1081053214),
    (2.2222222222, 0.9271724927, 1.5348671048),
    (2.6666666667, 0.9011005359, 1.3067209471),
    (3.1111111111, 1.0750424818, 1.2236553321),
    (3.5555555556, 0.9940671063, 0.9940671063),
    (4, 1.1633398827, 1.6298631491)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9254063431, 0.564870242),
    (0.4444444444, 1.1840865711, 0.6153324361),
    (0.8888888889, 1.097309472, 0.4651328952),
    (1.3333333333, 1.1647796282, 1.7492398529),
    (1.7777777778, 1.2794723027, 0.8607539595),
    (2.2222222222, 0.4614293872, 0.5858562556),
    (2.6666666667, 0.7167173699, 1.0237447997),
    (3.1111111111, 0.3514718165, 0.5639538851),
    (3.5555555556, 0.6559603423, 0.3366118777),
    (4, 1.0375443884, 1.3199549421)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2285236371, 0.3366118777),
    (0.4444444444, 1.315573629, 0.1649291558),
    (0.8888888889, 1.5209243416, 0.3114530955),
    (1.3333333333, 1.8986996193, 1.8350708442),
    (1.7777777778, 2, 0.6687229368),
    (2.2222222222, 1.242431385, 0),
    (2.6666666667, 1.787589636, 0.9284232209),
    (3.1111111111, 1.3662224388, 0.4614293872),
    (3.5555555556, 1.716809318, 0.380194228),
    (4, 2, 1.0687399327)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4931132021, 0.6516268117),
    (0.4444444444, 0.2467392461, 0.1013003807),
    (0.8888888889, 0.2317278291, 0.5539083117),
    (1.3333333333, 0.6293044262, 1.6885469045),
    (1.7777777778, 0.1901110634, 0.6246986086),
    (2.2222222222, 0.3211346897, 0.1649291558),
    (2.6666666667, 0.8416635922, 1.0118671087),
    (3.1111111111, 0.4868641759, 0.8963017747),
    (3.5555555556, 0.9163291572, 0.9223851651),
    (4, 0.4036320282, 0.9333119571)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9583954939, 1.0655551847),
    (0.4444444444, 0.3787503473, 1.0715767791),
    (0.8888888889, 0.5434660666, 1.0475746559),
    (1.3333333333, 0.6852275105, 0.7318084089),
    (1.7777777778, 0.5858562556, 1.1455717397),
    (2.2222222222, 0.7902656657, 1.4937928719),
    (2.6666666667, 1.0988994641, 1.0776148349),
    (3.1111111111, 0.6622742915, 0.4868641759),
    (3.5555555556, 0.8857253942, 0.7955605068),
    (4, 0.1983251607, 1.7417230994)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0.9762552003),
    (0.4444444444, 0.5328107674, 1.0296909368),
    (0.8888888889, 0.3101851109, 1.0059328937),
    (1.3333333333, 0.9821960318, 1.2681915911),
    (1.7777777778, 0.77496661, 1.1329553904),
    (2.2222222222, 0.6458160614, 1.5499081273),
    (2.6666666667, 0.9464444491, 1.3846675639),
    (3.1111111111, 0.5786764305, 1.1069649739),
    (3.5555555556, 0.232476943, 1.0655551847),
    (4, 0.2867503717, 1.6084091192)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0565504637, 1),
    (0.4444444444, 1.0006050785, 1.0475746559),
    (0.8888888889, 0.9055990341, 1.1142746058),
    (1.3333333333, 1.2391024005, 1.1777991043),
    (1.7777777778, 1.2571227368, 1.1519345001),
    (2.2222222222, 1.1166972102, 0.6246986086),
    (2.6666666667, 0.9011005359, 0.7392101608),
    (3.1111111111, 1.1840865711, 0.5434660666),
    (3.5555555556, 1.2607898392, 1.0118671087),
    (4, 0.6067016876, 1.5791815461)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6300045071, 0.9643562786),
    (0.4444444444, 1.23109971, 1.1519345001),
    (0.8888888889, 1.3565755071, 0.8544282603),
    (1.3333333333, 1.0475746559, 1.1019619535),
    (1.7777777778, 0.9464444491, 1.0958428304),
    (2.2222222222, 0.8775875825, 0.3593645848),
    (2.6666666667, 1.0565504637, 1.3147724895),
    (3.1111111111, 1.4181972811, 0.4743857496),
    (3.5555555556, 1.435129758, 0.6338610348),
    (4, 1.1005198534, 1.3378974644)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9254063431, 0.5539083117),
    (0.4444444444, 0.9302433424, 0.212410364),
    (0.8888888889, 0.8681600685, 0.4173916178),
    (1.3333333333, 1.014835125, 0.8607539595),
    (1.7777777778, 1.7492398529, 0.6770447817),
    (2.2222222222, 0.4036320282, 0.3114530955),
    (2.6666666667, 0.564870242, 0.3366118777),
    (3.1111111111, 0.7382451684, 0.2867503717),
    (3.5555555556, 1.0296909368, 0.564870242),
    (4, 1.4294878048, 1.4181972811)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0267171214, 0.7090174101),
    (0.4444444444, 0, 0.5755110625),
    (0.8888888889, 0.7051939155, 0.9223851651),
    (1.3333333333, 0.8733021547, 1.2987932509),
    (1.7777777778, 1.1204715245, 1.0836708428),
    (2.2222222222, 0.5975540188, 0.6153324361),
    (2.6666666667, 0.985164875, 1.0296909368),
    (3.1111111111, 0.8330832862, 0.8523240435),
    (3.5555555556, 0.7243125317, 0.8416635922),
    (4, 0.755961689, 1.4531840842)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5367991317, 0.9464444491),
    (0.4444444444, 0.4265826181, 0.2507601471),
    (0.8888888889, 0.829848063, 0.4931132021),
    (1.3333333333, 0.9132939473, 0.7465226249),
    (1.7777777778, 1.0867060527, 0.9821960318),
    (2.2222222222, 0.4036320282, 0.399449704),
    (2.6666666667, 0.564870242, 0.399449704),
    (3.1111111111, 0.6622742915, 0.5538401768),
    (3.5555555556, 0.8287335876, 0.9284232209),
    (4, 1.1364195285, 2)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1329553904, 2),
    (0.4444444444, 1.0782030141, 0.9163291572),
    (0.8888888889, 0.6703190838, 1.0595485882),
    (1.3333333333, 0.7428772632, 1.6406354152),
    (1.7777777778, 0.5187864154, 1.0655551847),
    (2.2222222222, 0.5328107674, 0.5755110625),
    (2.6666666667, 1.1266978453, 1.3753013914),
    (3.1111111111, 0.8330832862, 1.679210827),
    (3.5555555556, 0.6559603423, 0.8980380465),
    (4, 0.2867503717, 1.5364162319)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 1.4812135846),
    (0.4444444444, 1.1364195285, 1.8986996193),
    (0.8888888889, 0.8523240435, 1.7492398529),
    (1.3333333333, 1.0475746559, 1.1976976108),
    (1.7777777778, 1.0475746559, 1.4690983238),
    (2.2222222222, 1.435266228, 1.600550296),
    (2.6666666667, 1.4874422457, 1.716809318),
    (3.1111111111, 0.7382451684, 1.8301269492),
    (3.5555555556, 1.0685640163, 1.1976976108),
    (4, 1.4411387867, 1.2777739686)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8384472847, 1.3753013914),
    (0.4444444444, 0.2467392461, 1.6885469045),
    (0.8888888889, 0.3101851109, 1.6885469045),
    (1.3333333333, 1.6633881223, 1.4141437444),
    (1.7777777778, 0.9792261957, 1.5499081273),
    (2.2222222222, 0.8330832862, 1.716809318),
    (2.6666666667, 0.8416635922, 1.8350708442),
    (3.1111111111, 1.1232313502, 1.7812224505),
    (3.5555555556, 0.9163291572, 1.1583364078),
    (4, 0.936378512, 1.2090110601)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0565504637, 1.1142746058),
    (0.4444444444, 0.6860726901, 1.3846675639),
    (0.8888888889, 1.1911233364, 1.2909825899),
    (1.3333333333, 1.3991314477, 1.2320315815),
    (1.7777777778, 1.0867060527, 1.3661389652),
    (2.2222222222, 1.1531529172, 0.8795284755),
    (2.6666666667, 1.3527484993, 1.4460916883),
    (3.1111111111, 0.8963017747, 0.5105604553),
    (3.5555555556, 1.435129758, 0.9041571696),
    (4, 1.5285703846, 1.2859393044)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6885469045, 1.1266978453),
    (0.4444444444, 1.544475646, 0.5062071281),
    (0.8888888889, 1.4921053007, 1.3397466119),
    (1.3333333333, 1.7324158784, 1.787589636),
    (1.7777777778, 1.787589636, 1.3312770632),
    (2.2222222222, 1.7417230994, 0.8480654999),
    (2.6666666667, 1.619805772, 1.1976976108),
    (3.1111111111, 1.4786188729, 0.6703190838),
    (3.5555555556, 1.6300045071, 1.1392460405),
    (4, 1.8956630523, 1.2462549974)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 0.9223851651),
    (0.4444444444, 1.6532978884, 0.4500918727),
    (0.8888888889, 1.3811198901, 0.283190682),
    (1.3333333333, 1.014835125, 0.9970336357),
    (1.7777777778, 1.3991314477, 0.6852275105),
    (2.2222222222, 1.1166972102, 0.7090174101),
    (2.6666666667, 0.6559603423, 1.0897463234),
    (3.1111111111, 0.7382451684, 0.6021507957),
    (3.5555555556, 0.8287335876, 0.5959284432),
    (4, 1.3471384292, 0.9271724927)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9583954939, 1.4244889375),
    (0.4444444444, 1.3565755071, 1.3147724895),
    (0.8888888889, 1.3026602119, 1.3147724895),
    (1.3333333333, 1.3753013914, 1.22503339),
    (1.7777777778, 1.6633881223, 1.3483731883),
    (2.2222222222, 0.9271724927, 0.8544282603),
    (2.6666666667, 1.0565504637, 1.2607898392),
    (3.1111111111, 0.8330832862, 0.1983251607),
    (3.5555555556, 0.9583954939, 0.7465226249),
    (4, 1.0375443884, 1.2018030917)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4751008197, 1.2681915911),
    (0.4444444444, 1.4126777601, 1.2607898392),
    (0.8888888889, 1.1667619774, 1.6406354152),
    (1.3333333333, 1.2987932509, 1.6633881223),
    (1.7777777778, 1.3527484993, 1.3753013914),
    (2.2222222222, 0.8330832862, 0.8156198524),
    (2.6666666667, 1.7022347854, 1.4812135846),
    (3.1111111111, 1.4181972811, 0.8135352611),
    (3.5555555556, 1.4812135846, 1.2181042243),
    (4, 1.7812224505, 1.1946662182)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.0178039682),
    (0.4444444444, 0.8963017747, 1.1204715245),
    (0.8888888889, 0.3787503473, 1.5657800038),
    (1.3333333333, 0.4794452464, 0.7608975995),
    (1.7777777778, 0.8826304984, 1.4574035863),
    (2.2222222222, 0.3211346897, 0.8980380465),
    (2.6666666667, 0.7714763629, 1.6633881223),
    (3.1111111111, 0.7382451684, 0.716392928),
    (3.5555555556, 0.4173916178, 1),
    (4, 0.4036320282, 1.1667619774)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5367991317, 1.0535555509),
    (0.4444444444, 0.2467392461, 0.6602533881),
    (0.8888888889, 0.3101851109, 0.8795284755),
    (1.3333333333, 0.5594311332, 1.0237447997),
    (1.7777777778, 0.6892692082, 1.1712664124),
    (2.2222222222, 0.3211346897, 0.9404514118),
    (2.6666666667, 0.9464444491, 1.2462496544),
    (3.1111111111, 0.4868641759, 0.6112081523),
    (3.5555555556, 0.1013003807, 0.5755110625),
    (4, 0.4036320282, 1.0190248777)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0565504637, 1.5348671048),
    (0.4444444444, 1.4126777601, 1.3483731883),
    (0.8888888889, 1.031357739, 1.5499081273),
    (1.3333333333, 1.264479259, 1.0715767791),
    (1.7777777778, 1.600550296, 1.8986996193),
    (2.2222222222, 1.4531840842, 1.0776148349),
    (2.6666666667, 1.4244889375, 1.5205547536),
    (3.1111111111, 1.1232313502, 1.1599312329),
    (3.5555555556, 1.3354928101, 1.1081053214),
    (4, 0.8200887508, 1.126512999)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.5499081273),
    (0.4444444444, 1.3862080833, 1.5499081273),
    (0.8888888889, 0.7868953429, 1.8350708442),
    (1.3333333333, 1.4751008197, 1.3661389652),
    (1.7777777778, 1.5740656651, 1.787589636),
    (2.2222222222, 1.3069274149, 0.8733021547),
    (2.6666666667, 1.2181042243, 1.6406354152),
    (3.1111111111, 1.4411387867, 0.9086905211),
    (3.5555555556, 1.3027420557, 1.2320315815),
    (4, 0.9669688464, 1.2386313716)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1680174306, 0.5425964137),
    (0.4444444444, 1.1069649739, 1.787589636),
    (0.8888888889, 0.9394431816, 1.716809318),
    (1.3333333333, 0.9132939473, 1.3312770632),
    (1.7777777778, 1.2355576796, 1.619805772),
    (2.2222222222, 0.6937932627, 0.8089879063),
    (2.6666666667, 1.1266978453, 1.1081053214),
    (3.1111111111, 0.7382451684, 0.583472753),
    (3.5555555556, 1.1455717397, 1.1204715245),
    (4, 1.3471384292, 0.9761348674)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1, 0.8544282603),
    (0.4444444444, 0.55892837, 1.3397466119),
    (0.8888888889, 0, 0.6687229368),
    (1.3333333333, 0.6008685523, 0.4173916178),
    (1.7777777778, 0.77496661, 0.7392101608),
    (2.2222222222, 0.5975540188, 0.7012067491),
    (2.6666666667, 0.985164875, 1.1142746058),
    (3.1111111111, 0.6622742915, 0.9822469657),
    (3.5555555556, 0.7243125317, 0.4931132021),
    (4, 0.2317278291, 1.1134441918)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.600550296, 0.8480654999),
    (0.4444444444, 1.25397557, 0.6932790529),
    (0.8888888889, 1.0782030141, 0.8089879063),
    (1.3333333333, 1.2987932509, 1.3942521925),
    (1.7777777778, 1.4192808631, 0.8795284755),
    (2.2222222222, 1.5791815461, 0.6932790529),
    (2.6666666667, 1.619805772, 1.2756874683),
    (3.1111111111, 1.3662224388, 0.6860726901),
    (3.5555555556, 1.0685640163, 0.9762552003),
    (4, 1.4126777601, 1.0562030792)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2285236371, 0.8287335876),
    (0.4444444444, 0.55892837, 0.7012067491),
    (0.8888888889, 0.6156715843, 0.8416635922),
    (1.3333333333, 1.0988994641, 1.0836708428),
    (1.7777777778, 1.1583364078, 1.3942521925),
    (2.2222222222, 0.4614293872, 0.6852275105),
    (2.6666666667, 1.014835125, 1.1329553904),
    (3.1111111111, 0.4868641759, 0.7936238579),
    (3.5555555556, 0.6852275105, 0.6428330556),
    (4, 0.2867503717, 0.9455675593)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1680174306, 1.5068867979),
    (0.4444444444, 1.3565755071, 1.0776148349),
    (0.8888888889, 1.8956630523, 0.8670446096),
    (1.3333333333, 1.0745936569, 1.5657800038),
    (1.7777777778, 1.7022347854, 1.6885469045),
    (2.2222222222, 1.3333465725, 0.6687229368),
    (2.6666666667, 1.1266978453, 1.0958428304),
    (3.1111111111, 0.8963017747, 0.4479429594),
    (3.5555555556, 1.3027420557, 0.7392101608),
    (4, 0.936378512, 0.9086905211)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.3483731883),
    (0.4444444444, 0.97002413, 1.716809318),
    (0.8888888889, 1.1232313502, 1.600550296),
    (1.3333333333, 1.3312770632, 1.4937928719),
    (1.7777777778, 0.4259343349, 1.4460916883),
    (2.2222222222, 1.0941068932, 1.4460916883),
    (2.6666666667, 1.0867060527, 1.5499081273),
    (3.1111111111, 0.8330832862, 0.7382451684),
    (3.5555555556, 1.0685640163, 0.6057478075),
    (4, 1.1633398827, 1.1464244022)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 0.9284232209),
    (0.4444444444, 0.8650057783, 0.9583954939),
    (0.8888888889, 0.6703190838, 1.3571669444),
    (1.3333333333, 1.2078324816, 1.5205547536),
    (1.7777777778, 1.1810834252, 1.435129758),
    (2.2222222222, 1.1531529172, 1.6406354152),
    (2.6666666667, 0.9464444491, 1.600550296),
    (3.1111111111, 1.3199549421, 1.1805918749),
    (3.5555555556, 1.1712664124, 1.1910120937),
    (4, 1.315573629, 1.2617984034)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8575956151, 0.7955605068),
    (0.4444444444, 1.4921053007, 0.6770447817),
    (0.8888888889, 0.8069414507, 0.380194228),
    (1.3333333333, 1.0988994641, 1.1910120937),
    (1.7777777778, 1.4192808631, 0.7012067491),
    (2.2222222222, 1.2777739686, 0.5539083117),
    (2.6666666667, 1.2607898392, 1.0836708428),
    (3.1111111111, 0.8963017747, 0.6782498566),
    (3.5555555556, 1.0685640163, 0.3593645848),
    (4, 0.9914206472, 0.8963017747)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9254063431, 1.4690983238),
    (0.4444444444, 1.25397557, 1.5348671048),
    (0.8888888889, 1.1232313502, 1.3942521925),
    (1.3333333333, 1.5276254792, 1.2391024005),
    (1.7777777778, 1.5499081273, 1.2909825899),
    (2.2222222222, 0.9853039509, 0.7818957757),
    (2.6666666667, 1.3527484993, 1.2987932509),
    (3.1111111111, 0.8963017747, 0.3316391408),
    (3.5555555556, 1.4937928719, 1.2044394932),
    (4, 1.2462549974, 1.1736478987)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 1.2112406716),
    (0.4444444444, 1.0468537967, 1.3312770632),
    (0.8888888889, 1.3965821935, 1.3753013914),
    (1.3333333333, 2, 1.2462496544),
    (1.7777777778, 1.619805772, 1.4040715568),
    (2.2222222222, 1.4018733017, 0.8670446096),
    (2.6666666667, 0.7714763629, 1.1843801476),
    (3.1111111111, 0.9486276129, 0.7089485501),
    (3.5555555556, 1.1204715245, 1.0776148349),
    (4, 0.6541089557, 0.9578012944)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1901110634, 1.2044394932),
    (0.4444444444, 0.6021507957, 1.1266978453),
    (0.8888888889, 0.6156715843, 1.2987932509),
    (1.3333333333, 0.7818957757, 0.9970336357),
    (1.7777777778, 0.9970336357, 1.5348671048),
    (2.2222222222, 0.6458160614, 0.9102536766),
    (2.6666666667, 0.3366118777, 1.5068867979),
    (3.1111111111, 0.9486276129, 2),
    (3.5555555556, 0.6057478075, 1.1329553904),
    (4, 1.4990659947, 1.0499655372)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.7492398529, 1.2832826301),
    (0.4444444444, 1.2859393044, 1.4460916883),
    (0.8888888889, 1.4531840842, 1.6633881223),
    (1.3333333333, 1.5499081273, 0.8733021547),
    (1.7777777778, 1.8350708442, 2),
    (2.2222222222, 0.5975540188, 0.9223851651),
    (2.6666666667, 1.4874422457, 1.3397466119),
    (3.1111111111, 1.23109971, 0.8266040683),
    (3.5555555556, 1.435129758, 1.22503339),
    (4, 1.4126777601, 1.1397431709)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 1.0595485882),
    (0.4444444444, 0.755961689, 0.5187864154),
    (0.8888888889, 0.9944807008, 0.9524253441),
    (1.3333333333, 0.9494363266, 1.2044394932),
    (1.7777777778, 1.3527484993, 1.0296909368),
    (2.2222222222, 0.9853039509, 0.8857253942),
    (2.6666666667, 0.6559603423, 1.787589636),
    (3.1111111111, 0.3514718165, 0.6622742915),
    (3.5555555556, 1.2146644526, 1.1712664124),
    (4, 0.4036320282, 1.3026602119)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5348671048, 0.8352203718),
    (0.4444444444, 1.3026602119, 0.6852275105),
    (0.8888888889, 1.5983086198, 0.3593645848),
    (1.3333333333, 1.6300045071, 1.2756874683),
    (1.7777777778, 1.014835125, 1.2607898392),
    (2.2222222222, 0.8330832862, 0.4173916178),
    (2.6666666667, 0.7167173699, 1.1519345001),
    (3.1111111111, 0.4868641759, 0.7310372),
    (3.5555555556, 0.7818957757, 0.7318084089),
    (4, 1.5612979128, 0.9210233824)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.1647796282),
    (0.4444444444, 1.0190248777, 1.1019619535),
    (0.8888888889, 1.2777739686, 0.7679684185),
    (1.3333333333, 1.7324158784, 1.4460916883),
    (1.7777777778, 1.7022347854, 1.22503339),
    (2.2222222222, 1.665906193, 0.7887593284),
    (2.6666666667, 1.5348671048, 1.1583364078),
    (3.1111111111, 1.5700967054, 0.7732862827),
    (3.5555555556, 1.5205547536, 0.8222008957),
    (4, 1.7083204309, 0.9944807008)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3243705185, 1.435129758),
    (0.4444444444, 1.0006050785, 1.1142746058),
    (0.8888888889, 0.9055990341, 1.4460916883),
    (1.3333333333, 0.4794452464, 1.3483731883),
    (1.7777777778, 1.5068867979, 1.5657800038),
    (2.2222222222, 0.9271724927, 1.7492398529),
    (2.6666666667, 1.014835125, 2),
    (3.1111111111, 0.8330832862, 1.1667619774),
    (3.5555555556, 0.7243125317, 1.1519345001),
    (4, 1.2657499273, 1.1805918749)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 1.2987932509),
    (0.4444444444, 0.8650057783, 1.2534773751),
    (0.8888888889, 0.583472753, 1.4690983238),
    (1.3333333333, 0.9132939473, 0.6972579443),
    (1.7777777778, 1.1204715245, 1.2987932509),
    (2.2222222222, 0.5328107674, 0.9041571696),
    (2.6666666667, 0.6559603423, 1.4574035863),
    (3.1111111111, 0.8330832862, 1.0941068932),
    (3.5555555556, 0.9583954939, 1.1777991043),
    (4, 0.6067016876, 1.1875969245)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1329553904, 0.8222008957),
    (0.4444444444, 1.2697291762, 1.0655551847),
    (0.8888888889, 0.9394431816, 1.3067209471),
    (1.3333333333, 1.2215603965, 1.0655551847),
    (1.7777777778, 1.1050305034, 1.2756874683),
    (2.2222222222, 1.3711292739, 0.8023023892),
    (2.6666666667, 1.1943479843, 1.1647796282),
    (3.1111111111, 0.8330832862, 0.4036320282),
    (3.5555555556, 0.7955605068, 0.4651328952),
    (4, 1.3026602119, 1.23109971)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.2181042243),
    (0.4444444444, 0.9302433424, 1.7492398529),
    (0.8888888889, 0.6458160614, 2),
    (1.3333333333, 1.1392460405, 2),
    (1.7777777778, 1.1204715245, 1.7492398529),
    (2.2222222222, 1.1875969245, 1.8986996193),
    (2.6666666667, 1.4460916883, 1.7492398529),
    (3.1111111111, 1.1840865711, 1.8956630523),
    (3.5555555556, 0.7243125317, 1.2391024005),
    (4, 1.1005198534, 1.3112315114)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9254063431, 1.3661389652),
    (0.4444444444, 1.1633398827, 1.6633881223),
    (0.8888888889, 0.5434660666, 1.5205547536),
    (1.3333333333, 1.3527484993, 1.2181042243),
    (1.7777777778, 0.8826304984, 1.5205547536),
    (2.2222222222, 0.4614293872, 1.6885469045),
    (2.6666666667, 0.564870242, 1.8986996193),
    (3.1111111111, 0.1794939017, 1.0006050785),
    (3.5555555556, 0.232476943, 1.1647796282),
    (4, 0.4036320282, 1.216293833)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.0416045061),
    (0.4444444444, 0.716392928, 1.600550296),
    (0.8888888889, 0.583472753, 1.5068867979),
    (1.3333333333, 1.014835125, 1.716809318),
    (1.7777777778, 0.6892692082, 1.600550296),
    (2.2222222222, 0.9271724927, 0.7955605068),
    (2.6666666667, 0.9011005359, 1.1777991043),
    (3.1111111111, 1.0098049177, 1.7417230994),
    (3.5555555556, 0.9583954939, 1.0836708428),
    (4, 1.1364195285, 0.97002413)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1329553904, 1.3571669444),
    (0.4444444444, 1.0190248777, 1.2987932509),
    (0.8888888889, 0.9394431816, 1.4040715568),
    (1.3333333333, 1.2215603965, 1.0416045061),
    (1.7777777778, 1.1810834252, 1.5068867979),
    (2.2222222222, 0.9853039509, 1.6633881223),
    (2.6666666667, 0.8416635922, 1.0655551847),
    (3.1111111111, 0.3514718165, 0.6373880481),
    (3.5555555556, 1.1455717397, 0.7167173699),
    (4, 1.0624606776, 1.0251850552)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1329553904, 1.0356437214),
    (0.4444444444, 1.23109971, 1.5657800038),
    (0.8888888889, 0.4479429594, 1.5348671048),
    (1.3333333333, 0.9132939473, 1.3571669444),
    (1.7777777778, 1.1810834252, 1.5826083822),
    (2.2222222222, 1.242431385, 0.8352203718),
    (2.6666666667, 1.787589636, 1.2534773751),
    (3.1111111111, 1.3662224388, 0.7868953429),
    (3.5555555556, 1.3894315931, 0.8733021547),
    (4, 1.8301269492, 1.25397557)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.3229552183),
    (0.4444444444, 0.8963017747, 1.619805772),
    (0.8888888889, 0.8069414507, 1.787589636),
    (1.3333333333, 0.4794452464, 1.1204715245),
    (1.7777777778, 0.5858562556, 1.4937928719),
    (2.2222222222, 0.8330832862, 1.8350708442),
    (2.6666666667, 0.8416635922, 1.22503339),
    (3.1111111111, 0.3514718165, 0.8003050892),
    (3.5555555556, 0.3243705185, 1.2112406716),
    (4, 0.8869663603, 1.0941068932)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2794723027, 1.0296909368),
    (0.4444444444, 1.4720778811, 1.1081053214),
    (0.8888888889, 1.3811198901, 1.3229552183),
    (1.3333333333, 1.6300045071, 1.4244889375),
    (1.7777777778, 1.6406354152, 1.2832826301),
    (2.2222222222, 1.1166972102, 0.8918946786),
    (2.6666666667, 1.6633881223, 1.4040715568),
    (3.1111111111, 1.5285703846, 0.7594563851),
    (3.5555555556, 1.8986996193, 0.8352203718),
    (4, 1.6298631491, 0.9883617877)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 1.4141437444),
    (0.4444444444, 0.8003050892, 1.2462496544),
    (0.8888888889, 1.3243766758, 1.4244889375),
    (1.3333333333, 0.2675841216, 1.5348671048),
    (1.7777777778, 1.014835125, 1.4141437444),
    (2.2222222222, 1.0655974966, 1.5657800038),
    (2.6666666667, 0.7714763629, 1.3661389652),
    (3.1111111111, 0.5786764305, 1.1736478987),
    (3.5555555556, 0.4173916178, 0.9643562786),
    (4, 0.8200887508, 1.0750424818)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1, 0.8156198524),
    (0.4444444444, 0.3787503473, 0.8544282603),
    (0.8888888889, 1.2501028414, 0.7537503456),
    (1.3333333333, 0.5594311332, 1.5826083822),
    (1.7777777778, 1.4937928719, 0.8352203718),
    (2.2222222222, 0.5328107674, 0.7243125317),
    (2.6666666667, 0.564870242, 1.1455717397),
    (3.1111111111, 0.4868641759, 0.8200887508),
    (3.5555555556, 0.3593645848, 0.9703090632),
    (4, 0.755961689, 1.1331068094)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 1.3312770632),
    (0.4444444444, 0.5105604553, 1.0356437214),
    (0.8888888889, 0.9055990341, 1.4574035863),
    (1.3333333333, 0.6852275105, 1.2832826301),
    (1.7777777778, 1.5276254792, 1.3067209471),
    (2.2222222222, 0.6937932627, 0.9344448153),
    (2.6666666667, 0.7167173699, 1.4244889375),
    (3.1111111111, 0.9486276129, 0.8069414507),
    (3.5555555556, 0.6559603423, 0.8480654999),
    (4, 1.2859393044, 1.0877242166)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4297708742, 0.8089879063),
    (0.4444444444, 1.3965821935, 1.6406354152),
    (0.8888888889, 0.3787503473, 1.4937928719),
    (1.3333333333, 1.3312770632, 1.435129758),
    (1.7777777778, 1.3312770632, 1.6633881223),
    (2.2222222222, 1.3069274149, 1.5826083822),
    (2.6666666667, 1.3188469745, 1.619805772),
    (3.1111111111, 1.3199549421, 0.7664003613),
    (3.5555555556, 1.3229552183, 1.1843801476),
    (4, 1.0159490284, 1.1531529172)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9583954939, 1.0237447997),
    (0.4444444444, 1.4720778811, 0.8918946786),
    (0.8888888889, 0.7051939155, 0.8918946786),
    (1.3333333333, 0.8287335876, 0.77496661),
    (1.7777777778, 1.2571227368, 1.2391024005),
    (2.2222222222, 1.1166972102, 0.9163291572),
    (2.6666666667, 1.5826083822, 1.4937928719),
    (3.1111111111, 1.0750424818, 0.7014168885),
    (3.5555555556, 1.0988994641, 0.5539083117),
    (4, 1.2236553321, 0.9394431816)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5577329845, 1.4574035863),
    (0.4444444444, 1.7812224505, 1.3229552183),
    (0.8888888889, 0.6156715843, 1.435129758),
    (1.3333333333, 1.4751008197, 1.1392460405),
    (1.7777777778, 1.4751008197, 1.4244889375),
    (2.2222222222, 1.2053979619, 1.619805772),
    (2.6666666667, 0.8416635922, 1.6885469045),
    (3.1111111111, 1.2578738582, 1.6084091192),
    (3.5555555556, 2, 0.2507601471),
    (4, 0.6067016876, 1.2697291762)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8384472847, 0.4173916178),
    (0.4444444444, 0.716392928, 0.3366118777),
    (0.8888888889, 1.1667619774, 0.1649291558),
    (1.3333333333, 1.2987932509, 1.0897463234),
    (1.7777777778, 1.1392460405, 0.9583954939),
    (2.2222222222, 1.4720778811, 0.6602533881),
    (2.6666666667, 1.7022347854, 1.1392460405),
    (3.1111111111, 1.0098049177, 0.5929098309),
    (3.5555555556, 1.4632008683, 0.5187864154),
    (4, 1.5612979128, 1.0006050785)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 0.6932790529),
    (0.4444444444, 0.8963017747, 1.1647796282),
    (0.8888888889, 0.7051939155, 1.3312770632),
    (1.3333333333, 1.1173695016, 1.1712664124),
    (1.7777777778, 1.3312770632, 1.3397466119),
    (2.2222222222, 1.0655974966, 0.8607539595),
    (2.6666666667, 0.4500918727, 1.5657800038),
    (3.1111111111, 0.6622742915, 0.8900827229),
    (3.5555555556, 0.7243125317, 0.8607539595),
    (4, 0.5273705, 1.0437464854)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 1.4040715568),
    (0.4444444444, 1.0468537967, 0.9464444491),
    (0.8888888889, 1.1232313502, 1.3483731883),
    (1.3333333333, 1.1392460405, 1.5499081273),
    (1.7777777778, 1.2044394932, 1.2462496544),
    (2.2222222222, 1.034449226, 0.8416635922),
    (2.6666666667, 1.014835125, 1.1712664124),
    (3.1111111111, 1.0406434124, 0.7237544271),
    (3.5555555556, 0.9583954939, 1.1455717397),
    (4, 1.2859393044, 1.031357739)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.3067209471),
    (0.4444444444, 0.836309986, 0.9703090632),
    (0.8888888889, 1.1667619774, 0.9703090632),
    (1.3333333333, 1.5914288226, 0.6246986086),
    (1.7777777778, 1.3846675639, 1.3147724895),
    (2.2222222222, 0.8775875825, 0.8287335876),
    (2.6666666667, 1.1647796282, 1.2320315815),
    (3.1111111111, 1.2818411422, 1.0375443884),
    (3.5555555556, 1.0296909368, 0.7537503456),
    (4, 0.8200887508, 1.0813700025)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2044394932, 0.9583954939),
    (0.4444444444, 0.8650057783, 0.8607539595),
    (0.8888888889, 1.2053979619, 0.9643562786),
    (1.3333333333, 0.6008685523, 1.2112406716),
    (1.7777777778, 1.22503339, 1.3571669444),
    (2.2222222222, 1.2942321987, 0.9821960318),
    (2.6666666667, 1.3991314477, 1.2909825899),
    (3.1111111111, 0.5786764305, 0.7801170272),
    (3.5555555556, 1.0988994641, 0.6770447817),
    (4, 1.2657499273, 1.006736303)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9583954939, 1.1777991043),
    (0.4444444444, 0.6860726901, 0.7167173699),
    (0.8888888889, 1.4531840842, 0.8480654999),
    (1.3333333333, 1.014835125, 1.4690983238),
    (1.7777777778, 1.2948736975, 1.3846675639),
    (2.2222222222, 1.1875969245, 1.0595485882),
    (2.6666666667, 1.3991314477, 1.2044394932),
    (3.1111111111, 0.8330832862, 0.4338652948),
    (3.5555555556, 0.8639035426, 0.8670446096),
    (4, 1.2462549974, 1.0375443884)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8384472847, 0),
    (0.4444444444, 1.513465642, 0.9344448153),
    (0.8888888889, 1.1232313502, 1.3661389652),
    (1.3333333333, 1.3312770632, 1.5068867979),
    (1.7777777778, 1.2112406716, 1.2534773751),
    (2.2222222222, 1.1875969245, 1.787589636),
    (2.6666666667, 0.3366118777, 1.5348671048),
    (3.1111111111, 0.7801170272, 1.0437464854),
    (3.5555555556, 1.1712664124, 1.1266978453),
    (4, 0.8200887508, 1.2942321987)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4931132021, 0.8416635922),
    (0.4444444444, 1.1364195285, 1.0237447997),
    (0.8888888889, 0.9394431816, 1.3846675639),
    (1.3333333333, 0.7818957757, 1.3067209471),
    (1.7777777778, 1.0685640163, 1.2681915911),
    (2.2222222222, 1.1531529172, 0.8222008957),
    (2.6666666667, 1.4690983238, 1.4690983238),
    (3.1111111111, 0.7801170272, 0.5738258213),
    (3.5555555556, 0.4931132021, 0.212410364),
    (4, 0.9914206472, 0.9639133927)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1, 0.9102536766),
    (0.4444444444, 1.3288401077, 0.7090174101),
    (0.8888888889, 0.7629358153, 0.6057478075),
    (1.3333333333, 0.9821960318, 0.5309016762),
    (1.7777777778, 0.7280725506, 1.2320315815),
    (2.2222222222, 0.9271724927, 0.9464444491),
    (2.6666666667, 1.2181042243, 1.2181042243),
    (3.1111111111, 0.4868641759, 0.6200933179),
    (3.5555555556, 0.6057478075, 1.1019619535),
    (4, 0.936378512, 0.9822469657)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4517019394, 1.2756874683),
    (0.4444444444, 1.8301269492, 0.9284232209),
    (0.8888888889, 1.679210827, 1.5826083822),
    (1.3333333333, 1.4751008197, 1.1519345001),
    (1.7777777778, 1.8986996193, 1.8350708442),
    (2.2222222222, 1.5209243416, 1.435129758),
    (2.6666666667, 1.5577329845, 1.3942521925),
    (3.1111111111, 1.2818411422, 1.1005198534),
    (3.5555555556, 1.5068867979, 1.2462496544),
    (4, 1.7417230994, 1.0624606776)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9254063431, 1.1976976108),
    (0.4444444444, 0.6860726901, 1.8350708442),
    (0.8888888889, 0.5434660666, 1.8986996193),
    (1.3333333333, 0.4794452464, 1.0356437214),
    (1.7777777778, 0.77496661, 1.716809318),
    (2.2222222222, 0.5975540188, 0.9284232209),
    (2.6666666667, 0.985164875, 1.5826083822),
    (3.1111111111, 0.8330832862, 0.3699515547),
    (3.5555555556, 1.0296909368, 1.2534773751),
    (4, 0.7014168885, 1.2236553321)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.8986996193, 0.8023023892),
    (0.4444444444, 1.1364195285, 0.6687229368),
    (0.8888888889, 2, 0.8156198524),
    (1.3333333333, 1.3527484993, 1.1266978453),
    (1.7777777778, 1.5740656651, 0.8980380465),
    (2.2222222222, 1.034449226, 0.6770447817),
    (2.6666666667, 1.1647796282, 1.1019619535),
    (3.1111111111, 1.4786188729, 0.4989094734),
    (3.5555555556, 1.0685640163, 0.8287335876),
    (4, 1.665906193, 0.9516864724)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 0.5062071281),
    (0.4444444444, 1.4531840842, 0.9762552003),
    (0.8888888889, 1.2236553321, 0.6770447817),
    (1.3333333333, 1.4751008197, 1.0595485882),
    (1.7777777778, 1.2948736975, 0.8733021547),
    (2.2222222222, 0.8775875825, 0.77496661),
    (2.6666666667, 1.1943479843, 1.2112406716),
    (3.1111111111, 0.8330832862, 0.3514718165),
    (3.5555555556, 0.9163291572, 0.1649291558),
    (4, 1.4990659947, 1.0128757674)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5367991317, 1.5205547536),
    (0.4444444444, 0.55892837, 1.5826083822),
    (0.8888888889, 0, 1.619805772),
    (1.3333333333, 0.6852275105, 1.619805772),
    (1.7777777778, 0.4259343349, 1.6406354152),
    (2.2222222222, 0, 2),
    (2.6666666667, 0, 1.1910120937),
    (3.1111111111, 0.5786764305, 0.8838451809),
    (3.5555555556, 0.9583954939, 1.0958428304),
    (4, 0.9914206472, 1.1199595093)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4040715568, 1.4937928719),
    (0.4444444444, 1.0782030141, 0.9524253441),
    (0.8888888889, 1.0782030141, 1.4141437444),
    (1.3333333333, 1.1392460405, 1.1329553904),
    (1.7777777778, 1.435129758, 1.3229552183),
    (2.2222222222, 0.9853039509, 0.9643562786),
    (2.6666666667, 1.0565504637, 1.3312770632),
    (3.1111111111, 1.1840865711, 1.006736303),
    (3.5555555556, 1.1910120937, 0.6687229368),
    (4, 1.376094375, 0.9025038717)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3229552183, 1.3846675639),
    (0.4444444444, 0.9883617877, 1.5205547536),
    (0.8888888889, 0.1358580679, 1.4812135846),
    (1.3333333333, 1.0475746559, 1.600550296),
    (1.7777777778, 1.0475746559, 1.4812135846),
    (2.2222222222, 0.9853039509, 0.9524253441),
    (2.6666666667, 1.1647796282, 1.435129758),
    (3.1111111111, 1.1840865711, 0.7453820419),
    (3.5555555556, 0.8857253942, 1.1142746058),
    (4, 0.4036320282, 1.1599312329)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}

triple[] points = {
    (0, 1.1398517463, 1.031737289),
    (0.4444444444, 0.9857076584, 1.0636317828),
    (0.8888888889, 1.0656479268, 0.9849218094),
    (1.3333333333, 0.9612800867, 0.7097501233),
    (1.7777777778, 0.9143019956, 0.7400098097),
    (2.2222222222, 1.0904478975, 1.15983439),
    (2.6666666667, 1.0149601108, 0.7544183091),
    (3.1111111111, 1.1509018038, 1.2271229605),
    (3.5555555556, 1.0943190667, 1.2681700914),
    (4, 0.8815530249, 0.5947508912)
};
//dot(points[0], blue);

pen myPen = red + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9873494003, 1.1582368886),
    (0.4444444444, 0.9734625546, 1.2063959928),
    (0.8888888889, 0.839344374, 1.306234096),
    (1.3333333333, 1.0642320504, 1.226755535),
    (1.7777777778, 1.1169072133, 1.3616423051),
    (2.2222222222, 0.9288103895, 1.1303301405),
    (2.6666666667, 1.0485815717, 1.3847509456),
    (3.1111111111, 0.8678767048, 0.9385632064),
    (3.5555555556, 0.9413827913, 0.9569483379),
    (4, 0.9715866736, 1.1957285442)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8483889948, 0.7712555822),
    (0.4444444444, 0.9491812897, 0.6748645151),
    (0.8888888889, 1.0128884445, 0.6494245221),
    (1.3333333333, 0.9698802206, 1.0764529881),
    (1.7777777778, 0.9630057322, 0.8776025556),
    (2.2222222222, 0.8759190738, 0.6506182184),
    (2.6666666667, 0.9243102128, 0.8324295455),
    (3.1111111111, 0.8771970074, 0.6986553551),
    (3.5555555556, 0.957703578, 0.7289371689),
    (4, 1.0759104007, 1.150429065)
};
//dot(points[0], blue);

pen myPen = green + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}
