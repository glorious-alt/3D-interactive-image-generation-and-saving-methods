import three;
usepackage("esvect");
size(10cm);
currentprojection = perspective(0, -1, 0);
draw(box(O, (4*X + 2*Y + 2*Z)), black);

// 手动绘制 x 轴刻度
for (int i = 1; i <= 10; ++i) {
    draw((i*(4/9)-(4/9), 0, 0)--(i*(4/9)-(4/9), 0, 0.1), black);  // 绘制刻度线
    label("$" + string(i) + "$", ((i-1)*(4/9), 0,-0.1));  // 添加刻度标签
}

// 添加 x 轴标签
label("$Time$", (2,-0.2,-0.3));
label("$Score$", (-0.8,0.8,-0.2));
label("$Start\_time$", (-1,0.2,1));

// 定义轨迹点与 x 轴的 10 个点对应

triple[] points = {
    (0, 1.1745268696, 1.1081053214),
    (0.4444444444, 1.5969134823, 1.0595485882),
    (0.8888888889, 1.0776148349, 0.8089879063),
    (1.3333333333, 1.5131358241, 0.9284232209),
    (1.7777777778, 0.4519881112, 0.8918946786),
    (2.2222222222, 1.0574559594, 0.9102536766),
    (2.6666666667, 0.5832483486, 1.1142746058),
    (3.1111111111, 0.5738084394, 1.6298631491),
    (3.5555555556, 0.2278923803, 1.787589636),
    (4, 0.7635897384, 0.6860726901)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.1777991043),
    (0.4444444444, 0.8585070772, 1.1204715245),
    (0.8888888889, 1.767523057, 0.9881328913),
    (1.3333333333, 1.7843465515, 1.0958428304),
    (1.7777777778, 1.4101650889, 0.5425964137),
    (2.2222222222, 2, 0.9524253441),
    (2.6666666667, 0.9822912358, 0.5187864154),
    (3.1111111111, 2, 1.5209243416),
    (3.5555555556, 1.7977615772, 0.7318084089),
    (4, 1.1989678515, 0.7664003613)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.4141437444),
    (0.4444444444, 1.2648299697, 1.1910120937),
    (0.8888888889, 1.2794723027, 1.3661389652),
    (1.3333333333, 1.1318399315, 1.0595485882),
    (1.7777777778, 0.6267621907, 0.8287335876),
    (2.2222222222, 1.810440101, 1.4690983238),
    (2.6666666667, 0.7040709888, 0.5755110625),
    (3.1111111111, 1.6578926905, 1.5527638817),
    (3.5555555556, 1.0633388599, 0.5062071281),
    (4, 0.8583120931, 0.6021507957)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6645071899, 1.4937928719),
    (0.4444444444, 1.0230023935, 1.1142746058),
    (0.8888888889, 0.564870242, 0.8287335876),
    (1.3333333333, 1.2948060845, 1.2320315815),
    (1.7777777778, 1.158394846, 0.232476943),
    (2.2222222222, 1.0574559594, 0.8857253942),
    (2.6666666667, 1.561272692, 0.5425964137),
    (3.1111111111, 2, 1.216293833),
    (3.5555555556, 1.1015517522, 0.2507601471),
    (4, 0.4086004398, 0.3699515547)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 1.5205547536),
    (0.4444444444, 1.2648299697, 1.1455717397),
    (0.8888888889, 1.0776148349, 1.1712664124),
    (1.3333333333, 1.3583805599, 1.0059328937),
    (1.7777777778, 1.158394846, 0.8980380465),
    (2.2222222222, 2, 1.4460916883),
    (2.6666666667, 0.7991717425, 0.6602533881),
    (3.1111111111, 2, 1.23109971),
    (3.5555555556, 1.6026713895, 1.0059328937),
    (4, 0.5843234388, 0.8586782576)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.3483731883),
    (0.4444444444, 1.5969134823, 1.1019619535),
    (0.8888888889, 0.6383700608, 1.0059328937),
    (1.3333333333, 1.0055192992, 0.7887593284),
    (1.7777777778, 0.9952101864, 0.7243125317),
    (2.2222222222, 2, 0.8607539595),
    (2.6666666667, 0.8754350952, 0.5425964137),
    (3.1111111111, 1.5212944497, 1.2697291762),
    (3.5555555556, 0.85717115, 0.1013003807),
    (4, 1.0169670095, 0.1358580679)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 1.2181042243),
    (0.4444444444, 0.7215743629, 1.2607898392),
    (0.8888888889, 1.0059328937, 1.3229552183),
    (1.3333333333, 0.7302708238, 1.1266978453),
    (1.7777777778, 1.3070612262, 1),
    (2.2222222222, 1.7504043617, 1.0059328937),
    (2.6666666667, 0.9654191746, 1.0655551847),
    (3.1111111111, 1.140183069, 1.1875969245),
    (3.5555555556, 0.7930891878, 0.6516268117),
    (4, 0.9943815053, 0.6703190838)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.3067209471),
    (0.4444444444, 1.5969134823, 1.435129758),
    (0.8888888889, 1.3661389652, 1.0296909368),
    (1.3333333333, 0.9375393224, 0.9464444491),
    (1.7777777778, 0.4519881112, 0.6428330556),
    (2.2222222222, 0.4844732346, 1.1777991043),
    (2.6666666667, 0.8754350952, 0.9762552003),
    (3.1111111111, 0.4739025803, 1.5700967054),
    (3.5555555556, 1.0154282222, 0.8607539595),
    (4, 0.7635897384, 0.8838451809)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.4040715568),
    (0.4444444444, 1.1131978221, 1.22503339),
    (0.8888888889, 1.1910120937, 1.0178039682),
    (1.3333333333, 1.1963712684, 1.22503339),
    (1.7777777778, 1.2468996646, 0.4931132021),
    (2.2222222222, 0.9318598294, 0.8416635922),
    (2.6666666667, 0.741901977, 0.7818957757),
    (3.1111111111, 1.4221503635, 1.126512999),
    (3.5555555556, 1.4907034996, 0.8857253942),
    (4, 0.5200696529, 0.3514718165)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.4244889375),
    (0.4444444444, 1.5969134823, 1.5348671048),
    (0.8888888889, 0.8254731304, 1.0897463234),
    (1.3333333333, 1.3336886631, 1.1329553904),
    (1.7777777778, 1.158394846, 0.564870242),
    (2.2222222222, 1.0574559594, 1.4812135846),
    (2.6666666667, 0.6555127601, 0.6246986086),
    (3.1111111111, 0.2299290868, 1.8956630523),
    (3.5555555556, 0.2690373752, 1.1976976108),
    (4, 0.2751938777, 0.5162488282)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6099992322, 0.7012067491),
    (0.4444444444, 1.5969134823, 0.6932790529),
    (0.8888888889, 1.0059328937, 0.8222008957),
    (1.3333333333, 1.8641419321, 0.8795284755),
    (1.7777777778, 2, 0.9193594994),
    (2.2222222222, 2, 0.9284232209),
    (2.6666666667, 1.1648921773, 0.8980380465),
    (3.1111111111, 1.6578926905, 1.1667619774),
    (3.5555555556, 1.1015517522, 0.9223851651),
    (4, 1.7716342838, 0.3101851109)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 1.1329553904),
    (0.4444444444, 1.5969134823, 1.2832826301),
    (0.8888888889, 1.2794723027, 1.0237447997),
    (1.3333333333, 1.2267137173, 0.8023023892),
    (1.7777777778, 1.4101650889, 0.3366118777),
    (2.2222222222, 0.6811159281, 0.9223851651),
    (2.6666666667, 0.935092079, 0.9940671063),
    (3.1111111111, 1.6578926905, 1.006736303),
    (3.5555555556, 1.4907034996, 0.380194228),
    (4, 0.6304432827, 0.4479429594)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 1.5348671048),
    (0.4444444444, 0.7215743629, 0.9583954939),
    (0.8888888889, 0.4651328952, 0.9223851651),
    (1.3333333333, 0.6337775612, 1.619805772),
    (1.7777777778, 0.8609761514, 0.283190682),
    (2.2222222222, 0.6207803934, 0.8980380465),
    (2.6666666667, 0.8754350952, 0.283190682),
    (3.1111111111, 0.6613072675, 1.3026602119),
    (3.5555555556, 0.5821447971, 0.5858562556),
    (4, 0.9943815053, 0.6112081523)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 0.6852275105),
    (0.4444444444, 1.0230023935, 1.0475746559),
    (0.8888888889, 0.9344448153, 0.7955605068),
    (1.3333333333, 0.8017740079, 0.9583954939),
    (1.7777777778, 0.8609761514, 0.7818957757),
    (2.2222222222, 0.9318598294, 0.7392101608),
    (2.6666666667, 0.8754350952, 0.399449704),
    (3.1111111111, 0.8110186275, 1.4181972811),
    (3.5555555556, 0.9535965829, 0.5367991317),
    (4, 0.9684682786, 0.7418222679)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 1.4460916883),
    (0.4444444444, 1.0230023935, 1.2044394932),
    (0.8888888889, 1.3661389652, 1.1843801476),
    (1.3333333333, 0.4938170347, 0.9940671063),
    (1.7777777778, 0.5654556826, 0.6687229368),
    (2.2222222222, 1.5800348523, 0.8156198524),
    (2.6666666667, 0.7991717425, 0.6338610348),
    (3.1111111111, 2, 1.25397557),
    (3.5555555556, 1.4328332648, 0.4422670155),
    (4, 0.6769340567, 0.583472753)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.3229552183),
    (0.4444444444, 1.0230023935, 1.3229552183),
    (0.8888888889, 1.3661389652, 1.0715767791),
    (1.3333333333, 0.8228875552, 0.9524253441),
    (1.7777777778, 0.8609761514, 0.7012067491),
    (2.2222222222, 2, 0.7955605068),
    (2.6666666667, 0.8754350952, 0.8670446096),
    (3.1111111111, 1.250414619, 1.0128757674),
    (3.5555555556, 0.9535965829, 0.5367991317),
    (4, 0.6495580357, 0.5929098309)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.767523057, 1.3661389652),
    (0.4444444444, 1.5969134823, 1.3397466119),
    (0.8888888889, 1.3661389652, 1.2987932509),
    (1.3333333333, 1.2948060845, 0.9344448153),
    (1.7777777778, 0.5654556826, 0.1013003807),
    (2.2222222222, 0.4464158462, 0.9643562786),
    (2.6666666667, 0.5832483486, 0.4651328952),
    (3.1111111111, 1.6578926905, 1.0624606776),
    (3.5555555556, 1.0154282222, 0.7818957757),
    (4, 0.8049276631, 0.8069414507)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 1.2534773751),
    (0.4444444444, 1.0230023935, 0.7679684185),
    (0.8888888889, 0.6383700608, 0.7608975995),
    (1.3333333333, 1.3932983124, 0.8287335876),
    (1.7777777778, 1.1113812947, 0.4723745208),
    (2.2222222222, 2, 0.9940671063),
    (2.6666666667, 0.935092079, 0.8287335876),
    (3.1111111111, 2, 1.2617984034),
    (3.5555555556, 0.6800614493, 0.7167173699),
    (4, 0.7360135803, 0.8003050892)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 0.9223851651),
    (0.4444444444, 1.2648299697, 1.3483731883),
    (0.8888888889, 0.6811530255, 1.1519345001),
    (1.3333333333, 1.0974961283, 0.7318084089),
    (1.7777777778, 1.2023040921, 0.7465226249),
    (2.2222222222, 1.4309752168, 0.9821960318),
    (2.6666666667, 0.935092079, 0.1013003807),
    (3.1111111111, 1.5212944497, 0.9761348674),
    (3.5555555556, 1.3934587741, 0.212410364),
    (4, 0.7360135803, 0.4989094734)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 1.3942521925),
    (0.4444444444, 1.5969134823, 1.4937928719),
    (0.8888888889, 1.0059328937, 1.3571669444),
    (1.3333333333, 1.2948060845, 0.8980380465),
    (1.7777777778, 0.756678035, 0.9524253441),
    (2.2222222222, 2, 1.5348671048),
    (2.6666666667, 1.1648921773, 0.5425964137),
    (3.1111111111, 2, 1.5364162319),
    (3.5555555556, 0.7351718883, 0.1649291558),
    (4, 0.3807287519, 0.3316391408)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 1.2987932509),
    (0.4444444444, 1.5969134823, 1.7492398529),
    (0.8888888889, 0.5909251609, 1.1976976108),
    (1.3333333333, 0.6621025356, 0.9102536766),
    (1.7777777778, 0.2403480545, 0.7679684185),
    (2.2222222222, 1.5046475146, 1.7492398529),
    (2.6666666667, 0.4694318722, 0.8287335876),
    (3.1111111111, 2, 1.2386313716),
    (3.5555555556, 0.7930891878, 0.8670446096),
    (4, 0.84786031, 0.7200837722)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3699954929, 0.3366118777),
    (0.4444444444, 1.2648299697, 1.1329553904),
    (0.8888888889, 1.1910120937, 0.8352203718),
    (1.3333333333, 1.3932983124, 0.8544282603),
    (1.7777777778, 1.7907640593, 1.0535555509),
    (2.2222222222, 1.5800348523, 1.0715767791),
    (2.6666666667, 1.3119475441, 0.5858562556),
    (3.1111111111, 1.250414619, 1.0006050785),
    (3.5555555556, 1.4328332648, 1.5499081273),
    (4, 1.2910050977, 0.4191239185)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3366118777, 1.4574035863),
    (0.4444444444, 0.5449895201, 1.6406354152),
    (0.8888888889, 1.2794723027, 1.3483731883),
    (1.3333333333, 0.7613686284, 0.7818957757),
    (1.7777777778, 0.9153916302, 0.1649291558),
    (2.2222222222, 1.0574559594, 1.8350708442),
    (2.6666666667, 1.0936192592, 0.2507601471),
    (3.1111111111, 0, 0),
    (3.5555555556, 0.3855576963, 1.2534773751),
    (4, 0.9684682786, 0.4036320282)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 0.4794452464),
    (0.4444444444, 1.4221648376, 0.5755110625),
    (0.8888888889, 0.6383700608, 1.0416045061),
    (1.3333333333, 1.8641419321, 0.8156198524),
    (1.7777777778, 0.8066439035, 0.7608975995),
    (2.2222222222, 0.9318598294, 1.0776148349),
    (2.6666666667, 1.4302164221, 0.7955605068),
    (3.1111111111, 1.140183069, 1.0375443884),
    (3.5555555556, 1.1432206168, 1.1519345001),
    (4, 1.1644878268, 1.0251850552)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 1.0178039682),
    (0.4444444444, 1.2648299697, 0.9284232209),
    (0.8888888889, 1.5740656651, 1.1647796282),
    (1.3333333333, 1.6300484453, 0.8918946786),
    (1.7777777778, 1.7907640593, 1.0655551847),
    (2.2222222222, 1.2348665595, 1.619805772),
    (2.6666666667, 1.0936192592, 0.9643562786),
    (3.1111111111, 0.8985048692, 1.1134441918),
    (3.5555555556, 1.2496772613, 0.6057478075),
    (4, 1.0848655217, 0.7418222679)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 1.4690983238),
    (0.4444444444, 2, 1.4460916883),
    (0.8888888889, 0.8254731304, 1.0475746559),
    (1.3333333333, 0.9375393224, 0.9643562786),
    (1.7777777778, 1.2468996646, 0.8795284755),
    (2.2222222222, 0.8612166255, 1.4574035863),
    (2.6666666667, 0.8754350952, 0.7205276973),
    (3.1111111111, 1.250414619, 1.679210827),
    (3.5555555556, 1.0154282222, 1.6406354152),
    (4, 0.3498924985, 0.8459413668)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 0.9643562786),
    (0.4444444444, 1.2648299697, 1.2320315815),
    (0.8888888889, 0.5125577543, 1.2320315815),
    (1.3333333333, 0.6621025356, 0.7012067491),
    (1.7777777778, 0.7753534052, 0.4500918727),
    (2.2222222222, 1.365093153, 0.8222008957),
    (2.6666666667, 0.7040709888, 0.380194228),
    (3.1111111111, 0.6613072675, 1.1331068094),
    (3.5555555556, 1.3646347971, 0.6932790529),
    (4, 0.892501825, 0.5328107674)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 1.3753013914),
    (0.4444444444, 1.2648299697, 1.1976976108),
    (0.8888888889, 1.1910120937, 1.0655551847),
    (1.3333333333, 0.6973397881, 0.8222008957),
    (1.7777777778, 0.517910504, 0.7955605068),
    (2.2222222222, 2, 1.0897463234),
    (2.6666666667, 0.935092079, 0.8089879063),
    (3.1111111111, 2, 1.3862080833),
    (3.5555555556, 1.198811539, 1.1329553904),
    (4, 1.1275631831, 0.7200837722)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6645071899, 1.6406354152),
    (0.4444444444, 0, 1.5068867979),
    (0.8888888889, 0.2977652146, 1.435129758),
    (1.3333333333, 0.4938170347, 0.985164875),
    (1.7777777778, 0.6267621907, 0.6008685523),
    (2.2222222222, 0.7874053878, 1.3942521925),
    (2.6666666667, 0.4932069152, 0.8857253942),
    (3.1111111111, 0.945681362, 1.3662224388),
    (3.5555555556, 0.5361517975, 0.7955605068),
    (4, 0.4421924223, 0.8713083274)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 1.435129758),
    (0.4444444444, 1.2648299697, 1.3067209471),
    (0.8888888889, 1.5740656651, 1.2391024005),
    (1.3333333333, 0.7302708238, 0.77496661),
    (1.7777777778, 1.0539449316, 0.9583954939),
    (2.2222222222, 2, 0.6687229368),
    (2.6666666667, 1.0392154501, 0.6811530255),
    (3.1111111111, 2, 1.1397431709),
    (3.5555555556, 2, 0.7887593284),
    (4, 0.7072133236, 0.6373880481)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.767523057, 0.9284232209),
    (0.4444444444, 0.8585070772, 0.6729017692),
    (0.8888888889, 1.1910120937, 0.9314359837),
    (1.3333333333, 0.9375393224, 0.7955605068),
    (1.7777777778, 1.5257206213, 0.6153324361),
    (2.2222222222, 1.7504043617, 1.5826083822),
    (2.6666666667, 1.4302164221, 0.8287335876),
    (3.1111111111, 2, 0.9944807008),
    (3.5555555556, 1.198811539, 0.3366118777),
    (4, 0.5386616094, 0.6782498566)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 1.3571669444),
    (0.4444444444, 1.2648299697, 1.2756874683),
    (0.8888888889, 1.1266978453, 1.1019619535),
    (1.3333333333, 0.9717302569, 1.0178039682),
    (1.7777777778, 0.9523650499, 0.8544282603),
    (2.2222222222, 1.7504043617, 0.9762552003),
    (2.6666666667, 0.7991717425, 0.7714763629),
    (3.1111111111, 1.6578926905, 1.4411387867),
    (3.5555555556, 1.0154282222, 0.6338610348),
    (4, 0.7938661195, 0.4614293872)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 1.2320315815),
    (0.4444444444, 1.4221648376, 1.2462496544),
    (0.8888888889, 1.0776148349, 1.1392460405),
    (1.3333333333, 1.0055192992, 1.1142746058),
    (1.7777777778, 1.0539449316, 0.8023023892),
    (2.2222222222, 0.9318598294, 0.9404514118),
    (2.6666666667, 1.0392154501, 0.9881328913),
    (3.1111111111, 1.250414619, 1.2942321987),
    (3.5555555556, 0.8960973232, 0.6153324361),
    (4, 0.7360135803, 0.7594563851)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.212410364, 2),
    (0.4444444444, 1.5969134823, 1.8350708442),
    (0.8888888889, 0.8254731304, 1.5348671048),
    (1.3333333333, 1.1963712684, 1.1976976108),
    (1.7777777778, 0.7172308529, 1.1081053214),
    (2.2222222222, 0.6207803934, 1.6406354152),
    (2.6666666667, 0.3676554557, 1.0237447997),
    (3.1111111111, 0.8110186275, 1.1464244022),
    (3.5555555556, 0.5821447971, 1.0356437214),
    (4, 0.5200696529, 0.9394431816)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5425964137, 1.619805772),
    (0.4444444444, 0.8585070772, 1.4040715568),
    (0.8888888889, 0.8826304984, 1.2909825899),
    (1.3333333333, 0.3467021116, 0.9163291572),
    (1.7777777778, 1.5257206213, 0.8416635922),
    (2.2222222222, 1.7504043617, 1.4244889375),
    (2.6666666667, 0.5557356079, 0.4794452464),
    (3.1111111111, 0.7412761213, 1.7417230994),
    (3.5555555556, 0.7930891878, 0.5187864154),
    (4, 0.5621365746, 0.5162488282)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.399449704, 1.5499081273),
    (0.4444444444, 0.5449895201, 1.1519345001),
    (0.8888888889, 0.6057478075, 1.2181042243),
    (1.3333333333, 0.8468470828, 0.7608975995),
    (1.7777777778, 0.3204378929, 0.380194228),
    (2.2222222222, 0.4181516003, 1.1976976108),
    (2.6666666667, 0.8754350952, 0.3243705185),
    (3.1111111111, 1.0671676165, 1.0437464854),
    (3.5555555556, 0.6800614493, 0.8918946786),
    (4, 0.3807287519, 0.260837433)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.767523057, 1.1843801476),
    (0.4444444444, 1.5969134823, 1.3312770632),
    (0.8888888889, 1.5740656651, 1.1777991043),
    (1.3333333333, 1.5131358241, 0.8670446096),
    (1.7777777778, 1.0539449316, 0.4085711774),
    (2.2222222222, 1.7504043617, 0.9464444491),
    (2.6666666667, 1.2347159361, 0.212410364),
    (3.1111111111, 2, 1.1736478987),
    (3.5555555556, 1.7977615772, 1.4690983238),
    (4, 0.7360135803, 0.8135352611)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6008685523, 1.2391024005),
    (0.4444444444, 0.2301941969, 1.2987932509),
    (0.8888888889, 0.1013003807, 0.8670446096),
    (1.3333333333, 0.8468470828, 1.0715767791),
    (1.7777777778, 0.1866217871, 0.8089879063),
    (2.2222222222, 0.5591206054, 0.8733021547),
    (2.6666666667, 1.3119475441, 0.7537503456),
    (3.1111111111, 0.2299290868, 1.3112315114),
    (3.5555555556, 0.8960973232, 0.6428330556),
    (4, 0.9258898425, 0.5538401768)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 0.7243125317),
    (0.4444444444, 1.2648299697, 0.9163291572),
    (0.8888888889, 1.3661389652, 0.8480654999),
    (1.3333333333, 1.0974961283, 0.8607539595),
    (1.7777777778, 1.2468996646, 0.5539083117),
    (2.2222222222, 2, 0.8795284755),
    (2.6666666667, 1.1648921773, 0.6972579443),
    (3.1111111111, 2, 0.5105604553),
    (3.5555555556, 1.7977615772, 0.564870242),
    (4, 1.0848655217, 0.8266040683)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 0.5425964137),
    (0.4444444444, 1.2648299697, 0.8089879063),
    (0.8888888889, 1.1910120937, 1.1266978453),
    (1.3333333333, 2, 0.7679684185),
    (1.7777777778, 1.5257206213, 0.4085711774),
    (2.2222222222, 2, 0.7465226249),
    (2.6666666667, 1.0936192592, 0.3243705185),
    (3.1111111111, 0.5738084394, 0.7453820419),
    (3.5555555556, 1.6026713895, 0.4422670155),
    (4, 1.1644878268, 0.1983251607)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 0.7090174101),
    (0.4444444444, 1.2648299697, 1.1647796282),
    (0.8888888889, 1.1266978453, 1.0356437214),
    (1.3333333333, 1.5808760815, 0.8733021547),
    (1.7777777778, 1.2023040921, 0.9102536766),
    (2.2222222222, 2, 0.8287335876),
    (2.6666666667, 1.4302164221, 1.0118671087),
    (3.1111111111, 1.4221503635, 1.0877242166),
    (3.5555555556, 1.198811539, 0.7679684185),
    (4, 0.8230545257, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 1.6885469045),
    (0.4444444444, 1.2648299697, 1.5826083822),
    (0.8888888889, 0.8254731304, 1.5826083822),
    (1.3333333333, 0.8468470828, 1.1204715245),
    (1.7777777778, 0.9952101864, 0.6852275105),
    (2.2222222222, 2, 1.5068867979),
    (2.6666666667, 0.8754350952, 0.7887593284),
    (3.1111111111, 2, 1.5885764436),
    (3.5555555556, 0.8960973232, 1.3571669444),
    (4, 0.84786031, 0.3872843784)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6008685523, 1.1266978453),
    (0.4444444444, 1.2648299697, 1.619805772),
    (0.8888888889, 0.7280725506, 1.5499081273),
    (1.3333333333, 0.3810864296, 0.9223851651),
    (1.7777777778, 0.6267621907, 0.9762552003),
    (2.2222222222, 0.4844732346, 1.716809318),
    (2.6666666667, 0.2622664615, 1.1329553904),
    (3.1111111111, 1.250414619, 1.7812224505),
    (3.5555555556, 1.1015517522, 1.8986996193),
    (4, 0.6495580357, 0.9333119571)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.2044394932),
    (0.4444444444, 0.4216812309, 0.9762552003),
    (0.8888888889, 0.380194228, 1.2681915911),
    (1.3333333333, 0.8017740079, 0.8416635922),
    (1.7777777778, 0.6007295623, 0.77496661),
    (2.2222222222, 0.2638639321, 0.4173916178),
    (2.6666666667, 0.4437131797, 1),
    (3.1111111111, 0.6613072675, 1.4072374927),
    (3.5555555556, 0.1769503954, 0.283190682),
    (4, 0.6054090895, 0.2867503717)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0),
    (0.4444444444, 1.0230023935, 1.2391024005),
    (0.8888888889, 1.2794723027, 1.1329553904),
    (1.3333333333, 1.163690014, 0.7243125317),
    (1.7777777778, 1.7907640593, 0.5309016762),
    (2.2222222222, 2, 0.9703090632),
    (2.6666666667, 1.1648921773, 1.0475746559),
    (3.1111111111, 2, 1.0941068932),
    (3.5555555556, 1.5514933958, 0.4173916178),
    (4, 1.539689776, 0.6541089557)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1013003807, 1.5068867979),
    (0.4444444444, 0.4947145759, 1.4812135846),
    (0.8888888889, 0.212410364, 1.2607898392),
    (1.3333333333, 0.2394456416, 0.8480654999),
    (1.7777777778, 0.6570993624, 0.8156198524),
    (2.2222222222, 0, 1.787589636),
    (2.6666666667, 0.6555127601, 0.8156198524),
    (3.1111111111, 1.3251144672, 1.1805918749),
    (3.5555555556, 0.4079055558, 0.5755110625),
    (4, 0.3025330597, 0.5434660666)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 1.0958428304),
    (0.4444444444, 1.5969134823, 1.3571669444),
    (0.8888888889, 0.6383700608, 0.9940671063),
    (1.3333333333, 1.2948060845, 0.7465226249),
    (1.7777777778, 0.8609761514, 0.5125577543),
    (2.2222222222, 1.0574559594, 0.8918946786),
    (2.6666666667, 1.0029726035, 0.7608975995),
    (3.1111111111, 2, 1.3199549421),
    (3.5555555556, 0.9535965829, 0.7392101608),
    (4, 0.6769340567, 0.7310372)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.2675841216, 1.0897463234),
    (0.4444444444, 0.2301941969, 1.4244889375),
    (0.8888888889, 0, 1.1455717397),
    (1.3333333333, 0.1043369477, 0.8089879063),
    (1.7777777778, 0.1146241123, 0.4342199962),
    (2.2222222222, 0.3115034368, 1.4040715568),
    (2.6666666667, 0.3096175497, 1.1266978453),
    (3.1111111111, 0.1408076062, 1.3565755071),
    (3.5555555556, 0.303831684, 0.6246986086),
    (4, 0.4421924223, 0.911778517)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 1.0356437214),
    (0.4444444444, 1.5969134823, 0.7318084089),
    (0.8888888889, 1.1266978453, 1.1142746058),
    (1.3333333333, 1.2546179581, 0.9041571696),
    (1.7777777778, 1.5257206213, 0.6852275105),
    (2.2222222222, 1.7504043617, 0.9881328913),
    (2.6666666667, 0.8754350952, 0.4931132021),
    (3.1111111111, 2, 1.1199595093),
    (3.5555555556, 1.6712719238, 0.399449704),
    (4, 2, 0.6937932627)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 1.3147724895),
    (0.4444444444, 1.5969134823, 1.6885469045),
    (0.8888888889, 0.4259343349, 1.5205547536),
    (1.3333333333, 0.5468159158, 1.0836708428),
    (1.7777777778, 0.3524175758, 0.6516268117),
    (2.2222222222, 0.9318598294, 1.5205547536),
    (2.6666666667, 1.0392154501, 0.6153324361),
    (3.1111111111, 2, 1.6532978884),
    (3.5555555556, 0.361146606, 0.9643562786),
    (4, 0.6304432827, 0.8395284066)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0, 1.716809318),
    (0.4444444444, 0.3036305708, 1.4690983238),
    (0.8888888889, 0.1649291558, 1.4460916883),
    (1.3333333333, 0.1698730508, 0.7537503456),
    (1.7777777778, 0.7373333084, 0.9193594994),
    (2.2222222222, 0.3517898349, 1.5499081273),
    (2.6666666667, 0.3676554557, 0.8857253942),
    (3.1111111111, 0.8110186275, 1.2236553321),
    (3.5555555556, 0.4478141626, 0.7243125317),
    (4, 0.7826520299, 0.8775875825)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 0.9464444491),
    (0.4444444444, 1.5969134823, 0.7955605068),
    (0.8888888889, 0.8826304984, 0.9494363266),
    (1.3333333333, 1.3336886631, 0.9404514118),
    (1.7777777778, 0.7373333084, 0.3366118777),
    (2.2222222222, 1.7504043617, 0.8670446096),
    (2.6666666667, 1.0936192592, 0.8857253942),
    (3.1111111111, 1.5212944497, 1.0562030792),
    (3.5555555556, 1.6712719238, 0.4794452464),
    (4, 1.8792606084, 0.4338652948)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 1.5826083822),
    (0.4444444444, 1.2648299697, 1.2681915911),
    (0.8888888889, 0.5909251609, 1.22503339),
    (1.3333333333, 0.4299032946, 0.7392101608),
    (1.7777777778, 1.0539449316, 0.8352203718),
    (2.2222222222, 0.6207803934, 0.9583954939),
    (2.6666666667, 0.4156200497, 0.6972579443),
    (3.1111111111, 0.945681362, 1.5061829653),
    (3.5555555556, 0.7930891878, 0.4651328952),
    (4, 0.7072133236, 0.4868641759)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.0595485882),
    (0.4444444444, 0.4216812309, 1.1583364078),
    (0.8888888889, 0.8254731304, 0.8416635922),
    (1.3333333333, 0.8468470828, 1.0776148349),
    (1.7777777778, 0.517910504, 0.5125577543),
    (2.2222222222, 1.5800348523, 0.9041571696),
    (2.6666666667, 0.6170220986, 0.6811530255),
    (3.1111111111, 1.6578926905, 1.0499655372),
    (3.5555555556, 0.8960973232, 1.2987932509),
    (4, 0.1159713597, 0.7524513356)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 1.2607898392),
    (0.4444444444, 0.1226586153, 0.380194228),
    (0.8888888889, 0.2507601471, 0.8918946786),
    (1.3333333333, 0, 0),
    (1.7777777778, 0.6908746163, 0.4723745208),
    (2.2222222222, 0.2048810366, 1.600550296),
    (2.6666666667, 0.203640657, 0.6008685523),
    (3.1111111111, 0.6613072675, 1.2462549974),
    (3.5555555556, 0.4828978505, 0.6645071899),
    (4, 0.5621365746, 0.6622742915)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 0.77496661),
    (0.4444444444, 1.1131978221, 1.0267171214),
    (0.8888888889, 0.8826304984, 0.9404514118),
    (1.3333333333, 1.0974961283, 1.1019619535),
    (1.7777777778, 0.8609761514, 0.9464444491),
    (2.2222222222, 1.365093153, 0.9344448153),
    (2.6666666667, 1.1648921773, 1.0356437214),
    (3.1111111111, 1.4221503635, 1.3471384292),
    (3.5555555556, 0.9268711326, 0.7537503456),
    (4, 0, 0)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 0.9762552003),
    (0.4444444444, 1.2648299697, 0.9102536766),
    (0.8888888889, 0.3593645848, 1.0595485882),
    (1.3333333333, 0.9375393224, 0.9762552003),
    (1.7777777778, 0.6908746163, 0.5755110625),
    (2.2222222222, 0.6811159281, 0.9163291572),
    (2.6666666667, 1.1648921773, 1.0296909368),
    (3.1111111111, 0.3160693985, 1.1069649739),
    (3.5555555556, 0.85717115, 0.7012067491),
    (4, 1.1644878268, 0.9025038717)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 1.8986996193),
    (0.4444444444, 1.2648299697, 1.600550296),
    (0.8888888889, 1.0059328937, 1.5657800038),
    (1.3333333333, 1.4461598232, 1.0897463234),
    (1.7777777778, 0.5425052244, 1.0416045061),
    (2.2222222222, 0.5184991514, 1.6633881223),
    (2.6666666667, 0.1250771943, 0.9434495363),
    (3.1111111111, 0.3160693985, 2),
    (3.5555555556, 1.0633388599, 2),
    (4, 0.9943815053, 0.8650057783)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.2681915911),
    (0.4444444444, 1.5969134823, 1.5657800038),
    (0.8888888889, 1.0776148349, 1.0836708428),
    (1.3333333333, 0.6621025356, 1.0655551847),
    (1.7777777778, 0, 0.8857253942),
    (2.2222222222, 0.7149209155, 1.1910120937),
    (2.6666666667, 0.741901977, 1.0535555509),
    (3.1111111111, 0.6613072675, 1.7083204309),
    (3.5555555556, 1.0633388599, 1.5068867979),
    (4, 0.2444820865, 0.6288167486)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 1.0776148349),
    (0.4444444444, 1.0230023935, 1.6633881223),
    (0.8888888889, 1.1266978453, 1.0776148349),
    (1.3333333333, 1.2267137173, 1.0178039682),
    (1.7777777778, 0.9153916302, 0.3366118777),
    (2.2222222222, 1.1458206273, 1.5657800038),
    (2.6666666667, 0.741901977, 0.8416635922),
    (3.1111111111, 1.4221503635, 1.6084091192),
    (3.5555555556, 0.9831179082, 1.8350708442),
    (4, 0.9943815053, 0.5639538851)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 1.4812135846),
    (0.4444444444, 1.5969134823, 1.3942521925),
    (0.8888888889, 2, 1.2832826301),
    (1.3333333333, 2, 1.0178039682),
    (1.7777777778, 1.3070612262, 0.7167173699),
    (2.2222222222, 2, 1.1712664124),
    (2.6666666667, 0.7991717425, 0.7714763629),
    (3.1111111111, 2, 1.2090110601),
    (3.5555555556, 1.198811539, 1.0715767791),
    (4, 1.0395349001, 0.6458160614)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4863550884, 1.3312770632),
    (0.4444444444, 0.3428987797, 1.4574035863),
    (0.8888888889, 0.399449704, 1.3753013914),
    (1.3333333333, 0.320789173, 1.0535555509),
    (1.7777777778, 0.7753534052, 0.5858562556),
    (2.2222222222, 2, 1.4141437444),
    (2.6666666667, 0.5153600821, 0.9072081498),
    (3.1111111111, 1.0671676165, 1.0750424818),
    (3.5555555556, 0.827707186, 0.8733021547),
    (4, 0.5621365746, 0.7936238579)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 1.1647796282),
    (0.4444444444, 1.0230023935, 0.8670446096),
    (0.8888888889, 1.4405688668, 0.9821960318),
    (1.3333333333, 1.5131358241, 0.985164875),
    (1.7777777778, 0.9523650499, 0.6246986086),
    (2.2222222222, 1.7504043617, 0.6932790529),
    (2.6666666667, 1.3119475441, 0.4500918727),
    (3.1111111111, 2, 1.1599312329),
    (3.5555555556, 1.198811539, 0.3593645848),
    (4, 1.612702619, 0.2317278291)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 0.9940671063),
    (0.4444444444, 1.5969134823, 1.3661389652),
    (0.8888888889, 1.0776148349, 1.3147724895),
    (1.3333333333, 1.2948060845, 0.9703090632),
    (1.7777777778, 1.3070612262, 0.6602533881),
    (2.2222222222, 1.0574559594, 1.1583364078),
    (2.6666666667, 0.7991717425, 0.9284232209),
    (3.1111111111, 1.140183069, 1.0813700025),
    (3.5555555556, 2, 1.0296909368),
    (4, 0.7826520299, 0.911778517)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.5657800038),
    (0.4444444444, 1.5969134823, 1.5205547536),
    (0.8888888889, 1.1910120937, 1.5068867979),
    (1.3333333333, 0.2394456416, 1.0416045061),
    (1.7777777778, 1.6426398893, 0.8480654999),
    (2.2222222222, 2, 1.1843801476),
    (2.6666666667, 0.741901977, 1.0958428304),
    (3.1111111111, 2, 1.8301269492),
    (3.5555555556, 1.5514933958, 1.3753013914),
    (4, 0.9092810506, 1.031357739)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6008685523, 0.5062071281),
    (0.4444444444, 1.5969134823, 1.3147724895),
    (0.8888888889, 0.77496661, 0.7167173699),
    (1.3333333333, 0.6973397881, 1.0326664139),
    (1.7777777778, 1.1113812947, 0.7465226249),
    (2.2222222222, 0.9318598294, 1.435129758),
    (2.6666666667, 1.7155533301, 0.6008685523),
    (3.1111111111, 0.945681362, 1.3965821935),
    (3.5555555556, 0.6285577317, 0.7090174101),
    (4, 0.4421924223, 0.7732862827)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.2756874683),
    (0.4444444444, 0.8585070772, 1.1777991043),
    (0.8888888889, 0.9344448153, 0.9762552003),
    (1.3333333333, 0.5927625073, 1.0326664139),
    (1.7777777778, 1.3070612262, 0.7465226249),
    (2.2222222222, 2, 0.7818957757),
    (2.6666666667, 1.0392154501, 0.8544282603),
    (3.1111111111, 1.0671676165, 1.2777739686),
    (3.5555555556, 1.198811539, 0.7465226249),
    (4, 0.6054090895, 0.7868953429)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.1019619535),
    (0.4444444444, 1.5969134823, 0.9643562786),
    (0.8888888889, 0.3366118777, 1.0118671087),
    (1.3333333333, 1.0666880429, 1.0475746559),
    (1.7777777778, 0.4066307179, 0.7318084089),
    (2.2222222222, 0.3868984398, 1.8986996193),
    (2.6666666667, 0.7991717425, 0.9524253441),
    (3.1111111111, 1.140183069, 1.2859393044),
    (3.5555555556, 0.4828978505, 1.435129758),
    (4, 0.6769340567, 0.5738258213)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 0.3114530955),
    (0.4444444444, 1.2648299697, 0.4794452464),
    (0.8888888889, 1.4405688668, 0.7318084089),
    (1.3333333333, 1.2267137173, 1),
    (1.7777777778, 1.158394846, 0.232476943),
    (2.2222222222, 2, 0.7243125317),
    (2.6666666667, 1.3119475441, 0.4173916178),
    (3.1111111111, 1.250414619, 1.1005198534),
    (3.5555555556, 1.1432206168, 0.6645071899),
    (4, 1.0395349001, 0.7801170272)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 1.7492398529),
    (0.4444444444, 0.7729643972, 1.4141437444),
    (0.8888888889, 0.7280725506, 1.2112406716),
    (1.3333333333, 0.6973397881, 0.8352203718),
    (1.7777777778, 1.7907640593, 0),
    (2.2222222222, 1.5800348523, 1.1204715245),
    (2.6666666667, 1.0936192592, 0),
    (3.1111111111, 1.5212944497, 1.4786188729),
    (3.5555555556, 1.1015517522, 0),
    (4, 0.7072133236, 0.1358580679)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.1204715245),
    (0.4444444444, 0.8585070772, 0.6008685523),
    (0.8888888889, 0.77496661, 0.399449704),
    (1.3333333333, 0.5279221189, 0.6246986086),
    (1.7777777778, 0.8066439035, 1.3846675639),
    (2.2222222222, 1.3311519133, 1.4937928719),
    (2.6666666667, 1.561272692, 1.0715767791),
    (3.1111111111, 0.6613072675, 1.4921053007),
    (3.5555555556, 1.3256141333, 1.4937928719),
    (4, 0.7635897384, 1.5364162319)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 0.8023023892),
    (0.4444444444, 2, 0.212410364),
    (0.8888888889, 1.3661389652, 0.5539083117),
    (1.3333333333, 1.0452556908, 0.6153324361),
    (1.7777777778, 1.5257206213, 0.9344448153),
    (2.2222222222, 1.4671850788, 0.3593645848),
    (2.6666666667, 2, 0.9163291572),
    (3.1111111111, 1.3251144672, 0.1983251607),
    (3.5555555556, 2, 0.8416635922),
    (4, 1.7716342838, 1.2236553321)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 0.4651328952),
    (0.4444444444, 2, 0.2507601471),
    (0.8888888889, 1.4405688668, 0),
    (1.3333333333, 1.6898148891, 0.2507601471),
    (1.7777777778, 1.158394846, 0.9881328913),
    (2.2222222222, 1.6804337199, 0),
    (2.6666666667, 1.4302164221, 0.1649291558),
    (3.1111111111, 1.5212944497, 0.1588258096),
    (3.5555555556, 1.3646347971, 0.7608975995),
    (4, 1.7716342838, 1.2617984034)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 1.0416045061),
    (0.4444444444, 2, 0.8416635922),
    (0.8888888889, 0.6811530255, 0.4931132021),
    (1.3333333333, 1.0452556908, 0.4651328952),
    (1.7777777778, 1.4101650889, 1.0715767791),
    (2.2222222222, 1.4671850788, 0.7608975995),
    (2.6666666667, 1.7155533301, 0.6687229368),
    (3.1111111111, 1.5722392017, 0.9086905211),
    (3.5555555556, 1.6712719238, 0.8156198524),
    (4, 1.441419072, 1.2859393044)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 0.6932790529),
    (0.4444444444, 1.5969134823, 0.7090174101),
    (0.8888888889, 0.8254731304, 0.7679684185),
    (1.3333333333, 1.0055192992, 0.6008685523),
    (1.7777777778, 1.6426398893, 1.0836708428),
    (2.2222222222, 0.8855666945, 1.0836708428),
    (2.6666666667, 1.561272692, 0.8480654999),
    (3.1111111111, 1.250414619, 0.9271724927),
    (3.5555555556, 0.7648408039, 1.5657800038),
    (4, 0.3272576427, 1.5700967054)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6099992322, 1.0535555509),
    (0.4444444444, 1.2648299697, 0.5062071281),
    (0.8888888889, 0.8826304984, 0.3366118777),
    (1.3333333333, 0.4938170347, 0.5187864154),
    (1.7777777778, 1.4101650889, 1.0118671087),
    (2.2222222222, 0.9626919001, 0.4651328952),
    (2.6666666667, 2, 0.6516268117),
    (3.1111111111, 0.9993186063, 0.6860726901),
    (3.5555555556, 1.1432206168, 0.9821960318),
    (4, 1.3523934443, 1.5885764436)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 0.7818957757),
    (0.4444444444, 1.5969134823, 0.4173916178),
    (0.8888888889, 0.9344448153, 1.3312770632),
    (1.3333333333, 1.4461598232, 0.6687229368),
    (1.7777777778, 1.3070612262, 1.3942521925),
    (2.2222222222, 1.1905539763, 0.6057478075),
    (2.6666666667, 1.4302164221, 1.0178039682),
    (3.1111111111, 1.250414619, 0.6200933179),
    (3.5555555556, 1.2849945466, 1.2112406716),
    (4, 0.9258898425, 1.6532978884)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 0.5309016762),
    (0.4444444444, 1.5969134823, 0.399449704),
    (0.8888888889, 0.8826304984, 0.2507601471),
    (1.3333333333, 0.9375393224, 0.4651328952),
    (1.7777777778, 1.6426398893, 1.0059328937),
    (2.2222222222, 1.39962532, 0.4500918727),
    (2.6666666667, 1.4302164221, 0.9434495363),
    (3.1111111111, 1.6578926905, 0.6782498566),
    (3.5555555556, 1.5514933958, 1.0595485882),
    (4, 1.3523934443, 1.23109971)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6099992322, 0.212410364),
    (0.4444444444, 1.5969134823, 0.564870242),
    (0.8888888889, 1.4405688668, 0.7537503456),
    (1.3333333333, 1.5131358241, 0.6428330556),
    (1.7777777778, 1.2468996646, 0.9940671063),
    (2.2222222222, 1.1117638801, 0.7537503456),
    (2.6666666667, 2, 1.1204715245),
    (3.1111111111, 1.5722392017, 0.97002413),
    (3.5555555556, 1.4328332648, 1.2756874683),
    (4, 1.6760114005, 1.2462549974)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.767523057, 0.9163291572),
    (0.4444444444, 0.4603546131, 2),
    (0.8888888889, 0.2977652146, 0.9102536766),
    (1.3333333333, 0.9717302569, 0.5425964137),
    (1.7777777778, 0.2837418681, 1.4040715568),
    (2.2222222222, 1.2717332769, 0.1901110634),
    (2.6666666667, 0.6170220986, 0.9703090632),
    (3.1111111111, 0, 0),
    (3.5555555556, 1.0154282222, 1.716809318),
    (4, 0.1675675531, 2)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 1.1392460405),
    (0.4444444444, 0.5449895201, 0.7608975995),
    (0.8888888889, 0.77496661, 0.8023023892),
    (1.3333333333, 0.3810864296, 0.7167173699),
    (1.7777777778, 0.5870208181, 1.0776148349),
    (2.2222222222, 1.2717332769, 1),
    (2.6666666667, 1.4302164221, 1.0595485882),
    (3.1111111111, 1.140183069, 0.6541089557),
    (3.5555555556, 0.7351718883, 1.4812135846),
    (4, 0.9456340604, 1.679210827)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6645071899, 0.6428330556),
    (0.4444444444, 0.7215743629, 0.6008685523),
    (0.8888888889, 0.5425964137, 0.6892692082),
    (1.3333333333, 0.5927625073, 0.5309016762),
    (1.7777777778, 0.6908746163, 1.1142746058),
    (2.2222222222, 0.8254751638, 0.3114530955),
    (2.6666666667, 1.7155533301, 0.8023023892),
    (3.1111111111, 0.771346443, 0.6288167486),
    (3.5555555556, 0.7351718883, 0.9284232209),
    (4, 0.9092810506, 1.4181972811)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 0.380194228),
    (0.4444444444, 1.5969134823, 0.1013003807),
    (0.8888888889, 1.5740656651, 0.1013003807),
    (1.3333333333, 1.6300484453, 0.3114530955),
    (1.7777777778, 1.4101650889, 0.7090174101),
    (2.2222222222, 1.3311519133, 0.5755110625),
    (2.6666666667, 2, 1.1392460405),
    (3.1111111111, 0.8985048692, 0.4479429594),
    (3.5555555556, 1.2849945466, 1.0416045061),
    (4, 1.1644878268, 1.25397557)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 1.1583364078),
    (0.4444444444, 1.5969134823, 0.4931132021),
    (0.8888888889, 1.2794723027, 0.9643562786),
    (1.3333333333, 0.8994801466, 0.6516268117),
    (1.7777777778, 1.5257206213, 0.8222008957),
    (2.2222222222, 1.4671850788, 0.5539083117),
    (2.6666666667, 2, 0.9344448153),
    (3.1111111111, 1.3690403656, 0.4743857496),
    (3.5555555556, 1.6712719238, 1.2462496544),
    (4, 1.1644878268, 1.3965821935)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 2, 0.9881328913),
    (0.4444444444, 1.5969134823, 0.5248991803),
    (0.8888888889, 1.0776148349, 0.4794452464),
    (1.3333333333, 1.5808760815, 0.4342199962),
    (1.7777777778, 1.7907640593, 0.9041571696),
    (2.2222222222, 1.3311519133, 0.6153324361),
    (2.6666666667, 2, 0.7205276973),
    (3.1111111111, 1.4221503635, 1.1531529172),
    (3.5555555556, 1.7977615772, 0.9132939473),
    (4, 1.2910050977, 1.2697291762)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 1.1519345001),
    (0.4444444444, 2, 0.5539083117),
    (0.8888888889, 0.77496661, 0.6153324361),
    (1.3333333333, 1.3583805599, 0.283190682),
    (1.7777777778, 1.6426398893, 1.0356437214),
    (2.2222222222, 1.628237785, 0.3366118777),
    (2.6666666667, 1.7155533301, 0.9223851651),
    (3.1111111111, 1.6578926905, 0.3872843784),
    (3.5555555556, 1.4328332648, 1.0237447997),
    (4, 1.7716342838, 1.3199549421)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 0.6153324361),
    (0.4444444444, 1.0230023935, 0.283190682),
    (0.8888888889, 0.7280725506, 0.380194228),
    (1.3333333333, 1.163690014, 0.6852275105),
    (1.7777777778, 1.0539449316, 1.0475746559),
    (2.2222222222, 1.2717332769, 0.564870242),
    (2.6666666667, 2, 0.7090174101),
    (3.1111111111, 1.3251144672, 0.7200837722),
    (3.5555555556, 1.2496772613, 1.2607898392),
    (4, 0.9943815053, 1.6084091192)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 1.22503339),
    (0.4444444444, 2, 0.8480654999),
    (0.8888888889, 1.5740656651, 1.3067209471),
    (1.3333333333, 1.0452556908, 0.6932790529),
    (1.7777777778, 1.6426398893, 0.9284232209),
    (2.2222222222, 1.5348549924, 0.4931132021),
    (2.6666666667, 1.3119475441, 0.7318084089),
    (3.1111111111, 1.5212944497, 0.9025038717),
    (3.5555555556, 1.2849945466, 1.619805772),
    (4, 2, 1.7812224505)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6099992322, 0.9583954939),
    (0.4444444444, 2, 0.5248991803),
    (0.8888888889, 1.1266978453, 0.5959284432),
    (1.3333333333, 1.2948060845, 0.3366118777),
    (1.7777777778, 1.6426398893, 0.8670446096),
    (2.2222222222, 1.39962532, 0.1013003807),
    (2.6666666667, 1.7155533301, 0.3593645848),
    (3.1111111111, 1.762756952, 0.2867503717),
    (3.5555555556, 1.3256141333, 0.6770447817),
    (4, 1.539689776, 1.1331068094)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4863550884, 0.6338610348),
    (0.4444444444, 0.7729643972, 0.1649291558),
    (0.8888888889, 0.4259343349, 0.5755110625),
    (1.3333333333, 0.4635837681, 0.1013003807),
    (1.7777777778, 0.8609761514, 0.8607539595),
    (2.2222222222, 1.1117638801, 0.2507601471),
    (2.6666666667, 1.1648921773, 0.6428330556),
    (3.1111111111, 0.5368916656, 0.260837433),
    (3.5555555556, 0.9535965829, 0.5959284432),
    (4, 0.8373047699, 1.8301269492)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0.8222008957),
    (0.4444444444, 1.0230023935, 0.9703090632),
    (0.8888888889, 0.7280725506, 0.5309016762),
    (1.3333333333, 0.5927625073, 0.4931132021),
    (1.7777777778, 0.9523650499, 0.8733021547),
    (2.2222222222, 1.2717332769, 0.380194228),
    (2.6666666667, 1.7155533301, 0.8733021547),
    (3.1111111111, 0.7412761213, 0.3101851109),
    (3.5555555556, 0.7037715155, 0.9132939473),
    (4, 0.9258898425, 1.5527638817)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6008685523, 0.8416635922),
    (0.4444444444, 0.8585070772, 1.1843801476),
    (0.8888888889, 0.8826304984, 0.7428772632),
    (1.3333333333, 0.5927625073, 0.4085711774),
    (1.7777777778, 0.6570993624, 1.0296909368),
    (2.2222222222, 1.0008104347, 0.5425964137),
    (2.6666666667, 1.7155533301, 0.7392101608),
    (3.1111111111, 1.6578926905, 0.6937932627),
    (3.5555555556, 1.4907034996, 0.8287335876),
    (4, 1.1275631831, 1.4921053007)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 0.3593645848),
    (0.4444444444, 2, 0.77496661),
    (0.8888888889, 1.1910120937, 0.8733021547),
    (1.3333333333, 1.1318399315, 0.380194228),
    (1.7777777778, 1.7907640593, 1.1329553904),
    (2.2222222222, 1.4671850788, 1.6885469045),
    (2.6666666667, 1.7155533301, 1.0806405006),
    (3.1111111111, 1.3690403656, 1.4531840842),
    (3.5555555556, 1.2849945466, 1.4574035863),
    (4, 1.441419072, 1.5209243416)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 0.8319825694),
    (0.4444444444, 2, 1.0416045061),
    (0.8888888889, 0.9344448153, 1.2756874683),
    (1.3333333333, 0.7613686284, 0.5062071281),
    (1.7777777778, 1.158394846, 1.1266978453),
    (2.2222222222, 1.4671850788, 0.6428330556),
    (2.6666666667, 2, 1.1455717397),
    (3.1111111111, 1.1837577238, 1.4656625104),
    (3.5555555556, 1.2849945466, 1.4141437444),
    (4, 0, 0)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 0.8480654999),
    (0.4444444444, 2, 0.3366118777),
    (0.8888888889, 1.5740656651, 0.3114530955),
    (1.3333333333, 0.8767686498, 0.564870242),
    (1.7777777778, 1.6426398893, 0.9703090632),
    (2.2222222222, 1.3311519133, 0.5187864154),
    (2.6666666667, 2, 0.8607539595),
    (3.1111111111, 2, 0.3699515547),
    (3.5555555556, 1.6026713895, 1.0776148349),
    (4, 1.7716342838, 1.6298631491)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 1),
    (0.4444444444, 2, 0.7465226249),
    (0.8888888889, 0.8254731304, 0.7428772632),
    (1.3333333333, 0.8994801466, 0.5858562556),
    (1.7777777778, 1.4101650889, 1.0897463234),
    (2.2222222222, 1.628237785, 0.5062071281),
    (2.6666666667, 1.7155533301, 1.1081053214),
    (3.1111111111, 1.6578926905, 0.6703190838),
    (3.5555555556, 1.3256141333, 1.0958428304),
    (4, 1.3523934443, 1.4786188729)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 0.7608975995),
    (0.4444444444, 1.0230023935, 0.4342199962),
    (0.8888888889, 0.5125577543, 0.5187864154),
    (1.3333333333, 0.5279221189, 0.4651328952),
    (1.7777777778, 0.3808854164, 0.9821960318),
    (2.2222222222, 0.7277720932, 0.5309016762),
    (2.6666666667, 1.561272692, 0.9821960318),
    (3.1111111111, 0.8586690321, 0.4989094734),
    (3.5555555556, 0.3341540683, 1.3483731883),
    (4, 0.6769340567, 1.7083204309)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 1.0655551847),
    (0.4444444444, 2, 0.5858562556),
    (0.8888888889, 0.8826304984, 0.7243125317),
    (1.3333333333, 0.7613686284, 0.1649291558),
    (1.7777777778, 2, 0.9404514118),
    (2.2222222222, 1.1905539763, 0.6338610348),
    (2.6666666667, 2, 0.4342199962),
    (3.1111111111, 1.250414619, 1.376094375),
    (3.5555555556, 1.4907034996, 0.8980380465),
    (4, 1.2910050977, 1.3862080833)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6099992322, 1.0118671087),
    (0.4444444444, 1.2648299697, 0.6153324361),
    (0.8888888889, 1.5740656651, 0.283190682),
    (1.3333333333, 1.3932983124, 0.6602533881),
    (1.7777777778, 2, 0.7887593284),
    (2.2222222222, 1.39962532, 0.4342199962),
    (2.6666666667, 2, 0.564870242),
    (3.1111111111, 1.6578926905, 0.9210233824),
    (3.5555555556, 1.3256141333, 1.3067209471),
    (4, 1.6760114005, 1.2386313716)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0.4422670155),
    (0.4444444444, 1.5969134823, 0.4500918727),
    (0.8888888889, 1.5740656651, 0.5425964137),
    (1.3333333333, 1.2267137173, 0.212410364),
    (1.7777777778, 2, 0.6852275105),
    (2.2222222222, 1.5348549924, 0.1901110634),
    (2.6666666667, 2, 1.0806405006),
    (3.1111111111, 1.762756952, 0.3417396402),
    (3.5555555556, 1.7977615772, 0.3114530955),
    (4, 2, 1.216293833)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 0.2507601471),
    (0.4444444444, 1.5969134823, 0.7167173699),
    (0.8888888889, 1.1910120937, 1.2534773751),
    (1.3333333333, 1.6300484453, 0.7090174101),
    (1.7777777778, 1.4101650889, 0.6338610348),
    (2.2222222222, 1.4671850788, 0.5858562556),
    (2.6666666667, 2, 1.0059328937),
    (3.1111111111, 1.4685530452, 1.1946662182),
    (3.5555555556, 1.6712719238, 0.8222008957),
    (4, 1.539689776, 1.2777739686)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.0237447997),
    (0.4444444444, 0.6281676625, 0.6729017692),
    (0.8888888889, 1.5740656651, 1.1583364078),
    (1.3333333333, 0.8017740079, 0.4085711774),
    (1.7777777778, 1.2468996646, 1.1204715245),
    (2.2222222222, 1.39962532, 0.7012067491),
    (2.6666666667, 1.4302164221, 1.0416045061),
    (3.1111111111, 0.4502303034, 0.7524513356),
    (3.5555555556, 1.3256141333, 1.1455717397),
    (4, 0.6054090895, 1.4531840842)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 0.8575956151),
    (0.4444444444, 1.2648299697, 0.6246986086),
    (0.8888888889, 1.3661389652, 1.4574035863),
    (1.3333333333, 0.5927625073, 0.3593645848),
    (1.7777777778, 0.9952101864, 1.1455717397),
    (2.2222222222, 1.5348549924, 0.7128808491),
    (2.6666666667, 1.561272692, 1.619805772),
    (3.1111111111, 1.0671676165, 1.4294878048),
    (3.5555555556, 1.2496772613, 1.5205547536),
    (4, 1.3523934443, 1.4656625104)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 0.4173916178),
    (0.4444444444, 1.2648299697, 1.0267171214),
    (0.8888888889, 1.3661389652, 0.9041571696),
    (1.3333333333, 0.8767686498, 0.8857253942),
    (1.7777777778, 1.1113812947, 1.0958428304),
    (2.2222222222, 0.6595055024, 0.4794452464),
    (2.6666666667, 1.0392154501, 1.1019619535),
    (3.1111111111, 0.8586690321, 0.3417396402),
    (3.5555555556, 1.3256141333, 0.5539083117),
    (4, 1.3523934443, 1.7417230994)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 0.7392101608),
    (0.4444444444, 1.2648299697, 0.9041571696),
    (0.8888888889, 1.2794723027, 0.7887593284),
    (1.3333333333, 0.7302708238, 0.6770447817),
    (1.7777777778, 1.2023040921, 1.0237447997),
    (2.2222222222, 1.0008104347, 0.6770447817),
    (2.6666666667, 2, 0.7465226249),
    (3.1111111111, 1.5722392017, 0.6458160614),
    (3.5555555556, 1.198811539, 0.6852275105),
    (4, 1.441419072, 1.4072374927)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 0.5539083117),
    (0.4444444444, 0.8585070772, 0.3114530955),
    (0.8888888889, 0.8254731304, 0.3593645848),
    (1.3333333333, 1.0666880429, 0.5755110625),
    (1.7777777778, 0.8066439035, 0.9643562786),
    (2.2222222222, 1.2717332769, 0.399449704),
    (2.6666666667, 1.7155533301, 0.5062071281),
    (3.1111111111, 1.3014159822, 0.7089485501),
    (3.5555555556, 0.85717115, 0.77496661),
    (4, 1.2910050977, 1.4411387867)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 0.7537503456),
    (0.4444444444, 1.0230023935, 0.3593645848),
    (0.8888888889, 1.1266978453, 0.4577093786),
    (1.3333333333, 1.0055192992, 0.5539083117),
    (1.7777777778, 1.6426398893, 1.0595485882),
    (2.2222222222, 1.6804337199, 0.6246986086),
    (2.6666666667, 1.3119475441, 0.9072081498),
    (3.1111111111, 0.9993186063, 0.9394431816),
    (3.5555555556, 0.9535965829, 1.0655551847),
    (4, 1.2382452644, 1.5061829653)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 1.1142746058),
    (0.4444444444, 2, 0.7012067491),
    (0.8888888889, 1.4405688668, 0.4342199962),
    (1.3333333333, 1.163690014, 0.6338610348),
    (1.7777777778, 2, 1.0178039682),
    (2.2222222222, 1.5348549924, 0.5959284432),
    (2.6666666667, 1.561272692, 0.9583954939),
    (3.1111111111, 2, 0.6622742915),
    (3.5555555556, 1.4907034996, 1.0178039682),
    (4, 1.6760114005, 1.4294878048)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.767523057, 1.6633881223),
    (0.4444444444, 1.2648299697, 0.6602533881),
    (0.8888888889, 1.1910120937, 1.2044394932),
    (1.3333333333, 0.2916795691, 0.6008685523),
    (1.7777777778, 1.0539449316, 1.1019619535),
    (2.2222222222, 0.8254751638, 0.283190682),
    (2.6666666667, 1.7155533301, 1.1647796282),
    (3.1111111111, 1.3690403656, 1.0687399327),
    (3.5555555556, 1.0154282222, 1.4460916883),
    (4, 1.2910050977, 1.8956630523)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 0.8670446096),
    (0.4444444444, 1.2648299697, 1.0836708428),
    (0.8888888889, 0.5539083117, 1.600550296),
    (1.3333333333, 1.0055192992, 1.2534773751),
    (1.7777777778, 0.6908746163, 1.6406354152),
    (2.2222222222, 0.764388484, 1.1329553904),
    (2.6666666667, 0.9822912358, 1.5205547536),
    (3.1111111111, 0.4113688836, 0.9455675593),
    (3.5555555556, 0.1086838911, 0.9762552003),
    (4, 0.892501825, 1.0499655372)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 0.9102536766),
    (0.4444444444, 1.0230023935, 1.8986996193),
    (0.8888888889, 1.0059328937, 1.6633881223),
    (1.3333333333, 0.8468470828, 1.3753013914),
    (1.7777777778, 1.0539449316, 1.7492398529),
    (2.2222222222, 1.0008104347, 1.3397466119),
    (2.6666666667, 1.2347159361, 1.8986996193),
    (3.1111111111, 0.7159791419, 0.7310372),
    (3.5555555556, 1.0154282222, 0.9344448153),
    (4, 1.2910050977, 1.1397431709)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6099992322, 0.9344448153),
    (0.4444444444, 1.2648299697, 1.1266978453),
    (0.8888888889, 1.2794723027, 0.7818957757),
    (1.3333333333, 1.3932983124, 1.5068867979),
    (1.7777777778, 0.8609761514, 1.5826083822),
    (2.2222222222, 1.1905539763, 1.2462496544),
    (2.6666666667, 1.561272692, 1.6406354152),
    (3.1111111111, 1.4685530452, 0.8900827229),
    (3.5555555556, 0.8960973232, 0.9940671063),
    (4, 1.1989678515, 1.0813700025)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6008685523, 0.6516268117),
    (0.4444444444, 1.2648299697, 0.8156198524),
    (0.8888888889, 0.8254731304, 0.8544282603),
    (1.3333333333, 1.2948060845, 1.2462496544),
    (1.7777777778, 0.9952101864, 1.2320315815),
    (2.2222222222, 0.764388484, 0.7887593284),
    (2.6666666667, 1.3119475441, 1.2320315815),
    (3.1111111111, 0.8110186275, 0.8330832862),
    (3.5555555556, 0.5821447971, 0.8544282603),
    (4, 0.8230545257, 1.1069649739)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0.6729017692),
    (0.4444444444, 1.5969134823, 1.0655551847),
    (0.8888888889, 1.5740656651, 0.6516268117),
    (1.3333333333, 1.6898148891, 1.3397466119),
    (1.7777777778, 1.7907640593, 0.6008685523),
    (2.2222222222, 1.4671850788, 0.77496661),
    (2.6666666667, 1.7155533301, 1.1519345001),
    (3.1111111111, 1.5722392017, 0.4191239185),
    (3.5555555556, 1.6712719238, 1.2181042243),
    (4, 1.441419072, 0.8900827229)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 0.8980380465),
    (0.4444444444, 1.2648299697, 1.0897463234),
    (0.8888888889, 1.8641287063, 0.9583954939),
    (1.3333333333, 1.1963712684, 1.2756874683),
    (1.7777777778, 1.2468996646, 1.6633881223),
    (2.2222222222, 1.0008104347, 1.2607898392),
    (2.6666666667, 1.1648921773, 1.4244889375),
    (3.1111111111, 0.6076812705, 0.4868641759),
    (3.5555555556, 0.827707186, 1.3846675639),
    (4, 0.872100205, 1.1805918749)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6645071899, 0.5755110625),
    (0.4444444444, 1.5969134823, 0.8918946786),
    (0.8888888889, 0.9344448153, 0.8795284755),
    (1.3333333333, 1.0974961283, 1.1519345001),
    (1.7777777778, 0.9952101864, 1.2181042243),
    (2.2222222222, 1.1117638801, 0.6852275105),
    (2.6666666667, 1.0936192592, 1.2044394932),
    (3.1111111111, 1.4685530452, 0.8003050892),
    (3.5555555556, 1.1432206168, 0.8023023892),
    (4, 1.539689776, 1.0006050785)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 0.6602533881),
    (0.4444444444, 1.5969134823, 0.6428330556),
    (0.8888888889, 1.5740656651, 1.6406354152),
    (1.3333333333, 0.6973397881, 1.1647796282),
    (1.7777777778, 0.9153916302, 1.8986996193),
    (2.2222222222, 1.1905539763, 1.2534773751),
    (2.6666666667, 1.3119475441, 1.716809318),
    (3.1111111111, 1.1837577238, 0.5929098309),
    (3.5555555556, 0.4828978505, 1.6885469045),
    (4, 1.0848655217, 1.3565755071)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 1.1976976108),
    (0.4444444444, 1.5969134823, 0.7887593284),
    (0.8888888889, 1.767523057, 1.4812135846),
    (1.3333333333, 1.7843465515, 2),
    (1.7777777778, 1.2468996646, 1.3753013914),
    (2.2222222222, 1.2717332769, 1.3753013914),
    (2.6666666667, 1.561272692, 1.5657800038),
    (3.1111111111, 1.1121004663, 0.7868953429),
    (3.5555555556, 1.1432206168, 1.4244889375),
    (4, 0.4937273831, 1.3112315114)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.2112406716),
    (0.4444444444, 0.7729643972, 0.8544282603),
    (0.8888888889, 0.7280725506, 1.0958428304),
    (1.3333333333, 0.783706167, 1.2681915911),
    (1.7777777778, 1.4101650889, 1.787589636),
    (2.2222222222, 0.7402841334, 1.2681915911),
    (2.6666666667, 1.3119475441, 1.3753013914),
    (3.1111111111, 0.8985048692, 1.0190248777),
    (3.5555555556, 0.9831179082, 1.3147724895),
    (4, 0.9390727132, 1.2090110601)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3114530955, 1.0836708428),
    (0.4444444444, 0.8585070772, 1.3753013914),
    (0.8888888889, 0.7280725506, 1.4040715568),
    (1.3333333333, 0.5927625073, 1.2909825899),
    (1.7777777778, 1.1113812947, 1.5205547536),
    (2.2222222222, 1.5348549924, 0.8089879063),
    (2.6666666667, 1.7155533301, 1.1976976108),
    (3.1111111111, 1.3251144672, 0.9608575988),
    (3.5555555556, 1.1015517522, 1.3397466119),
    (4, 1.1275631831, 1.1946662182)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 0.8575956151),
    (0.4444444444, 0.6569977756, 1.3846675639),
    (0.8888888889, 0.6383700608, 1.4141437444),
    (1.3333333333, 1.5131358241, 1.2987932509),
    (1.7777777778, 1.5257206213, 1.2909825899),
    (2.2222222222, 1.1905539763, 0.8480654999),
    (2.6666666667, 1.561272692, 1.2607898392),
    (3.1111111111, 0.9993186063, 0.7732862827),
    (3.5555555556, 0.827707186, 0.8089879063),
    (4, 1.1275631831, 0.8963017747)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6008685523, 1.3846675639),
    (0.4444444444, 0.9256178097, 1.787589636),
    (0.8888888889, 1.2794723027, 1.3942521925),
    (1.3333333333, 1.4461598232, 1.3571669444),
    (1.7777777778, 1.4101650889, 1.1712664124),
    (2.2222222222, 0.8254751638, 1.0416045061),
    (2.6666666667, 1.4302164221, 1.1910120937),
    (3.1111111111, 0.9993186063, 1.2018030917),
    (3.5555555556, 1.0633388599, 1.1266978453),
    (4, 1.3523934443, 1.3471384292)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 0.7887593284),
    (0.4444444444, 1.2648299697, 0.8670446096),
    (0.8888888889, 0.8826304984, 0.6338610348),
    (1.3333333333, 1.0055192992, 1.1455717397),
    (1.7777777778, 1.1113812947, 1.22503339),
    (2.2222222222, 1.4671850788, 1.0237447997),
    (2.6666666667, 1.0936192592, 1.2987932509),
    (3.1111111111, 0.9993186063, 0.7594563851),
    (3.5555555556, 1.0633388599, 1.5348671048),
    (4, 1.1644878268, 1.3026602119)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 1.600550296),
    (0.4444444444, 0.8585070772, 1.1392460405),
    (0.8888888889, 0.6383700608, 0.77496661),
    (1.3333333333, 0.6434244929, 1.4040715568),
    (1.7777777778, 1.3070612262, 1.3397466119),
    (2.2222222222, 1.1117638801, 1.0118671087),
    (2.6666666667, 1.2347159361, 1.2681915911),
    (3.1111111111, 0.9176889588, 0.8200887508),
    (3.5555555556, 0.6285577317, 1.2391024005),
    (4, 0.9554430393, 1.006736303)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.767523057, 1.0296909368),
    (0.4444444444, 2, 1.0535555509),
    (0.8888888889, 1.4405688668, 1.3846675639),
    (1.3333333333, 1.739162567, 1.4141437444),
    (1.7777777778, 1.6426398893, 1.4574035863),
    (2.2222222222, 1.6804337199, 0.7318084089),
    (2.6666666667, 1.7155533301, 1.2391024005),
    (3.1111111111, 2, 0.5639538851),
    (3.5555555556, 2, 1.0475746559),
    (4, 1.441419072, 1.0750424818)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.1455717397),
    (0.4444444444, 1.0230023935, 0.8857253942),
    (0.8888888889, 0.7280725506, 0.9163291572),
    (1.3333333333, 0.8994801466, 1.600550296),
    (1.7777777778, 0.7373333084, 1.619805772),
    (2.2222222222, 0.8254751638, 1.0958428304),
    (2.6666666667, 1.2347159361, 1.4574035863),
    (3.1111111111, 1.4221503635, 0.8395284066),
    (3.5555555556, 1.3934587741, 1.1142746058),
    (4, 1.441419072, 0.7014168885)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 0.1649291558),
    (0.4444444444, 1.0230023935, 0.8795284755),
    (0.8888888889, 1.0059328937, 0.7090174101),
    (1.3333333333, 0.8767686498, 1.1843801476),
    (1.7777777778, 0.8609761514, 1.2534773751),
    (2.2222222222, 0.764388484, 1.3661389652),
    (2.6666666667, 1.4302164221, 1.600550296),
    (3.1111111111, 1.0671676165, 0.2317278291),
    (3.5555555556, 0.7351718883, 1.5826083822),
    (4, 1.0848655217, 1.1875969245)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6008685523, 0.7167173699),
    (0.4444444444, 1.2648299697, 0.6516268117),
    (0.8888888889, 1.2794723027, 0.7012067491),
    (1.3333333333, 1.3932983124, 1.6406354152),
    (1.7777777778, 2, 1.1583364078),
    (2.2222222222, 1.6804337199, 0.6602533881),
    (2.6666666667, 1.1648921773, 1.0897463234),
    (3.1111111111, 1.6578926905, 0.8838451809),
    (3.5555555556, 1.2496772613, 1.1392460405),
    (4, 1.3523934443, 1.0687399327)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 0.9404514118),
    (0.4444444444, 1.2648299697, 1.0715767791),
    (0.8888888889, 1.1910120937, 0.8857253942),
    (1.3333333333, 1.5808760815, 1.5348671048),
    (1.7777777778, 1.6426398893, 1.2987932509),
    (2.2222222222, 1.39962532, 1.22503339),
    (2.6666666667, 1.4302164221, 1.4040715568),
    (3.1111111111, 0.945681362, 0.4614293872),
    (3.5555555556, 1.5514933958, 0.9404514118),
    (4, 1.1275631831, 1.0624606776)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 0.6246986086),
    (0.4444444444, 1.5969134823, 1),
    (0.8888888889, 1.5740656651, 1.4244889375),
    (1.3333333333, 1.4461598232, 1.2112406716),
    (1.7777777778, 1.4101650889, 1.1777991043),
    (2.2222222222, 1.628237785, 1.2320315815),
    (2.6666666667, 0.6555127601, 1.2756874683),
    (3.1111111111, 1.3690403656, 0.8135352611),
    (3.5555555556, 1.0633388599, 0.9583954939),
    (4, 1.441419072, 1.0562030792)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 0.8795284755),
    (0.4444444444, 1.0230023935, 1.2909825899),
    (0.8888888889, 1.0059328937, 1.4937928719),
    (1.3333333333, 1.1963712684, 1.8986996193),
    (1.7777777778, 1.5257206213, 1.2756874683),
    (2.2222222222, 1.1117638801, 1.2987932509),
    (2.6666666667, 1.3119475441, 1.4460916883),
    (3.1111111111, 1.0671676165, 0.5538401768),
    (3.5555555556, 1.4328332648, 1.1204715245),
    (4, 1.2382452644, 1.3288401077)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 0.8857253942),
    (0.4444444444, 1.5969134823, 1.1712664124),
    (0.8888888889, 1.5740656651, 0.6602533881),
    (1.3333333333, 1.0666880429, 1.3942521925),
    (1.7777777778, 1.5257206213, 1.4141437444),
    (2.2222222222, 1.1905539763, 1.3229552183),
    (2.6666666667, 1.7155533301, 1.4937928719),
    (3.1111111111, 1.250414619, 0.8266040683),
    (3.5555555556, 1.1432206168, 0.8480654999),
    (4, 1.612702619, 1.1199595093)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.1910120937),
    (0.4444444444, 1.2648299697, 1.2534773751),
    (0.8888888889, 0.9344448153, 1.4690983238),
    (1.3333333333, 1.6898148891, 1.716809318),
    (1.7777777778, 1.3070612262, 1.2044394932),
    (2.2222222222, 1.2717332769, 1.2181042243),
    (2.6666666667, 1.0392154501, 1.8350708442),
    (3.1111111111, 1.250414619, 0.7382451684),
    (3.5555555556, 0.827707186, 1.4040715568),
    (4, 0.4937273831, 1.3378974644)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 0.1013003807),
    (0.4444444444, 1.2648299697, 0.9821960318),
    (0.8888888889, 1.1910120937, 0.6428330556),
    (1.3333333333, 1.2948060845, 1.2607898392),
    (1.7777777778, 1.4101650889, 1.2607898392),
    (2.2222222222, 1.628237785, 0.7128808491),
    (2.6666666667, 1.4302164221, 1.2112406716),
    (3.1111111111, 2, 0.9516864724),
    (3.5555555556, 1.7977615772, 1.0836708428),
    (4, 1.539689776, 0.9210233824)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 0.4422670155),
    (0.4444444444, 1.2648299697, 0.9223851651),
    (0.8888888889, 1.8641287063, 1.1910120937),
    (1.3333333333, 1.3932983124, 1.1081053214),
    (1.7777777778, 2, 1.2391024005),
    (2.2222222222, 1.628237785, 1.0535555509),
    (2.6666666667, 2, 1.2181042243),
    (3.1111111111, 1.762756952, 0.1099213108),
    (3.5555555556, 1.5514933958, 0.4931132021),
    (4, 1.441419072, 0.4743857496)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5425964137, 0.5187864154),
    (0.4444444444, 2, 0.5425964137),
    (0.8888888889, 0.7280725506, 0.6246986086),
    (1.3333333333, 0.6973397881, 1.1712664124),
    (1.7777777778, 2, 1.4244889375),
    (2.2222222222, 1.1905539763, 1.2044394932),
    (2.6666666667, 1.1648921773, 1.6633881223),
    (3.1111111111, 0.4113688836, 0.4338652948),
    (3.5555555556, 1.3934587741, 1),
    (4, 0.9943815053, 0.6200933179)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 0.283190682),
    (0.4444444444, 0.7215743629, 1.0059328937),
    (0.8888888889, 1.0776148349, 0.4577093786),
    (1.3333333333, 0.5927625073, 1.3067209471),
    (1.7777777778, 1.3070612262, 1.600550296),
    (2.2222222222, 1.0008104347, 1.2909825899),
    (2.6666666667, 0.6839194196, 1.3942521925),
    (3.1111111111, 1.762756952, 0.8713083274),
    (3.5555555556, 0.5143907122, 1.2832826301),
    (4, 0.8230545257, 1.0877242166)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4863550884, 0.399449704),
    (0.4444444444, 0.8585070772, 0.9911002466),
    (0.8888888889, 0.5125577543, 0.9703090632),
    (1.3333333333, 1.2546179581, 1.3661389652),
    (1.7777777778, 1.3070612262, 1.3147724895),
    (2.2222222222, 1.0008104347, 1.0356437214),
    (2.6666666667, 1.1648921773, 1.2832826301),
    (3.1111111111, 0.9993186063, 0.521850979),
    (3.5555555556, 1.2496772613, 0.9703090632),
    (4, 1.441419072, 1.0437464854)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 1.2462496544),
    (0.4444444444, 1.5969134823, 1.0958428304),
    (0.8888888889, 1.2794723027, 1.7492398529),
    (1.3333333333, 1.1318399315, 1.4812135846),
    (1.7777777778, 1.2023040921, 1.4460916883),
    (2.2222222222, 1.3311519133, 1.1019619535),
    (2.6666666667, 1.3119475441, 1.5348671048),
    (3.1111111111, 1.4685530452, 0.9608575988),
    (3.5555555556, 1.198811539, 1.1712664124),
    (4, 1.0395349001, 1.1531529172)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 0.9524253441),
    (0.4444444444, 0.7729643972, 0),
    (0.8888888889, 1.0059328937, 1.6885469045),
    (1.3333333333, 0.9375393224, 1.7492398529),
    (1.7777777778, 1.4101650889, 2),
    (2.2222222222, 1.0008104347, 2),
    (2.6666666667, 1.3119475441, 2),
    (3.1111111111, 0.3673230706, 1.3288401077),
    (3.5555555556, 1.198811539, 1.7492398529),
    (4, 1.1989678515, 1.376094375)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 0.4931132021),
    (0.4444444444, 0.3771200578, 0.8670446096),
    (0.8888888889, 0.6811530255, 1),
    (1.3333333333, 0.9375393224, 1.1392460405),
    (1.7777777778, 0.4519881112, 1.3571669444),
    (2.2222222222, 0.8855666945, 1.0595485882),
    (2.6666666667, 1.2347159361, 1.2909825899),
    (3.1111111111, 0.8586690321, 0.5434660666),
    (3.5555555556, 0.6285577317, 1.0118671087),
    (4, 1.0848655217, 0.8523240435)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 0.8733021547),
    (0.4444444444, 0.6839678314, 0.7537503456),
    (0.8888888889, 1.0059328937, 1.1081053214),
    (1.3333333333, 1.5131358241, 1.5657800038),
    (1.7777777778, 0.9153916302, 1.2462496544),
    (2.2222222222, 1.1117638801, 1.0475746559),
    (2.6666666667, 1.7155533301, 1.1843801476),
    (3.1111111111, 0.945681362, 0.9333119571),
    (3.5555555556, 0.5565993525, 1.1777991043),
    (4, 1.1989678515, 1.0190248777)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1649291558, 0.8089879063),
    (0.4444444444, 0.5805317772, 0.9464444491),
    (0.8888888889, 0.4794452464, 1.8986996193),
    (1.3333333333, 0.8017740079, 1.787589636),
    (1.7777777778, 1.4101650889, 1.4937928719),
    (2.2222222222, 0.5394039792, 0.6516268117),
    (2.6666666667, 1.3119475441, 1.1712664124),
    (3.1111111111, 0.4961056762, 0.6021507957),
    (3.5555555556, 1.3646347971, 1.2320315815),
    (4, 1.0395349001, 0.7089485501)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4863550884, 0.8156198524),
    (0.4444444444, 0.6050909329, 0.7243125317),
    (0.8888888889, 0.5755110625, 1.716809318),
    (1.3333333333, 0.7613686284, 1.5205547536),
    (1.7777777778, 0.7753534052, 1.6885469045),
    (2.2222222222, 0.7017024986, 1.3846675639),
    (2.6666666667, 0.9568636233, 1.3147724895),
    (3.1111111111, 0.5738084394, 0.8775875825),
    (3.5555555556, 0.9268711326, 1.1910120937),
    (4, 1.2382452644, 0.9944807008)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.2832826301),
    (0.4444444444, 1.2648299697, 1.5499081273),
    (0.8888888889, 0.77496661, 1.0535555509),
    (1.3333333333, 1.0974961283, 1.4244889375),
    (1.7777777778, 1.6426398893, 1.3229552183),
    (2.2222222222, 1.5348549924, 1.1142746058),
    (2.6666666667, 1.561272692, 1.3661389652),
    (3.1111111111, 0.7159791419, 0.5738258213),
    (3.5555555556, 0.6285577317, 0.8352203718),
    (4, 1.0395349001, 0.9822469657)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.3397466119),
    (0.4444444444, 1.2648299697, 1.0118671087),
    (0.8888888889, 1.1266978453, 0.8607539595),
    (1.3333333333, 0.4299032946, 1.8350708442),
    (1.7777777778, 1.4101650889, 1.3661389652),
    (2.2222222222, 1.628237785, 1.1647796282),
    (2.6666666667, 2, 1.5826083822),
    (3.1111111111, 1.6578926905, 1.0251850552),
    (3.5555555556, 1.4907034996, 1.6633881223),
    (4, 1.2382452644, 1.2018030917)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 1.0715767791),
    (0.4444444444, 1.2648299697, 0.8352203718),
    (0.8888888889, 1.0059328937, 0.4173916178),
    (1.3333333333, 1.1318399315, 1.4460916883),
    (1.7777777778, 0.9952101864, 1.1647796282),
    (2.2222222222, 1.1117638801, 0.8544282603),
    (2.6666666667, 1.561272692, 1.3067209471),
    (3.1111111111, 1.0671676165, 0.7014168885),
    (3.5555555556, 0.6601823512, 1.2044394932),
    (4, 1.2382452644, 0.97002413)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4863550884, 1.0059328937),
    (0.4444444444, 0.6569977756, 0.9344448153),
    (0.8888888889, 0.6811530255, 1.2462496544),
    (1.3333333333, 0.9375393224, 1.2391024005),
    (1.7777777778, 0.8066439035, 1.2681915911),
    (2.2222222222, 0.5778051143, 1.1519345001),
    (2.6666666667, 1.4302164221, 1.3483731883),
    (3.1111111111, 1.0671676165, 0.8523240435),
    (3.5555555556, 0.9831179082, 1.1081053214),
    (4, 1.0848655217, 1.0128757674)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 0.5909251609),
    (0.4444444444, 1.0230023935, 0.8287335876),
    (0.8888888889, 1.5740656651, 1.787589636),
    (1.3333333333, 1.0974961283, 1.5499081273),
    (1.7777777778, 1.0539449316, 1.8350708442),
    (2.2222222222, 0.8855666945, 1.3312770632),
    (2.6666666667, 1.561272692, 1.5499081273),
    (3.1111111111, 1.3690403656, 0.583472753),
    (3.5555555556, 0.7930891878, 1.1019619535),
    (4, 0.872100205, 1.1667619774)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4863550884, 0.7679684185),
    (0.4444444444, 1.2648299697, 0.6852275105),
    (0.8888888889, 1.0059328937, 0.5062071281),
    (1.3333333333, 1.2267137173, 1.1910120937),
    (1.7777777778, 1.158394846, 1.4812135846),
    (2.2222222222, 0.8254751638, 1.2391024005),
    (2.6666666667, 1.4302164221, 1.1583364078),
    (3.1111111111, 1.5212944497, 0.8069414507),
    (3.5555555556, 1.1432206168, 0.9464444491),
    (4, 1.0848655217, 0.9455675593)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6645071899, 0.7318084089),
    (0.4444444444, 0.6050909329, 0.8980380465),
    (0.8888888889, 0.5125577543, 0.9494363266),
    (1.3333333333, 1.0055192992, 1.5826083822),
    (1.7777777778, 0.8609761514, 1.716809318),
    (2.2222222222, 1.2717332769, 1.3571669444),
    (2.6666666667, 0.9822912358, 1.787589636),
    (3.1111111111, 1.1121004663, 0.9148632049),
    (3.5555555556, 0, 1.22503339),
    (4, 0.4725976579, 1.1464244022)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5425964137, 0.7465226249),
    (0.4444444444, 0.7215743629, 0.8023023892),
    (0.8888888889, 0.8254731304, 0.6892692082),
    (1.3333333333, 1.0452556908, 1.4574035863),
    (1.7777777778, 0.9153916302, 1.1519345001),
    (2.2222222222, 0.6207803934, 0.7679684185),
    (2.6666666667, 1.4302164221, 1.2534773751),
    (3.1111111111, 0.5170467787, 0.7801170272),
    (3.5555555556, 0.7351718883, 0.9524253441),
    (4, 0.9554430393, 0.9516864724)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 1.2909825899),
    (0.4444444444, 1.0230023935, 0.9524253441),
    (0.8888888889, 1.0776148349, 0.9314359837),
    (1.3333333333, 0.8228875552, 1.6633881223),
    (1.7777777778, 1.3070612262, 1.435129758),
    (2.2222222222, 1.39962532, 1.0296909368),
    (2.6666666667, 1.4302164221, 1.6885469045),
    (3.1111111111, 0.771346443, 1.031357739),
    (3.5555555556, 0.9535965829, 1.3312770632),
    (4, 1.539689776, 1.2942321987)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 1.1712664124),
    (0.4444444444, 1.0230023935, 0.9404514118),
    (0.8888888889, 1.0776148349, 0.8980380465),
    (1.3333333333, 1.2546179581, 1.3846675639),
    (1.7777777778, 1.4101650889, 1.1843801476),
    (2.2222222222, 1.1905539763, 1.0655551847),
    (2.6666666667, 1.4302164221, 1.2462496544),
    (3.1111111111, 1.3690403656, 0.6373880481),
    (3.5555555556, 1.0410322635, 1.1843801476),
    (4, 1.441419072, 1.0375443884)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3699954929, 1.787589636),
    (0.4444444444, 1.0230023935, 0.9911002466),
    (0.8888888889, 0.9344448153, 0.1649291558),
    (1.3333333333, 1.0055192992, 1.2832826301),
    (1.7777777778, 1.1113812947, 1.3067209471),
    (2.2222222222, 0.8254751638, 1.2756874683),
    (2.6666666667, 1.561272692, 1.435129758),
    (3.1111111111, 0.8586690321, 0.8586782576),
    (3.5555555556, 0.6800614493, 1.1583364078),
    (4, 1.2382452644, 0.9883617877)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 0.6729017692),
    (0.4444444444, 0.8585070772, 0.7392101608),
    (0.8888888889, 1.1910120937, 0.8156198524),
    (1.3333333333, 0.7613686284, 1.2181042243),
    (1.7777777778, 1.4101650889, 1.5499081273),
    (2.2222222222, 1.0008104347, 1.1455717397),
    (2.6666666667, 1.1648921773, 1.3571669444),
    (3.1111111111, 1.1837577238, 0.7936238579),
    (3.5555555556, 1.4328332648, 1.3942521925),
    (4, 1.0395349001, 1.1005198534)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 0.9041571696),
    (0.4444444444, 1.2648299697, 0.4651328952),
    (0.8888888889, 0.9344448153, 0.5858562556),
    (1.3333333333, 1.4461598232, 1.3483731883),
    (1.7777777778, 1.2023040921, 1.4690983238),
    (2.2222222222, 1.1117638801, 1.3067209471),
    (2.6666666667, 2, 1.3397466119),
    (3.1111111111, 1.762756952, 0.7200837722),
    (3.5555555556, 1.198811539, 1.1647796282),
    (4, 1.612702619, 1.0941068932)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 0.9703090632),
    (0.4444444444, 1.5969134823, 1.2181042243),
    (0.8888888889, 1.0059328937, 1.3397466119),
    (1.3333333333, 1.5131358241, 1.2044394932),
    (1.7777777778, 1.2023040921, 1.2112406716),
    (2.2222222222, 1.39962532, 1.1266978453),
    (2.6666666667, 1.2347159361, 1.7492398529),
    (3.1111111111, 1.1837577238, 1.3378974644),
    (3.5555555556, 1.1015517522, 1.600550296),
    (4, 0.892501825, 0.9578012944)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.2675841216, 0.8319825694),
    (0.4444444444, 0.4947145759, 1.1081053214),
    (0.8888888889, 1.0059328937, 0.6687229368),
    (1.3333333333, 1.0055192992, 1.1777991043),
    (1.7777777778, 0.9952101864, 1.1910120937),
    (2.2222222222, 1.1905539763, 0.8352203718),
    (2.6666666667, 0.5361383491, 1.1777991043),
    (3.1111111111, 1.3690403656, 0.7664003613),
    (3.5555555556, 0.4285645113, 1.2681915911),
    (4, 0.2092409413, 1.126512999)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.0475746559),
    (0.4444444444, 0.8585070772, 1.0178039682),
    (0.8888888889, 1.0059328937, 0.6770447817),
    (1.3333333333, 1.163690014, 1.3229552183),
    (1.7777777778, 0.4913316344, 1.5348671048),
    (2.2222222222, 1.3311519133, 1.1392460405),
    (2.6666666667, 1.0392154501, 1.4141437444),
    (3.1111111111, 0.771346443, 0.8650057783),
    (3.5555555556, 0.5361517975, 1.0535555509),
    (4, 0.872100205, 1.1134441918)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3188469745, 0.9821960318),
    (0.4444444444, 0.9256178097, 1.0356437214),
    (0.8888888889, 1.3661389652, 0.6057478075),
    (1.3333333333, 1.163690014, 1.4690983238),
    (1.7777777778, 0.9523650499, 1.5068867979),
    (2.2222222222, 0.1258390422, 1.1081053214),
    (2.6666666667, 2, 1.4690983238),
    (3.1111111111, 1.4685530452, 0.8963017747),
    (3.5555555556, 0.7648408039, 1.3229552183),
    (4, 1.3523934443, 1.1736478987)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1745268696, 0.564870242),
    (0.4444444444, 1.0230023935, 1.2112406716),
    (0.8888888889, 1.2794723027, 1.8350708442),
    (1.3333333333, 1.3458910443, 1.6885469045),
    (1.7777777778, 1.0539449316, 1.2832826301),
    (2.2222222222, 1.3311519133, 1.3483731883),
    (2.6666666667, 1.561272692, 1.4812135846),
    (3.1111111111, 1.0671676165, 0.8459413668),
    (3.5555555556, 0.85717115, 1.2909825899),
    (4, 1.612702619, 0.8330832862)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 0.6057478075),
    (0.4444444444, 2, 0.7818957757),
    (0.8888888889, 1.1910120937, 0.212410364),
    (1.3333333333, 1.0974961283, 1.1583364078),
    (1.7777777778, 1.4101650889, 1.1392460405),
    (2.2222222222, 1.1905539763, 1.0178039682),
    (2.6666666667, 2, 1.22503339),
    (3.1111111111, 1.1837577238, 0.6112081523),
    (3.5555555556, 0.8960973232, 0.9041571696),
    (4, 1.441419072, 0.9639133927)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6645071899, 0.7955605068),
    (0.4444444444, 1.2648299697, 0.6338610348),
    (0.8888888889, 1.2794723027, 0.564870242),
    (1.3333333333, 1.163690014, 1.3312770632),
    (1.7777777778, 1.6426398893, 1.1976976108),
    (2.2222222222, 1.2717332769, 0.8023023892),
    (2.6666666667, 1.3119475441, 1.3846675639),
    (3.1111111111, 1.1837577238, 0.5328107674),
    (3.5555555556, 0.8960973232, 0.9881328913),
    (4, 1.0848655217, 0.9761348674)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 1.8350708442),
    (0.4444444444, 0.8585070772, 1.716809318),
    (0.8888888889, 0.4500918727, 2),
    (1.3333333333, 0.4299032946, 1.3147724895),
    (1.7777777778, 1.1113812947, 1.5657800038),
    (2.2222222222, 2, 1.2832826301),
    (2.6666666667, 0, 1.5068867979),
    (3.1111111111, 0.9993186063, 0.9822469657),
    (3.5555555556, 1.3646347971, 1.3661389652),
    (4, 1.2910050977, 1.1599312329)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8254731304, 0.8918946786),
    (0.4444444444, 1.0230023935, 1.0776148349),
    (0.8888888889, 1.0059328937, 1.619805772),
    (1.3333333333, 0.9375393224, 1.435129758),
    (1.7777777778, 1.0539449316, 1.3312770632),
    (2.2222222222, 1.1905539763, 1.2112406716),
    (2.6666666667, 1.2347159361, 1.3229552183),
    (3.1111111111, 1.3014159822, 0.9883617877),
    (3.5555555556, 0.7037715155, 1.0897463234),
    (4, 1.2382452644, 0.9271724927)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6008685523, 0.5909251609),
    (0.4444444444, 0.6569977756, 0.8222008957),
    (0.8888888889, 0.9344448153, 1.1204715245),
    (1.3333333333, 0.8767686498, 1.4937928719),
    (1.7777777778, 0.9523650499, 1.3483731883),
    (2.2222222222, 0.8855666945, 1.3147724895),
    (2.6666666667, 1.0029726035, 1.3312770632),
    (3.1111111111, 0.8586690321, 0.4036320282),
    (3.5555555556, 0.6285577317, 0.8795284755),
    (4, 0.8049276631, 1.3662224388)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}

triple[] points = {
    (0, 0.9529497133, 1.2854397427),
    (0.4444444444, 1.1398021234, 1.2733268812),
    (0.8888888889, 0.8524577306, 1.1557396377),
    (1.3333333333, 0.8958220755, 0.9393020419),
    (1.7777777778, 0.8818559402, 0.6900620298),
    (2.2222222222, 1.1698292281, 1.1934008289),
    (2.6666666667, 0.8455618392, 0.7584776399),
    (3.1111111111, 1.2354151962, 1.3180074396),
    (3.5555555556, 0.9389122324, 0.8518135315),
    (4, 0.6822186011, 0.6302129543)
};
//dot(points[0], blue);

pen myPen = red + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9487572032, 0.9273165145),
    (0.4444444444, 1.0646654798, 0.9746252019),
    (0.8888888889, 0.9918208779, 1.0767103836),
    (1.3333333333, 1.0096651459, 1.276937098),
    (1.7777777778, 1.1294921715, 1.3901234817),
    (2.2222222222, 1.1127572649, 1.1136905632),
    (2.6666666667, 1.3240536378, 1.3830972964),
    (3.1111111111, 1.0477191909, 0.8135681186),
    (3.5555555556, 0.9404648027, 1.229548816),
    (4, 1.0696224045, 1.1739201495)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.115038352, 0.7438311147),
    (0.4444444444, 1.4512104326, 0.7014503295),
    (0.8888888889, 1.1844798937, 0.7201163902),
    (1.3333333333, 1.2154686596, 0.7396525782),
    (1.7777777778, 1.4286317798, 0.9035534617),
    (2.2222222222, 1.467374633, 0.6302962733),
    (2.6666666667, 1.5778193247, 0.8295588384),
    (3.1111111111, 1.4621480283, 0.7397352517),
    (3.5555555556, 1.3914523595, 0.9020405501),
    (4, 1.3772692628, 1.1340579425)
};
//dot(points[0], blue);

pen myPen = green + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}
