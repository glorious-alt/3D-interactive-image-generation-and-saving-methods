import three;
usepackage("esvect");
size(10cm);
currentprojection = perspective(0, -1, 0);
draw(box(O, (4*X + 2*Y + 2*Z)), black);

// 手动绘制 x 轴刻度
for (int i = 1; i <= 10; ++i) {
    draw((i*(4/9)-(4/9), 0, 0)--(i*(4/9)-(4/9), 0, 0.1), black);  // 绘制刻度线
    label("$" + string(i) + "$", ((i-1)*(4/9), 0,-0.1));  // 添加刻度标签
}

// 添加 x 轴标签
label("$Time$", (2,-0.2,-0.3));
label("$Submission$", (-0.8,0.8,-0.2));
label("$Score$", (-1,0.2,1));

// 定义轨迹点与 x 轴的 10 个点对应

triple[] points = {
    (0, 1.1680174306, 1.1745268696),
    (0.4444444444, 1.2859393044, 1.5969134823),
    (0.8888888889, 1.2236553321, 1.0776148349),
    (1.3333333333, 1.1876895938, 1.5131358241),
    (1.7777777778, 0.5187864154, 0.4519881112),
    (2.2222222222, 1.2657499273, 1.0574559594),
    (2.6666666667, 0.8416635922, 0.5832483486),
    (3.1111111111, 1.0406434124, 0.5738084394),
    (3.5555555556, 0, 0.2278923803),
    (4, 0.5273705, 0.7635897384)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 1.1745268696),
    (0.4444444444, 0.755961689, 0.8585070772),
    (0.8888888889, 1.0593292721, 1.767523057),
    (1.3333333333, 0.7428772632, 1.7843465515),
    (1.7777777778, 0.5187864154, 1.4101650889),
    (2.2222222222, 1.0655974966, 2),
    (2.6666666667, 0.4500918727, 0.9822912358),
    (3.1111111111, 1.1232313502, 2),
    (3.5555555556, 0.9163291572, 1.7977615772),
    (4, 0.8650057783, 1.1989678515)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4931132021, 1.1745268696),
    (0.4444444444, 0.6021507957, 1.2648299697),
    (0.8888888889, 0.7629358153, 1.2794723027),
    (1.3333333333, 0.6852275105, 1.1318399315),
    (1.7777777778, 0.8826304984, 0.6267621907),
    (2.2222222222, 0.6937932627, 1.810440101),
    (2.6666666667, 0.2507601471, 0.7040709888),
    (3.1111111111, 0.9486276129, 1.6578926905),
    (3.5555555556, 0.8639035426, 1.0633388599),
    (4, 0.6067016876, 0.8583120931)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 0.6645071899),
    (0.4444444444, 1.7243948116, 1.0230023935),
    (0.8888888889, 1.3565755071, 0.564870242),
    (1.3333333333, 0.4794452464, 1.2948060845),
    (1.7777777778, 0.8826304984, 1.158394846),
    (2.2222222222, 1.4990659947, 1.0574559594),
    (2.6666666667, 0.9464444491, 1.561272692),
    (3.1111111111, 1.1232313502, 2),
    (3.5555555556, 1.2146644526, 1.1015517522),
    (4, 0.5273705, 0.4086004398)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 1.0296909368),
    (0.4444444444, 0.467970379, 1.2648299697),
    (0.8888888889, 1.6532978884, 1.0776148349),
    (1.3333333333, 1.5276254792, 1.3583805599),
    (1.7777777778, 1.2571227368, 1.158394846),
    (2.2222222222, 1.3199549421, 2),
    (2.6666666667, 1.1943479843, 0.7991717425),
    (3.1111111111, 1.3026602119, 2),
    (3.5555555556, 0.9583954939, 1.6026713895),
    (4, 0.6541089557, 0.5843234388)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 1.1745268696),
    (0.4444444444, 1.1364195285, 1.5969134823),
    (0.8888888889, 1.1464244022, 0.6383700608),
    (1.3333333333, 1.1392460405, 1.0055192992),
    (1.7777777778, 0.9643562786, 0.9952101864),
    (2.2222222222, 1.3518316261, 2),
    (2.6666666667, 1.5136449116, 0.8754350952),
    (3.1111111111, 1.23109971, 1.5212944497),
    (3.5555555556, 1.5348671048, 0.85717115),
    (4, 1.3471384292, 1.0169670095)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4517019394, 0.9223851651),
    (0.4444444444, 0.8963017747, 0.7215743629),
    (0.8888888889, 1.2657499273, 1.0059328937),
    (1.3333333333, 0.8733021547, 0.7302708238),
    (1.7777777778, 1.1583364078, 1.3070612262),
    (2.2222222222, 1.5364162319, 1.7504043617),
    (2.6666666667, 1.3527484993, 0.9654191746),
    (3.1111111111, 1.8301269492, 1.140183069),
    (3.5555555556, 1.6300045071, 0.7930891878),
    (4, 1.2236553321, 0.9943815053)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1876895938, 1.1745268696),
    (0.4444444444, 0.8003050892, 1.5969134823),
    (0.8888888889, 1.2053979619, 1.3661389652),
    (1.3333333333, 0.9132939473, 0.9375393224),
    (1.7777777778, 0.6892692082, 0.4519881112),
    (2.2222222222, 0.5328107674, 0.4844732346),
    (2.6666666667, 1.2391024005, 0.8754350952),
    (3.1111111111, 1.5061829653, 0.4739025803),
    (3.5555555556, 0.7243125317, 1.0154282222),
    (4, 0.8200887508, 0.7635897384)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4751008197, 1.1745268696),
    (0.4444444444, 1.2053979619, 1.1131978221),
    (0.8888888889, 1.5983086198, 1.1910120937),
    (1.3333333333, 1.264479259, 1.1963712684),
    (1.7777777778, 1.0867060527, 1.2468996646),
    (2.2222222222, 1.435266228, 0.9318598294),
    (2.6666666667, 1.0565504637, 0.741901977),
    (3.1111111111, 1.0406434124, 1.4221503635),
    (3.5555555556, 1.1910120937, 1.4907034996),
    (4, 1.0159490284, 0.5200696529)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2285236371, 1.1745268696),
    (0.4444444444, 0.8003050892, 1.5969134823),
    (0.8888888889, 0.9944807008, 0.8254731304),
    (1.3333333333, 1.1173695016, 1.3336886631),
    (1.7777777778, 1.3991314477, 1.158394846),
    (2.2222222222, 1.665906193, 1.0574559594),
    (2.6666666667, 1.5577329845, 0.6555127601),
    (3.1111111111, 0.3514718165, 0.2299290868),
    (3.5555555556, 1.2832826301, 0.2690373752),
    (4, 1.4593665102, 0.2751938777)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3753013914, 1.6099992322),
    (0.4444444444, 1.3378974644, 1.5969134823),
    (0.8888888889, 1.4531840842, 1.0059328937),
    (1.3333333333, 1.8350708442, 1.8641419321),
    (1.7777777778, 1.1392460405, 2),
    (2.2222222222, 1.7812224505, 2),
    (2.6666666667, 1.8986996193, 1.1648921773),
    (3.1111111111, 1.0750424818, 1.6578926905),
    (3.5555555556, 1.6633881223, 1.1015517522),
    (4, 1.5285703846, 1.7716342838)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0267171214, 1.3188469745),
    (0.4444444444, 0.6499789124, 1.5969134823),
    (0.8888888889, 1.0593292721, 1.2794723027),
    (1.3333333333, 1.3753013914, 1.2267137173),
    (1.7777777778, 1.1583364078, 1.4101650889),
    (2.2222222222, 0.1794939017, 0.6811159281),
    (2.6666666667, 1.2181042243, 0.935092079),
    (3.1111111111, 1.23109971, 1.6578926905),
    (3.5555555556, 1.2607898392, 1.4907034996),
    (4, 1.2053979619, 0.6304432827)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3846675639, 1.0296909368),
    (0.4444444444, 0.2467392461, 0.7215743629),
    (0.8888888889, 1.0468537967, 0.4651328952),
    (1.3333333333, 0.380194228, 0.6337775612),
    (1.7777777778, 0.6338610348, 0.8609761514),
    (2.2222222222, 0.7489249237, 0.6207803934),
    (2.6666666667, 0.9464444491, 0.8754350952),
    (3.1111111111, 0.8330832862, 0.6613072675),
    (3.5555555556, 1.0296909368, 0.5821447971),
    (4, 0.8650057783, 0.9943815053)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2909825899, 0.4259343349),
    (0.4444444444, 0.755961689, 1.0230023935),
    (0.8888888889, 1.2236553321, 0.9344448153),
    (1.3333333333, 0.6008685523, 0.8017740079),
    (1.7777777778, 1.0475746559, 0.8609761514),
    (2.2222222222, 1.1531529172, 0.9318598294),
    (2.6666666667, 1.0988994641, 0.8754350952),
    (3.1111111111, 1.4181972811, 0.8110186275),
    (3.5555555556, 1.2426662266, 0.9535965829),
    (4, 1.2859393044, 0.9684682786)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 1.4574035863),
    (0.4444444444, 1.513465642, 1.0230023935),
    (0.8888888889, 1.7083204309, 1.3661389652),
    (1.3333333333, 1.2391024005, 0.4938170347),
    (1.7777777778, 1.4460916883, 0.5654556826),
    (2.2222222222, 1.0941068932, 1.5800348523),
    (2.6666666667, 1.0565504637, 0.7991717425),
    (3.1111111111, 1.665906193, 2),
    (3.5555555556, 1.2607898392, 1.4328332648),
    (4, 0.9086905211, 0.6769340567)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.1745268696),
    (0.4444444444, 0.3787503473, 1.0230023935),
    (0.8888888889, 0.7051939155, 1.3661389652),
    (1.3333333333, 0.8733021547, 0.8228875552),
    (1.7777777778, 0.4259343349, 0.8609761514),
    (2.2222222222, 0.7902656657, 2),
    (2.6666666667, 0.9011005359, 0.8754350952),
    (3.1111111111, 1.0098049177, 1.250414619),
    (3.5555555556, 1.1455717397, 0.9535965829),
    (4, 0.755961689, 0.6495580357)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1901110634, 1.767523057),
    (0.4444444444, 0.5105604553, 1.5969134823),
    (0.8888888889, 0.2317278291, 1.3661389652),
    (1.3333333333, 0.3243705185, 1.2948060845),
    (1.7777777778, 0.1901110634, 0.5654556826),
    (2.2222222222, 0.3211346897, 0.4464158462),
    (2.6666666667, 0.3366118777, 0.5832483486),
    (3.1111111111, 0.6622742915, 1.6578926905),
    (3.5555555556, 0.7243125317, 1.0154282222),
    (4, 0.6067016876, 0.8049276631)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3616299392, 0.8254731304),
    (0.4444444444, 1.23109971, 1.0230023935),
    (0.8888888889, 1.3243766758, 0.6383700608),
    (1.3333333333, 0.5594311332, 1.3932983124),
    (1.7777777778, 0.77496661, 1.1113812947),
    (2.2222222222, 1.0655974966, 2),
    (2.6666666667, 0.8416635922, 0.935092079),
    (3.1111111111, 0.6622742915, 2),
    (3.5555555556, 0.7679684185, 0.6800614493),
    (4, 1.0624606776, 0.7360135803)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9254063431, 0.8254731304),
    (0.4444444444, 1.544475646, 1.2648299697),
    (0.8888888889, 1.2900693477, 0.6811530255),
    (1.3333333333, 1.1876895938, 1.0974961283),
    (1.7777777778, 0.7280725506, 1.2023040921),
    (2.2222222222, 0.8775875825, 1.4309752168),
    (2.6666666667, 1.2391024005, 0.935092079),
    (3.1111111111, 1.3199549421, 1.5212944497),
    (3.5555555556, 0.9940671063, 1.3934587741),
    (4, 0.7014168885, 0.7360135803)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5577329845, 1.4574035863),
    (0.4444444444, 0.97002413, 1.5969134823),
    (0.8888888889, 1.2386313716, 1.0059328937),
    (1.3333333333, 1.4192808631, 1.2948060845),
    (1.7777777778, 1.3107307918, 0.756678035),
    (2.2222222222, 1.242431385, 2),
    (2.6666666667, 1.2871191509, 1.1648921773),
    (3.1111111111, 0.9883617877, 2),
    (3.5555555556, 1.5499081273, 0.7351718883),
    (4, 1.1875969245, 0.3807287519)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1680174306, 1.4574035863),
    (0.4444444444, 0.4265826181, 1.5969134823),
    (0.8888888889, 1.0159490284, 0.5909251609),
    (1.3333333333, 1.0745936569, 0.6621025356),
    (1.7777777778, 0.9254063431, 0.2403480545),
    (2.2222222222, 0.5975540188, 1.5046475146),
    (2.6666666667, 0.7714763629, 0.4694318722),
    (3.1111111111, 1.2818411422, 2),
    (3.5555555556, 0.9163291572, 0.7930891878),
    (4, 1.1005198534, 0.84786031)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0267171214, 0.3699954929),
    (0.4444444444, 0.97002413, 1.2648299697),
    (0.8888888889, 1.031357739, 1.1910120937),
    (1.3333333333, 0.5594311332, 1.3932983124),
    (1.7777777778, 0.6338610348, 1.7907640593),
    (2.2222222222, 1.0159490284, 1.5800348523),
    (2.6666666667, 0.9464444491, 1.3119475441),
    (3.1111111111, 0.7382451684, 1.250414619),
    (3.5555555556, 0.7243125317, 1.4328332648),
    (4, 0.8200887508, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2285236371, 0.3366118777),
    (0.4444444444, 0.8963017747, 0.5449895201),
    (0.8888888889, 1.0782030141, 1.2794723027),
    (1.3333333333, 0.8287335876, 0.7613686284),
    (1.7777777778, 0.6338610348, 0.9153916302),
    (2.2222222222, 0.9271724927, 1.0574559594),
    (2.6666666667, 1.1266978453, 1.0936192592),
    (3.1111111111, 0, 0),
    (3.5555555556, 0.232476943, 0.3855576963),
    (4, 0.8200887508, 0.9684682786)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 0.9223851651),
    (0.4444444444, 1.0782030141, 1.4221648376),
    (0.8888888889, 1.4294878048, 0.6383700608),
    (1.3333333333, 1.5914288226, 1.8641419321),
    (1.7777777778, 1.2794723027, 0.8066439035),
    (2.2222222222, 1.4720778811, 0.9318598294),
    (2.6666666667, 2, 1.4302164221),
    (3.1111111111, 1.1232313502, 1.140183069),
    (3.5555555556, 1.3894315931, 1.1432206168),
    (4, 1.4593665102, 1.1644878268)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2498531951, 0.8254731304),
    (0.4444444444, 1.0782030141, 1.2648299697),
    (0.8888888889, 0.8523240435, 1.5740656651),
    (1.3333333333, 0.6852275105, 1.6300484453),
    (1.7777777778, 1.0685640163, 1.7907640593),
    (2.2222222222, 1.0941068932, 1.2348665595),
    (2.6666666667, 1.1647796282, 1.0936192592),
    (3.1111111111, 1.6084091192, 0.8985048692),
    (3.5555555556, 1.6885469045, 1.2496772613),
    (4, 1.1005198534, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3067209471, 0.8254731304),
    (0.4444444444, 1.0006050785, 2),
    (0.8888888889, 1.8301269492, 0.8254731304),
    (1.3333333333, 1.1392460405, 0.9375393224),
    (1.7777777778, 1.1810834252, 1.2468996646),
    (2.2222222222, 1.5527638817, 0.8612166255),
    (2.6666666667, 1.1266978453, 0.8754350952),
    (3.1111111111, 1.1840865711, 1.250414619),
    (3.5555555556, 0.8287335876, 1.0154282222),
    (4, 0.8869663603, 0.3498924985)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3483731883, 1.0296909368),
    (0.4444444444, 2, 1.2648299697),
    (0.8888888889, 1.6298631491, 0.5125577543),
    (1.3333333333, 1.787589636, 0.6621025356),
    (1.7777777778, 1.3753013914, 0.7753534052),
    (2.2222222222, 2, 1.365093153),
    (2.6666666667, 1.787589636, 0.7040709888),
    (3.1111111111, 2, 0.6613072675),
    (3.5555555556, 1.787589636, 1.3646347971),
    (4, 1.665906193, 0.892501825)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.4574035863),
    (0.4444444444, 0.6021507957, 1.2648299697),
    (0.8888888889, 0.4989094734, 1.1910120937),
    (1.3333333333, 0.1901110634, 0.6973397881),
    (1.7777777778, 0.1013003807, 0.517910504),
    (2.2222222222, 0.7489249237, 2),
    (2.6666666667, 0.3366118777, 0.935092079),
    (3.1111111111, 1.1840865711, 2),
    (3.5555555556, 0.5539083117, 1.198811539),
    (4, 0.7014168885, 1.1275631831)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9583954939, 0.6645071899),
    (0.4444444444, 1.1069649739, 0),
    (0.8888888889, 1.097309472, 0.2977652146),
    (1.3333333333, 0.9494363266, 0.4938170347),
    (1.7777777778, 0.9792261957, 0.6267621907),
    (2.2222222222, 1.4181972811, 0.7874053878),
    (2.6666666667, 1.3188469745, 0.4932069152),
    (3.1111111111, 0.9486276129, 0.945681362),
    (3.5555555556, 0.9940671063, 0.5361517975),
    (4, 0.6067016876, 0.4421924223)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6300045071, 1.3188469745),
    (0.4444444444, 1.8956630523, 1.2648299697),
    (0.8888888889, 1.5700967054, 1.5740656651),
    (1.3333333333, 0.8733021547, 0.7302708238),
    (1.7777777778, 1.0867060527, 1.0539449316),
    (2.2222222222, 1.0655974966, 2),
    (2.6666666667, 0.6559603423, 1.0392154501),
    (3.1111111111, 1.23109971, 2),
    (3.5555555556, 1.0685640163, 2),
    (4, 0.755961689, 0.7072133236)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8384472847, 1.767523057),
    (0.4444444444, 1.25397557, 0.8585070772),
    (0.8888888889, 1.0468537967, 1.1910120937),
    (1.3333333333, 0.7818957757, 0.9375393224),
    (1.7777777778, 0.9643562786, 1.5257206213),
    (2.2222222222, 1.3333465725, 1.7504043617),
    (2.6666666667, 1.1266978453, 1.4302164221),
    (3.1111111111, 1.2578738582, 2),
    (3.5555555556, 1.2756874683, 1.198811539),
    (4, 0.7014168885, 0.5386616094)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9792261957, 0.8254731304),
    (0.4444444444, 1.1633398827, 1.2648299697),
    (0.8888888889, 1.031357739, 1.1266978453),
    (1.3333333333, 0.6852275105, 0.9717302569),
    (1.7777777778, 0.8826304984, 0.9523650499),
    (2.2222222222, 0.9853039509, 1.7504043617),
    (2.6666666667, 0.8416635922, 0.7991717425),
    (3.1111111111, 0.9486276129, 1.6578926905),
    (3.5555555556, 1.3027420557, 1.0154282222),
    (4, 1.0159490284, 0.7938661195)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0267171214, 1.0296909368),
    (0.4444444444, 1.2053979619, 1.4221648376),
    (0.8888888889, 0.9944807008, 1.0776148349),
    (1.3333333333, 0.6852275105, 1.0055192992),
    (1.7777777778, 0.6338610348, 1.0539449316),
    (2.2222222222, 0.7489249237, 0.9318598294),
    (2.6666666667, 0.6559603423, 1.0392154501),
    (3.1111111111, 0.6622742915, 1.250414619),
    (3.5555555556, 0.7679684185, 0.8960973232),
    (4, 0.755961689, 0.7360135803)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5367991317, 0.212410364),
    (0.4444444444, 0.755961689, 1.5969134823),
    (0.8888888889, 0.6458160614, 0.8254731304),
    (1.3333333333, 1.1876895938, 1.1963712684),
    (1.7777777778, 0.8826304984, 0.7172308529),
    (2.2222222222, 1.4018733017, 0.6207803934),
    (2.6666666667, 0.7714763629, 0.3676554557),
    (3.1111111111, 1.4786188729, 0.8110186275),
    (3.5555555556, 1.4632008683, 0.5821447971),
    (4, 0.5273705, 0.5200696529)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.8350708442, 0.5425964137),
    (0.4444444444, 1.3565755071, 0.8585070772),
    (0.8888888889, 1.7417230994, 0.8826304984),
    (1.3333333333, 1.264479259, 0.3467021116),
    (1.7777777778, 0.77496661, 1.5257206213),
    (2.2222222222, 1.7083204309, 1.7504043617),
    (2.6666666667, 1.3527484993, 0.5557356079),
    (3.1111111111, 1.1840865711, 0.7412761213),
    (3.5555555556, 1.2320315815, 0.7930891878),
    (4, 0.9086905211, 0.5621365746)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3067209471, 0.399449704),
    (0.4444444444, 0.8003050892, 0.5449895201),
    (0.8888888889, 1.3565755071, 0.6057478075),
    (1.3333333333, 1.4751008197, 0.8468470828),
    (1.7777777778, 1.014835125, 0.3204378929),
    (2.2222222222, 0.9271724927, 0.4181516003),
    (2.6666666667, 1.2607898392, 0.8754350952),
    (3.1111111111, 1.5527638817, 1.0671676165),
    (3.5555555556, 1.0988994641, 0.6800614493),
    (4, 1.1005198534, 0.3807287519)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.767523057),
    (0.4444444444, 0.467970379, 1.5969134823),
    (0.8888888889, 0.4989094734, 1.5740656651),
    (1.3333333333, 0.1901110634, 1.5131358241),
    (1.7777777778, 0.5187864154, 1.0539449316),
    (2.2222222222, 1.034449226, 1.7504043617),
    (2.6666666667, 0.7714763629, 1.2347159361),
    (3.1111111111, 0.1794939017, 2),
    (3.5555555556, 0.6057478075, 1.7977615772),
    (4, 0.5273705, 0.7360135803)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5136449116, 0.6008685523),
    (0.4444444444, 0.9302433424, 0.2301941969),
    (0.8888888889, 0.3787503473, 0.1013003807),
    (1.3333333333, 1.5657800038, 0.8468470828),
    (1.7777777778, 0.8826304984, 0.1866217871),
    (2.2222222222, 1.4990659947, 0.5591206054),
    (2.6666666667, 0.7167173699, 1.3119475441),
    (3.1111111111, 0.9486276129, 0.2299290868),
    (3.5555555556, 1.1204715245, 0.8960973232),
    (4, 0.9086905211, 0.9258898425)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2498531951, 1.3188469745),
    (0.4444444444, 1.679210827, 1.2648299697),
    (0.8888888889, 1.5061829653, 1.3661389652),
    (1.3333333333, 0.9494363266, 1.0974961283),
    (1.7777777778, 0.5858562556, 1.2468996646),
    (2.2222222222, 1.8301269492, 2),
    (2.6666666667, 1.1943479843, 1.1648921773),
    (3.1111111111, 1.0750424818, 2),
    (3.5555555556, 0.9163291572, 1.7977615772),
    (4, 0.936378512, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 1.0296909368),
    (0.4444444444, 1.6298631491, 1.2648299697),
    (0.8888888889, 1.2657499273, 1.1910120937),
    (1.3333333333, 0.8733021547, 2),
    (1.7777777778, 0.8189165748, 1.5257206213),
    (2.2222222222, 1.2657499273, 2),
    (2.6666666667, 1.2871191509, 1.0936192592),
    (3.1111111111, 0.8963017747, 0.5738084394),
    (3.5555555556, 1.3527484993, 1.6026713895),
    (4, 0.8200887508, 1.1644878268)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 1.0296909368),
    (0.4444444444, 0.6499789124, 1.2648299697),
    (0.8888888889, 0.6458160614, 1.1266978453),
    (1.3333333333, 0.6293044262, 1.5808760815),
    (1.7777777778, 0.6338610348, 1.2023040921),
    (2.2222222222, 0.8330832862, 2),
    (2.6666666667, 0.985164875, 1.4302164221),
    (3.1111111111, 0.8963017747, 1.4221503635),
    (3.5555555556, 0.4931132021, 1.198811539),
    (4, 0.5273705, 0.8230545257)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1, 1.0296909368),
    (0.4444444444, 1.0468537967, 1.2648299697),
    (0.8888888889, 1.0782030141, 0.8254731304),
    (1.3333333333, 1.4751008197, 0.8468470828),
    (1.7777777778, 1.3661389652, 0.9952101864),
    (2.2222222222, 0.4614293872, 2),
    (2.6666666667, 1.1266978453, 0.8754350952),
    (3.1111111111, 1.5285703846, 2),
    (3.5555555556, 1.600550296, 0.8960973232),
    (4, 1.2053979619, 0.84786031)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4040715568, 0.6008685523),
    (0.4444444444, 1.1069649739, 1.2648299697),
    (0.8888888889, 0.8523240435, 0.7280725506),
    (1.3333333333, 1.2078324816, 0.3810864296),
    (1.7777777778, 0.8826304984, 0.6267621907),
    (2.2222222222, 1.2053979619, 0.4844732346),
    (2.6666666667, 0.9464444491, 0.2622664615),
    (3.1111111111, 1.3662224388, 1.250414619),
    (3.5555555556, 1.3527484993, 1.1015517522),
    (4, 1.0624606776, 0.6495580357)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.716809318, 0.7318084089),
    (0.4444444444, 1.376094375, 0.4216812309),
    (0.8888888889, 1.4181972811, 0.380194228),
    (1.3333333333, 1.014835125, 0.8017740079),
    (1.7777777778, 1.2571227368, 0.6007295623),
    (2.2222222222, 1.6298631491, 0.2638639321),
    (2.6666666667, 1.0565504637, 0.4437131797),
    (3.1111111111, 1.665906193, 0.6613072675),
    (3.5555555556, 1.1455717397, 0.1769503954),
    (4, 1.4786188729, 0.6054090895)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5136449116, 0.7318084089),
    (0.4444444444, 0.8963017747, 1.0230023935),
    (0.8888888889, 0.8681600685, 1.2794723027),
    (1.3333333333, 1.2987932509, 1.163690014),
    (1.7777777778, 0.8826304984, 1.7907640593),
    (2.2222222222, 0.7902656657, 2),
    (2.6666666667, 1.0565504637, 1.1648921773),
    (3.1111111111, 1.4531840842, 2),
    (3.5555555556, 1.4090748391, 1.5514933958),
    (4, 1.0624606776, 1.539689776)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3067209471, 0.1013003807),
    (0.4444444444, 1.7243948116, 0.4947145759),
    (0.8888888889, 0.8069414507, 0.212410364),
    (1.3333333333, 1.4192808631, 0.2394456416),
    (1.7777777778, 1.5276254792, 0.6570993624),
    (2.2222222222, 0.1794939017, 0),
    (2.6666666667, 1.2871191509, 0.6555127601),
    (3.1111111111, 1.1232313502, 1.3251144672),
    (3.5555555556, 0.8857253942, 0.4079055558),
    (4, 0.6541089557, 0.3025330597)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3243705185, 1.0296909368),
    (0.4444444444, 0.6499789124, 1.5969134823),
    (0.8888888889, 0.97002413, 0.6383700608),
    (1.3333333333, 0.6852275105, 1.2948060845),
    (1.7777777778, 0.8416635922, 0.8609761514),
    (2.2222222222, 1.0159490284, 1.0574559594),
    (2.6666666667, 0.7167173699, 1.0029726035),
    (3.1111111111, 0.3514718165, 2),
    (3.5555555556, 0.7955605068, 0.9535965829),
    (4, 0.4036320282, 0.6769340567)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.264479259, 0.2675841216),
    (0.4444444444, 0.2467392461, 0.2301941969),
    (0.8888888889, 0.4479429594, 0),
    (1.3333333333, 0.9821960318, 0.1043369477),
    (1.7777777778, 0.4259343349, 0.1146241123),
    (2.2222222222, 1.034449226, 0.3115034368),
    (2.6666666667, 0.1901110634, 0.3096175497),
    (3.1111111111, 1.1232313502, 0.1408076062),
    (3.5555555556, 0.8639035426, 0.303831684),
    (4, 0.5273705, 0.4421924223)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8575956151, 1.4574035863),
    (0.4444444444, 0.755961689, 1.5969134823),
    (0.8888888889, 0.7629358153, 1.1266978453),
    (1.3333333333, 0.9821960318, 1.2546179581),
    (1.7777777778, 0.77496661, 1.5257206213),
    (2.2222222222, 0.6937932627, 1.7504043617),
    (2.6666666667, 0.564870242, 0.8754350952),
    (3.1111111111, 1.0098049177, 2),
    (3.5555555556, 1.1204715245, 1.6712719238),
    (4, 0.9669688464, 2)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.787589636, 0.9223851651),
    (0.4444444444, 1.2053979619, 1.5969134823),
    (0.8888888889, 1.3243766758, 0.4259343349),
    (1.3333333333, 0.9821960318, 0.5468159158),
    (1.7777777778, 0.9464444491, 0.3524175758),
    (2.2222222222, 1.3711292739, 0.9318598294),
    (2.6666666667, 0.8416635922, 1.0392154501),
    (3.1111111111, 1.0406434124, 2),
    (3.5555555556, 1.1455717397, 0.361146606),
    (4, 0.8869663603, 0.6304432827)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.264479259, 0),
    (0.4444444444, 0.6499789124, 0.3036305708),
    (0.8888888889, 0.4479429594, 0.1649291558),
    (1.3333333333, 1.1647796282, 0.1698730508),
    (1.7777777778, 1.1976976108, 0.7373333084),
    (2.2222222222, 1.1531529172, 0.3517898349),
    (2.6666666667, 1.2607898392, 0.3676554557),
    (3.1111111111, 1.6084091192, 0.8110186275),
    (3.5555555556, 1.5740656651, 0.4478141626),
    (4, 1.2462549974, 0.7826520299)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 1.3188469745),
    (0.4444444444, 0.6499789124, 1.5969134823),
    (0.8888888889, 0.829848063, 0.8826304984),
    (1.3333333333, 0.6852275105, 1.3336886631),
    (1.7777777778, 0.7280725506, 0.7373333084),
    (2.2222222222, 0.9271724927, 1.7504043617),
    (2.6666666667, 0.6559603423, 1.0936192592),
    (3.1111111111, 0.7382451684, 1.5212944497),
    (3.5555555556, 0.8287335876, 1.6712719238),
    (4, 0.8200887508, 1.8792606084)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 0.9223851651),
    (0.4444444444, 0.755961689, 1.2648299697),
    (0.8888888889, 1.2501028414, 0.5909251609),
    (1.3333333333, 0.6852275105, 0.4299032946),
    (1.7777777778, 0.9254063431, 1.0539449316),
    (2.2222222222, 0.7902656657, 0.6207803934),
    (2.6666666667, 0.1901110634, 0.4156200497),
    (3.1111111111, 1.1840865711, 0.945681362),
    (3.5555555556, 0.8287335876, 0.7930891878),
    (4, 1.1005198534, 0.7072133236)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2794723027, 1.1745268696),
    (0.4444444444, 0.55892837, 0.4216812309),
    (0.8888888889, 1.1232313502, 0.8254731304),
    (1.3333333333, 0.8287335876, 0.8468470828),
    (1.7777777778, 0.9464444491, 0.517910504),
    (2.2222222222, 0.5328107674, 1.5800348523),
    (2.6666666667, 1.2871191509, 0.6170220986),
    (3.1111111111, 1.0750424818, 1.6578926905),
    (3.5555555556, 1.1712664124, 0.8960973232),
    (4, 0.1099213108, 0.1159713597)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0.8254731304),
    (0.4444444444, 0.97002413, 0.1226586153),
    (0.8888888889, 0.1358580679, 0.2507601471),
    (1.3333333333, 0, 0),
    (1.7777777778, 0.6338610348, 0.6908746163),
    (2.2222222222, 0.8330832862, 0.2048810366),
    (2.6666666667, 0.9464444491, 0.203640657),
    (3.1111111111, 1.7417230994, 0.6613072675),
    (3.5555555556, 0.7955605068, 0.4828978505),
    (4, 0.755961689, 0.5621365746)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 1.0296909368),
    (0.4444444444, 0.3787503473, 1.1131978221),
    (0.8888888889, 0.8838451809, 0.8826304984),
    (1.3333333333, 0.6008685523, 1.0974961283),
    (1.7777777778, 0.3482549441, 0.8609761514),
    (2.2222222222, 1.2199644879, 1.365093153),
    (2.6666666667, 0.8416635922, 1.1648921773),
    (3.1111111111, 0.6622742915, 1.4221503635),
    (3.5555555556, 0.8639035426, 0.9268711326),
    (4, 0, 0)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2044394932, 0.8254731304),
    (0.4444444444, 1.5791815461, 1.2648299697),
    (0.8888888889, 1.1911233364, 0.3593645848),
    (1.3333333333, 0.9494363266, 0.9375393224),
    (1.7777777778, 0.9254063431, 0.6908746163),
    (2.2222222222, 1.3862080833, 0.6811159281),
    (2.6666666667, 1.4460916883, 1.1648921773),
    (3.1111111111, 1.1232313502, 0.3160693985),
    (3.5555555556, 0.8287335876, 0.85717115),
    (4, 1.3471384292, 1.1644878268)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 1.4574035863),
    (0.4444444444, 1.1069649739, 1.2648299697),
    (0.8888888889, 1.2900693477, 1.0059328937),
    (1.3333333333, 0.8733021547, 1.4461598232),
    (1.7777777778, 1.1392460405, 0.5425052244),
    (2.2222222222, 1.1531529172, 0.5184991514),
    (2.6666666667, 0.1013003807, 0.1250771943),
    (3.1111111111, 1.3662224388, 0.3160693985),
    (3.5555555556, 1.2146644526, 1.0633388599),
    (4, 0.8200887508, 0.9943815053)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3312770632, 0.7318084089),
    (0.4444444444, 1.6084091192, 1.5969134823),
    (0.8888888889, 0.9394431816, 1.0776148349),
    (1.3333333333, 0.9494363266, 0.6621025356),
    (1.7777777778, 0.4259343349, 0),
    (2.2222222222, 1.5791815461, 0.7149209155),
    (2.6666666667, 1.014835125, 0.741901977),
    (3.1111111111, 1.2818411422, 0.6613072675),
    (3.5555555556, 1.0296909368, 1.0633388599),
    (4, 0.4036320282, 0.2444820865)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5826083822, 1.3188469745),
    (0.4444444444, 1.0468537967, 1.0230023935),
    (0.8888888889, 0.7051939155, 1.1266978453),
    (1.3333333333, 1.0745936569, 1.2267137173),
    (1.7777777778, 0.7280725506, 0.9153916302),
    (2.2222222222, 0.7489249237, 1.1458206273),
    (2.6666666667, 0.8416635922, 0.741901977),
    (3.1111111111, 1.1232313502, 1.4221503635),
    (3.5555555556, 1.0296909368, 0.9831179082),
    (4, 0.4036320282, 0.9943815053)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2044394932, 1.3188469745),
    (0.4444444444, 0.5105604553, 1.5969134823),
    (0.8888888889, 0.8838451809, 2),
    (1.3333333333, 0.6852275105, 2),
    (1.7777777778, 0.8189165748, 1.3070612262),
    (2.2222222222, 0.7489249237, 2),
    (2.6666666667, 1.1647796282, 0.7991717425),
    (3.1111111111, 0.9883617877, 2),
    (3.5555555556, 1.0296909368, 1.198811539),
    (4, 1.1633398827, 1.0395349001)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1876895938, 0.4863550884),
    (0.4444444444, 1.2859393044, 0.3428987797),
    (0.8888888889, 0.7382451684, 0.399449704),
    (1.3333333333, 0.3243705185, 0.320789173),
    (1.7777777778, 1.0296909368, 0.7753534052),
    (2.2222222222, 1.2859393044, 2),
    (2.6666666667, 1.0867060527, 0.5153600821),
    (3.1111111111, 1.3662224388, 1.0671676165),
    (3.5555555556, 1.1910120937, 0.827707186),
    (4, 0.8650057783, 0.5621365746)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 0.8254731304),
    (0.4444444444, 1.1633398827, 1.0230023935),
    (0.8888888889, 0.9394431816, 1.4405688668),
    (1.3333333333, 0.380194228, 1.5131358241),
    (1.7777777778, 0.9881328913, 0.9523650499),
    (2.2222222222, 0.8775875825, 1.7504043617),
    (2.6666666667, 1.3188469745, 1.3119475441),
    (3.1111111111, 0.8330832862, 2),
    (3.5555555556, 1.3354928101, 1.198811539),
    (4, 1.1633398827, 1.612702619)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 2, 0.9223851651),
    (0.4444444444, 1.4411387867, 1.5969134823),
    (0.8888888889, 1.5364162319, 1.0776148349),
    (1.3333333333, 1.3991314477, 1.2948060845),
    (1.7777777778, 1.3107307918, 1.3070612262),
    (2.2222222222, 1.8956630523, 1.0574559594),
    (2.6666666667, 1.3188469745, 0.7991717425),
    (3.1111111111, 1.7083204309, 1.140183069),
    (3.5555555556, 1.7492398529, 2),
    (4, 1.3913613433, 0.7826520299)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6633881223, 1.1745268696),
    (0.4444444444, 1.315573629, 1.5969134823),
    (0.8888888889, 0.97002413, 1.1910120937),
    (1.3333333333, 0.1013003807, 0.2394456416),
    (1.7777777778, 0.77496661, 1.6426398893),
    (2.2222222222, 1.2199644879, 2),
    (2.6666666667, 0.8416635922, 0.741901977),
    (3.1111111111, 0.1794939017, 2),
    (3.5555555556, 1.0988994641, 1.5514933958),
    (4, 1.0159490284, 0.9092810506)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4937928719, 0.6008685523),
    (0.4444444444, 0.467970379, 1.5969134823),
    (0.8888888889, 0.9394431816, 0.77496661),
    (1.3333333333, 0.9132939473, 0.6973397881),
    (1.7777777778, 0.77496661, 1.1113812947),
    (2.2222222222, 0.7489249237, 0.9318598294),
    (2.6666666667, 1.0565504637, 1.7155533301),
    (3.1111111111, 1.0406434124, 0.945681362),
    (3.5555555556, 0.6559603423, 0.6285577317),
    (4, 0.5273705, 0.4421924223)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9792261957, 1.1745268696),
    (0.4444444444, 0.836309986, 0.8585070772),
    (0.8888888889, 0.97002413, 0.9344448153),
    (1.3333333333, 0.8287335876, 0.5927625073),
    (1.7777777778, 0.5187864154, 1.3070612262),
    (2.2222222222, 1.3518316261, 2),
    (2.6666666667, 0.8416635922, 1.0392154501),
    (3.1111111111, 0.9883617877, 1.0671676165),
    (3.5555555556, 1.3706955738, 1.198811539),
    (4, 0.9914206472, 0.6054090895)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1901110634, 1.1745268696),
    (0.4444444444, 0.8003050892, 1.5969134823),
    (0.8888888889, 0.5434660666, 0.3366118777),
    (1.3333333333, 0.7818957757, 1.0666880429),
    (1.7777777778, 0.283190682, 0.4066307179),
    (2.2222222222, 0.7489249237, 0.3868984398),
    (2.6666666667, 0.564870242, 0.7991717425),
    (3.1111111111, 0.6622742915, 1.140183069),
    (3.5555555556, 0.9940671063, 0.4828978505),
    (4, 0.5273705, 0.6769340567)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1, 0.8254731304),
    (0.4444444444, 1.5791815461, 1.2648299697),
    (0.8888888889, 1.7812224505, 1.4405688668),
    (1.3333333333, 1.2391024005, 1.2267137173),
    (1.7777777778, 0.9970336357, 1.158394846),
    (2.2222222222, 0.9853039509, 2),
    (2.6666666667, 0.564870242, 1.3119475441),
    (3.1111111111, 0.9486276129, 1.250414619),
    (3.5555555556, 0.5539083117, 1.1432206168),
    (4, 0.5273705, 1.0395349001)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4040715568, 0.9223851651),
    (0.4444444444, 0.97002413, 0.7729643972),
    (0.8888888889, 1.4072374927, 0.7280725506),
    (1.3333333333, 1.6885469045, 0.6973397881),
    (1.7777777778, 1.4751008197, 1.7907640593),
    (2.2222222222, 1.6084091192, 1.5800348523),
    (2.6666666667, 1.619805772, 1.0936192592),
    (3.1111111111, 1.8956630523, 1.5212944497),
    (3.5555555556, 1.8350708442, 1.1015517522),
    (4, 1.3471384292, 0.7072133236)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 1.1745268696),
    (0.4444444444, 1.1840865711, 0.8585070772),
    (0.8888888889, 0.829848063, 0.77496661),
    (1.3333333333, 1.0475746559, 0.5279221189),
    (1.7777777778, 0.6338610348, 0.8066439035),
    (2.2222222222, 0.5328107674, 1.3311519133),
    (2.6666666667, 0.564870242, 1.561272692),
    (3.1111111111, 0.3514718165, 0.6613072675),
    (3.5555555556, 0.8287335876, 1.3256141333),
    (4, 0.6541089557, 0.7635897384)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0565504637, 1.3188469745),
    (0.4444444444, 0.9486276129, 2),
    (0.8888888889, 0.7382451684, 1.3661389652),
    (1.3333333333, 1.014835125, 1.0452556908),
    (1.7777777778, 1.1050305034, 1.5257206213),
    (2.2222222222, 1.1531529172, 1.4671850788),
    (2.6666666667, 0.9011005359, 2),
    (3.1111111111, 1.1232313502, 1.3251144672),
    (3.5555555556, 0.9163291572, 2),
    (4, 0.936378512, 1.7716342838)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0565504637, 1.4574035863),
    (0.4444444444, 0.836309986, 2),
    (0.8888888889, 0.9944807008, 1.4405688668),
    (1.3333333333, 1.2987932509, 1.6898148891),
    (1.7777777778, 0.9643562786, 1.158394846),
    (2.2222222222, 0.9271724927, 1.6804337199),
    (2.6666666667, 1.014835125, 1.4302164221),
    (3.1111111111, 0.9486276129, 1.5212944497),
    (3.5555555556, 0.9583954939, 1.3646347971),
    (4, 0.9669688464, 1.7716342838)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 0.8254731304),
    (0.4444444444, 0.8003050892, 2),
    (0.8888888889, 1.1667619774, 0.6811530255),
    (1.3333333333, 0.8287335876, 1.0452556908),
    (1.7777777778, 0.8826304984, 1.4101650889),
    (2.2222222222, 0.9271724927, 1.4671850788),
    (2.6666666667, 1.3991314477, 1.7155533301),
    (3.1111111111, 1.6084091192, 1.5722392017),
    (3.5555555556, 1.3706955738, 1.6712719238),
    (4, 1.3913613433, 1.441419072)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3397466119, 1.0296909368),
    (0.4444444444, 0.6021507957, 1.5969134823),
    (0.8888888889, 0.9944807008, 0.8254731304),
    (1.3333333333, 1.0745936569, 1.0055192992),
    (1.7777777778, 1.2355576796, 1.6426398893),
    (2.2222222222, 1.0655974966, 0.8855666945),
    (2.6666666667, 1.3753013914, 1.561272692),
    (3.1111111111, 1.3662224388, 1.250414619),
    (3.5555555556, 1.2146644526, 0.7648408039),
    (4, 1.1875969245, 0.3272576427)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 1.6099992322),
    (0.4444444444, 0.8963017747, 1.2648299697),
    (0.8888888889, 0.7868953429, 0.8826304984),
    (1.3333333333, 0.4794452464, 0.4938170347),
    (1.7777777778, 0.6892692082, 1.4101650889),
    (2.2222222222, 0.5975540188, 0.9626919001),
    (2.6666666667, 0.9011005359, 2),
    (3.1111111111, 0.1794939017, 0.9993186063),
    (3.5555555556, 0.5539083117, 1.1432206168),
    (4, 1.0624606776, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3243705185, 1.1745268696),
    (0.4444444444, 1.0468537967, 1.5969134823),
    (0.8888888889, 0.2317278291, 0.9344448153),
    (1.3333333333, 0.2675841216, 1.4461598232),
    (1.7777777778, 0.77496661, 1.3070612262),
    (2.2222222222, 0.1794939017, 1.1905539763),
    (2.6666666667, 0.4500918727, 1.4302164221),
    (3.1111111111, 0.4868641759, 1.250414619),
    (3.5555555556, 0.6559603423, 1.2849945466),
    (4, 0.7014168885, 0.9258898425)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 0.9223851651),
    (0.4444444444, 1.1633398827, 1.5969134823),
    (0.8888888889, 0.829848063, 0.8826304984),
    (1.3333333333, 0.7428772632, 0.9375393224),
    (1.7777777778, 0.8416635922, 1.6426398893),
    (2.2222222222, 0.8330832862, 1.39962532),
    (2.6666666667, 0.9464444491, 1.4302164221),
    (3.1111111111, 0.4868641759, 1.6578926905),
    (3.5555555556, 0.3243705185, 1.5514933958),
    (4, 1.2236553321, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.6099992322),
    (0.4444444444, 0, 1.5969134823),
    (0.8888888889, 0.3787503473, 1.4405688668),
    (1.3333333333, 0.7818957757, 1.5131358241),
    (1.7777777778, 0.8189165748, 1.2468996646),
    (2.2222222222, 0, 1.1117638801),
    (2.6666666667, 0.4500918727, 2),
    (3.1111111111, 0.6622742915, 1.5722392017),
    (3.5555555556, 0.6057478075, 1.4328332648),
    (4, 0.936378512, 1.6760114005)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0565504637, 1.767523057),
    (0.4444444444, 0.2467392461, 0.4603546131),
    (0.8888888889, 0.4989094734, 0.2977652146),
    (1.3333333333, 1.0988994641, 0.9717302569),
    (1.7777777778, 0, 0.2837418681),
    (2.2222222222, 0.4036320282, 1.2717332769),
    (2.6666666667, 0.4500918727, 0.6170220986),
    (3.1111111111, 0, 0),
    (3.5555555556, 0.4931132021, 1.0154282222),
    (4, 0.1588258096, 0.1675675531)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.0296909368),
    (0.4444444444, 0.467970379, 0.5449895201),
    (0.8888888889, 0.9055990341, 0.77496661),
    (1.3333333333, 0.380194228, 0.3810864296),
    (1.7777777778, 0.283190682, 0.5870208181),
    (2.2222222222, 0.6937932627, 1.2717332769),
    (2.6666666667, 0.7714763629, 1.4302164221),
    (3.1111111111, 0.5786764305, 1.140183069),
    (3.5555555556, 0.4173916178, 0.7351718883),
    (4, 0.7014168885, 0.9456340604)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 0.6645071899),
    (0.4444444444, 1.4294878048, 0.7215743629),
    (0.8888888889, 1.5527638817, 0.5425964137),
    (1.3333333333, 1.0988994641, 0.5927625073),
    (1.7777777778, 0.8416635922, 0.6908746163),
    (2.2222222222, 0.9853039509, 0.8254751638),
    (2.6666666667, 0.7167173699, 1.7155533301),
    (3.1111111111, 0.8963017747, 0.771346443),
    (3.5555555556, 1.2426662266, 0.7351718883),
    (4, 1.1875969245, 0.9092810506)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1519345001, 1.1745268696),
    (0.4444444444, 1.0190248777, 1.5969134823),
    (0.8888888889, 1.4786188729, 1.5740656651),
    (1.3333333333, 1.0475746559, 1.6300484453),
    (1.7777777778, 1.0475746559, 1.4101650889),
    (2.2222222222, 0.8330832862, 1.3311519133),
    (2.6666666667, 1.014835125, 2),
    (3.1111111111, 0.8330832862, 0.8985048692),
    (3.5555555556, 1.3027420557, 1.2849945466),
    (4, 1.1364195285, 1.1644878268)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.0296909368),
    (0.4444444444, 0.8523240435, 1.5969134823),
    (0.8888888889, 1.0159490284, 1.2794723027),
    (1.3333333333, 0.7818957757, 0.8994801466),
    (1.7777777778, 0.564870242, 1.5257206213),
    (2.2222222222, 0.6937932627, 1.4671850788),
    (2.6666666667, 0.7167173699, 2),
    (3.1111111111, 0.5786764305, 1.3690403656),
    (3.5555555556, 0.5539083117, 1.6712719238),
    (4, 1.1005198534, 1.1644878268)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 2),
    (0.4444444444, 0.6499789124, 1.5969134823),
    (0.8888888889, 0.5434660666, 1.0776148349),
    (1.3333333333, 0.4794452464, 1.5808760815),
    (1.7777777778, 1.014835125, 1.7907640593),
    (2.2222222222, 0.3211346897, 1.3311519133),
    (2.6666666667, 0.6559603423, 2),
    (3.1111111111, 0.3514718165, 1.4221503635),
    (3.5555555556, 0.6057478075, 1.7977615772),
    (4, 0.8869663603, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.3188469745),
    (0.4444444444, 0.716392928, 2),
    (0.8888888889, 0.6703190838, 0.77496661),
    (1.3333333333, 0.4794452464, 1.3583805599),
    (1.7777777778, 0.5187864154, 1.6426398893),
    (2.2222222222, 0.8330832862, 1.628237785),
    (2.6666666667, 0.564870242, 1.7155533301),
    (3.1111111111, 1.0406434124, 1.6578926905),
    (3.5555555556, 0.6559603423, 1.4328332648),
    (4, 1.315573629, 1.7716342838)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.1745268696),
    (0.4444444444, 0.716392928, 1.0230023935),
    (0.8888888889, 0.583472753, 0.7280725506),
    (1.3333333333, 0.8287335876, 1.163690014),
    (1.7777777778, 0.3482549441, 1.0539449316),
    (2.2222222222, 0.3211346897, 1.2717332769),
    (2.6666666667, 0.564870242, 2),
    (3.1111111111, 0.5786764305, 1.3251144672),
    (3.5555555556, 0.5539083117, 1.2496772613),
    (4, 0.755961689, 0.9943815053)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4297708742, 1.4574035863),
    (0.4444444444, 0.6021507957, 2),
    (0.8888888889, 1.1232313502, 1.5740656651),
    (1.3333333333, 1.1647796282, 1.0452556908),
    (1.7777777778, 1.3312770632, 1.6426398893),
    (2.2222222222, 1.242431385, 1.5348549924),
    (2.6666666667, 1.4460916883, 1.3119475441),
    (3.1111111111, 1.7812224505, 1.5212944497),
    (3.5555555556, 1.5740656651, 1.2849945466),
    (4, 1.5885764436, 2)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4259343349, 1.6099992322),
    (0.4444444444, 0.9302433424, 2),
    (0.8888888889, 0.7629358153, 1.1266978453),
    (1.3333333333, 1.264479259, 1.2948060845),
    (1.7777777778, 1.0475746559, 1.6426398893),
    (2.2222222222, 0.5328107674, 1.39962532),
    (2.6666666667, 0.7714763629, 1.7155533301),
    (3.1111111111, 0.7382451684, 1.762756952),
    (3.5555555556, 0.7679684185, 1.3256141333),
    (4, 1.0375443884, 1.539689776)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0.4863550884),
    (0.4444444444, 1.0468537967, 0.7729643972),
    (0.8888888889, 0.8838451809, 0.4259343349),
    (1.3333333333, 0.8733021547, 0.4635837681),
    (1.7777777778, 0.9254063431, 0.8609761514),
    (2.2222222222, 0.7489249237, 1.1117638801),
    (2.6666666667, 0.4500918727, 1.1648921773),
    (3.1111111111, 0.7382451684, 0.5368916656),
    (3.5555555556, 0.7243125317, 0.9535965829),
    (4, 0.8200887508, 0.8373047699)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 0.7318084089),
    (0.4444444444, 1.1069649739, 1.0230023935),
    (0.8888888889, 1.3243766758, 0.7280725506),
    (1.3333333333, 1.435129758, 0.5927625073),
    (1.7777777778, 1.4574035863, 0.9523650499),
    (2.2222222222, 0.9271724927, 1.2717332769),
    (2.6666666667, 1.5136449116, 1.7155533301),
    (3.1111111111, 1.23109971, 0.7412761213),
    (3.5555555556, 1.4090748391, 0.7037715155),
    (4, 1.6084091192, 0.9258898425)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1901110634, 0.6008685523),
    (0.4444444444, 0.9486276129, 0.8585070772),
    (0.8888888889, 1.1667619774, 0.8826304984),
    (1.3333333333, 0.8287335876, 0.5927625073),
    (1.7777777778, 0.4259343349, 0.6570993624),
    (2.2222222222, 0.6937932627, 1.0008104347),
    (2.6666666667, 0.6559603423, 1.7155533301),
    (3.1111111111, 0.6622742915, 1.6578926905),
    (3.5555555556, 0.9940671063, 1.4907034996),
    (4, 1.1364195285, 1.1275631831)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3616299392, 1.4574035863),
    (0.4444444444, 1.2053979619, 2),
    (0.8888888889, 0.6156715843, 1.1910120937),
    (1.3333333333, 1.3753013914, 1.1318399315),
    (1.7777777778, 0.8189165748, 1.7907640593),
    (2.2222222222, 0.6458160614, 1.4671850788),
    (2.6666666667, 0.564870242, 1.7155533301),
    (3.1111111111, 0.7801170272, 1.3690403656),
    (3.5555555556, 0.4931132021, 1.2849945466),
    (4, 0.6541089557, 1.441419072)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.3188469745),
    (0.4444444444, 0.2467392461, 2),
    (0.8888888889, 0.7868953429, 0.9344448153),
    (1.3333333333, 1.1876895938, 0.7613686284),
    (1.7777777778, 1.2181042243, 1.158394846),
    (2.2222222222, 0.1794939017, 1.4671850788),
    (2.6666666667, 1.3991314477, 2),
    (3.1111111111, 0.9486276129, 1.1837577238),
    (3.5555555556, 0.4173916178, 1.2849945466),
    (4, 0, 0)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0, 0.9223851651),
    (0.4444444444, 0.2467392461, 2),
    (0.8888888889, 0.4479429594, 1.5740656651),
    (1.3333333333, 0.7428772632, 0.8767686498),
    (1.7777777778, 0.283190682, 1.6426398893),
    (2.2222222222, 0.4614293872, 1.3311519133),
    (2.6666666667, 0.3366118777, 2),
    (3.1111111111, 0.4868641759, 2),
    (3.5555555556, 0.232476943, 1.6026713895),
    (4, 0.755961689, 1.7716342838)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 1.4574035863),
    (0.4444444444, 0.836309986, 2),
    (0.8888888889, 0.7051939155, 0.8254731304),
    (1.3333333333, 0.4794452464, 0.8994801466),
    (1.7777777778, 0.5187864154, 1.4101650889),
    (2.2222222222, 0.6458160614, 1.628237785),
    (2.6666666667, 0.4500918727, 1.7155533301),
    (3.1111111111, 0.5786764305, 1.6578926905),
    (3.5555555556, 0.4931132021, 1.3256141333),
    (4, 0.7014168885, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1329553904, 1.0296909368),
    (0.4444444444, 0.8003050892, 1.0230023935),
    (0.8888888889, 0.4479429594, 0.5125577543),
    (1.3333333333, 0.9494363266, 0.5279221189),
    (1.7777777778, 0.6892692082, 0.3808854164),
    (2.2222222222, 0.6458160614, 0.7277720932),
    (2.6666666667, 1.2391024005, 1.561272692),
    (3.1111111111, 0.3514718165, 0.8586690321),
    (3.5555555556, 0.4173916178, 0.3341540683),
    (4, 0.9669688464, 0.6769340567)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3243705185, 1.0296909368),
    (0.4444444444, 0.716392928, 2),
    (0.8888888889, 0.7382451684, 0.8826304984),
    (1.3333333333, 0.7818957757, 0.7613686284),
    (1.7777777778, 0.6892692082, 2),
    (2.2222222222, 0.9271724927, 1.1905539763),
    (2.6666666667, 0.9011005359, 2),
    (3.1111111111, 1.0750424818, 1.250414619),
    (3.5555555556, 0.9940671063, 1.4907034996),
    (4, 1.1633398827, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9254063431, 1.6099992322),
    (0.4444444444, 1.1840865711, 1.2648299697),
    (0.8888888889, 1.097309472, 1.5740656651),
    (1.3333333333, 1.1647796282, 1.3932983124),
    (1.7777777778, 1.2794723027, 2),
    (2.2222222222, 0.4614293872, 1.39962532),
    (2.6666666667, 0.7167173699, 2),
    (3.1111111111, 0.3514718165, 1.6578926905),
    (3.5555555556, 0.6559603423, 1.3256141333),
    (4, 1.0375443884, 1.6760114005)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2285236371, 0.7318084089),
    (0.4444444444, 1.315573629, 1.5969134823),
    (0.8888888889, 1.5209243416, 1.5740656651),
    (1.3333333333, 1.8986996193, 1.2267137173),
    (1.7777777778, 2, 2),
    (2.2222222222, 1.242431385, 1.5348549924),
    (2.6666666667, 1.787589636, 2),
    (3.1111111111, 1.3662224388, 1.762756952),
    (3.5555555556, 1.716809318, 1.7977615772),
    (4, 2, 2)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4931132021, 1.4574035863),
    (0.4444444444, 0.2467392461, 1.5969134823),
    (0.8888888889, 0.2317278291, 1.1910120937),
    (1.3333333333, 0.6293044262, 1.6300484453),
    (1.7777777778, 0.1901110634, 1.4101650889),
    (2.2222222222, 0.3211346897, 1.4671850788),
    (2.6666666667, 0.8416635922, 2),
    (3.1111111111, 0.4868641759, 1.4685530452),
    (3.5555555556, 0.9163291572, 1.6712719238),
    (4, 0.4036320282, 1.539689776)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9583954939, 1.1745268696),
    (0.4444444444, 0.3787503473, 0.6281676625),
    (0.8888888889, 0.5434660666, 1.5740656651),
    (1.3333333333, 0.6852275105, 0.8017740079),
    (1.7777777778, 0.5858562556, 1.2468996646),
    (2.2222222222, 0.7902656657, 1.39962532),
    (2.6666666667, 1.0988994641, 1.4302164221),
    (3.1111111111, 0.6622742915, 0.4502303034),
    (3.5555555556, 0.8857253942, 1.3256141333),
    (4, 0.1983251607, 0.6054090895)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.0296909368),
    (0.4444444444, 0.5328107674, 1.2648299697),
    (0.8888888889, 0.3101851109, 1.3661389652),
    (1.3333333333, 0.9821960318, 0.5927625073),
    (1.7777777778, 0.77496661, 0.9952101864),
    (2.2222222222, 0.6458160614, 1.5348549924),
    (2.6666666667, 0.9464444491, 1.561272692),
    (3.1111111111, 0.5786764305, 1.0671676165),
    (3.5555555556, 0.232476943, 1.2496772613),
    (4, 0.2867503717, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0565504637, 1.1745268696),
    (0.4444444444, 1.0006050785, 1.2648299697),
    (0.8888888889, 0.9055990341, 1.3661389652),
    (1.3333333333, 1.2391024005, 0.8767686498),
    (1.7777777778, 1.2571227368, 1.1113812947),
    (2.2222222222, 1.1166972102, 0.6595055024),
    (2.6666666667, 0.9011005359, 1.0392154501),
    (3.1111111111, 1.1840865711, 0.8586690321),
    (3.5555555556, 1.2607898392, 1.3256141333),
    (4, 0.6067016876, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6300045071, 0.9223851651),
    (0.4444444444, 1.23109971, 1.2648299697),
    (0.8888888889, 1.3565755071, 1.2794723027),
    (1.3333333333, 1.0475746559, 0.7302708238),
    (1.7777777778, 0.9464444491, 1.2023040921),
    (2.2222222222, 0.8775875825, 1.0008104347),
    (2.6666666667, 1.0565504637, 2),
    (3.1111111111, 1.4181972811, 1.5722392017),
    (3.5555555556, 1.435129758, 1.198811539),
    (4, 1.1005198534, 1.441419072)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9254063431, 0.9223851651),
    (0.4444444444, 0.9302433424, 0.8585070772),
    (0.8888888889, 0.8681600685, 0.8254731304),
    (1.3333333333, 1.014835125, 1.0666880429),
    (1.7777777778, 1.7492398529, 0.8066439035),
    (2.2222222222, 0.4036320282, 1.2717332769),
    (2.6666666667, 0.564870242, 1.7155533301),
    (3.1111111111, 0.7382451684, 1.3014159822),
    (3.5555555556, 1.0296909368, 0.85717115),
    (4, 1.4294878048, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0267171214, 1.3188469745),
    (0.4444444444, 0, 1.0230023935),
    (0.8888888889, 0.7051939155, 1.1266978453),
    (1.3333333333, 0.8733021547, 1.0055192992),
    (1.7777777778, 1.1204715245, 1.6426398893),
    (2.2222222222, 0.5975540188, 1.6804337199),
    (2.6666666667, 0.985164875, 1.3119475441),
    (3.1111111111, 0.8330832862, 0.9993186063),
    (3.5555555556, 0.7243125317, 0.9535965829),
    (4, 0.755961689, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5367991317, 1.0296909368),
    (0.4444444444, 0.4265826181, 2),
    (0.8888888889, 0.829848063, 1.4405688668),
    (1.3333333333, 0.9132939473, 1.163690014),
    (1.7777777778, 1.0867060527, 2),
    (2.2222222222, 0.4036320282, 1.5348549924),
    (2.6666666667, 0.564870242, 1.561272692),
    (3.1111111111, 0.6622742915, 2),
    (3.5555555556, 0.8287335876, 1.4907034996),
    (4, 1.1364195285, 1.6760114005)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1329553904, 1.767523057),
    (0.4444444444, 1.0782030141, 1.2648299697),
    (0.8888888889, 0.6703190838, 1.1910120937),
    (1.3333333333, 0.7428772632, 0.2916795691),
    (1.7777777778, 0.5187864154, 1.0539449316),
    (2.2222222222, 0.5328107674, 0.8254751638),
    (2.6666666667, 1.1266978453, 1.7155533301),
    (3.1111111111, 0.8330832862, 1.3690403656),
    (3.5555555556, 0.6559603423, 1.0154282222),
    (4, 0.2867503717, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 0.8254731304),
    (0.4444444444, 1.1364195285, 1.2648299697),
    (0.8888888889, 0.8523240435, 0.5539083117),
    (1.3333333333, 1.0475746559, 1.0055192992),
    (1.7777777778, 1.0475746559, 0.6908746163),
    (2.2222222222, 1.435266228, 0.764388484),
    (2.6666666667, 1.4874422457, 0.9822912358),
    (3.1111111111, 0.7382451684, 0.4113688836),
    (3.5555555556, 1.0685640163, 0.1086838911),
    (4, 1.4411387867, 0.892501825)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8384472847, 0.9223851651),
    (0.4444444444, 0.2467392461, 1.0230023935),
    (0.8888888889, 0.3101851109, 1.0059328937),
    (1.3333333333, 1.6633881223, 0.8468470828),
    (1.7777777778, 0.9792261957, 1.0539449316),
    (2.2222222222, 0.8330832862, 1.0008104347),
    (2.6666666667, 0.8416635922, 1.2347159361),
    (3.1111111111, 1.1232313502, 0.7159791419),
    (3.5555555556, 0.9163291572, 1.0154282222),
    (4, 0.936378512, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0565504637, 1.6099992322),
    (0.4444444444, 0.6860726901, 1.2648299697),
    (0.8888888889, 1.1911233364, 1.2794723027),
    (1.3333333333, 1.3991314477, 1.3932983124),
    (1.7777777778, 1.0867060527, 0.8609761514),
    (2.2222222222, 1.1531529172, 1.1905539763),
    (2.6666666667, 1.3527484993, 1.561272692),
    (3.1111111111, 0.8963017747, 1.4685530452),
    (3.5555555556, 1.435129758, 0.8960973232),
    (4, 1.5285703846, 1.1989678515)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6885469045, 0.6008685523),
    (0.4444444444, 1.544475646, 1.2648299697),
    (0.8888888889, 1.4921053007, 0.8254731304),
    (1.3333333333, 1.7324158784, 1.2948060845),
    (1.7777777778, 1.787589636, 0.9952101864),
    (2.2222222222, 1.7417230994, 0.764388484),
    (2.6666666667, 1.619805772, 1.3119475441),
    (3.1111111111, 1.4786188729, 0.8110186275),
    (3.5555555556, 1.6300045071, 0.5821447971),
    (4, 1.8956630523, 0.8230545257)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 0.7318084089),
    (0.4444444444, 1.6532978884, 1.5969134823),
    (0.8888888889, 1.3811198901, 1.5740656651),
    (1.3333333333, 1.014835125, 1.6898148891),
    (1.7777777778, 1.3991314477, 1.7907640593),
    (2.2222222222, 1.1166972102, 1.4671850788),
    (2.6666666667, 0.6559603423, 1.7155533301),
    (3.1111111111, 0.7382451684, 1.5722392017),
    (3.5555555556, 0.8287335876, 1.6712719238),
    (4, 1.3471384292, 1.441419072)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9583954939, 1.3188469745),
    (0.4444444444, 1.3565755071, 1.2648299697),
    (0.8888888889, 1.3026602119, 1.8641287063),
    (1.3333333333, 1.3753013914, 1.1963712684),
    (1.7777777778, 1.6633881223, 1.2468996646),
    (2.2222222222, 0.9271724927, 1.0008104347),
    (2.6666666667, 1.0565504637, 1.1648921773),
    (3.1111111111, 0.8330832862, 0.6076812705),
    (3.5555555556, 0.9583954939, 0.827707186),
    (4, 1.0375443884, 0.872100205)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4751008197, 0.6645071899),
    (0.4444444444, 1.4126777601, 1.5969134823),
    (0.8888888889, 1.1667619774, 0.9344448153),
    (1.3333333333, 1.2987932509, 1.0974961283),
    (1.7777777778, 1.3527484993, 0.9952101864),
    (2.2222222222, 0.8330832862, 1.1117638801),
    (2.6666666667, 1.7022347854, 1.0936192592),
    (3.1111111111, 1.4181972811, 1.4685530452),
    (3.5555555556, 1.4812135846, 1.1432206168),
    (4, 1.7812224505, 1.539689776)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.1745268696),
    (0.4444444444, 0.8963017747, 1.5969134823),
    (0.8888888889, 0.3787503473, 1.5740656651),
    (1.3333333333, 0.4794452464, 0.6973397881),
    (1.7777777778, 0.8826304984, 0.9153916302),
    (2.2222222222, 0.3211346897, 1.1905539763),
    (2.6666666667, 0.7714763629, 1.3119475441),
    (3.1111111111, 0.7382451684, 1.1837577238),
    (3.5555555556, 0.4173916178, 0.4828978505),
    (4, 0.4036320282, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5367991317, 0.9223851651),
    (0.4444444444, 0.2467392461, 1.5969134823),
    (0.8888888889, 0.3101851109, 1.767523057),
    (1.3333333333, 0.5594311332, 1.7843465515),
    (1.7777777778, 0.6892692082, 1.2468996646),
    (2.2222222222, 0.3211346897, 1.2717332769),
    (2.6666666667, 0.9464444491, 1.561272692),
    (3.1111111111, 0.4868641759, 1.1121004663),
    (3.5555555556, 0.1013003807, 1.1432206168),
    (4, 0.4036320282, 0.4937273831)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0565504637, 0.7318084089),
    (0.4444444444, 1.4126777601, 0.7729643972),
    (0.8888888889, 1.031357739, 0.7280725506),
    (1.3333333333, 1.264479259, 0.783706167),
    (1.7777777778, 1.600550296, 1.4101650889),
    (2.2222222222, 1.4531840842, 0.7402841334),
    (2.6666666667, 1.4244889375, 1.3119475441),
    (3.1111111111, 1.1232313502, 0.8985048692),
    (3.5555555556, 1.3354928101, 0.9831179082),
    (4, 0.8200887508, 0.9390727132)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0.3114530955),
    (0.4444444444, 1.3862080833, 0.8585070772),
    (0.8888888889, 0.7868953429, 0.7280725506),
    (1.3333333333, 1.4751008197, 0.5927625073),
    (1.7777777778, 1.5740656651, 1.1113812947),
    (2.2222222222, 1.3069274149, 1.5348549924),
    (2.6666666667, 1.2181042243, 1.7155533301),
    (3.1111111111, 1.4411387867, 1.3251144672),
    (3.5555555556, 1.3027420557, 1.1015517522),
    (4, 0.9669688464, 1.1275631831)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1680174306, 1.3188469745),
    (0.4444444444, 1.1069649739, 0.6569977756),
    (0.8888888889, 0.9394431816, 0.6383700608),
    (1.3333333333, 0.9132939473, 1.5131358241),
    (1.7777777778, 1.2355576796, 1.5257206213),
    (2.2222222222, 0.6937932627, 1.1905539763),
    (2.6666666667, 1.1266978453, 1.561272692),
    (3.1111111111, 0.7382451684, 0.9993186063),
    (3.5555555556, 1.1455717397, 0.827707186),
    (4, 1.3471384292, 1.1275631831)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1, 0.6008685523),
    (0.4444444444, 0.55892837, 0.9256178097),
    (0.8888888889, 0, 1.2794723027),
    (1.3333333333, 0.6008685523, 1.4461598232),
    (1.7777777778, 0.77496661, 1.4101650889),
    (2.2222222222, 0.5975540188, 0.8254751638),
    (2.6666666667, 0.985164875, 1.4302164221),
    (3.1111111111, 0.6622742915, 0.9993186063),
    (3.5555555556, 0.7243125317, 1.0633388599),
    (4, 0.2317278291, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.600550296, 1.4574035863),
    (0.4444444444, 1.25397557, 1.2648299697),
    (0.8888888889, 1.0782030141, 0.8826304984),
    (1.3333333333, 1.2987932509, 1.0055192992),
    (1.7777777778, 1.4192808631, 1.1113812947),
    (2.2222222222, 1.5791815461, 1.4671850788),
    (2.6666666667, 1.619805772, 1.0936192592),
    (3.1111111111, 1.3662224388, 0.9993186063),
    (3.5555555556, 1.0685640163, 1.0633388599),
    (4, 1.4126777601, 1.1644878268)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2285236371, 1.0296909368),
    (0.4444444444, 0.55892837, 0.8585070772),
    (0.8888888889, 0.6156715843, 0.6383700608),
    (1.3333333333, 1.0988994641, 0.6434244929),
    (1.7777777778, 1.1583364078, 1.3070612262),
    (2.2222222222, 0.4614293872, 1.1117638801),
    (2.6666666667, 1.014835125, 1.2347159361),
    (3.1111111111, 0.4868641759, 0.9176889588),
    (3.5555555556, 0.6852275105, 0.6285577317),
    (4, 0.2867503717, 0.9554430393)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1680174306, 1.767523057),
    (0.4444444444, 1.3565755071, 2),
    (0.8888888889, 1.8956630523, 1.4405688668),
    (1.3333333333, 1.0745936569, 1.739162567),
    (1.7777777778, 1.7022347854, 1.6426398893),
    (2.2222222222, 1.3333465725, 1.6804337199),
    (2.6666666667, 1.1266978453, 1.7155533301),
    (3.1111111111, 0.8963017747, 2),
    (3.5555555556, 1.3027420557, 2),
    (4, 0.936378512, 1.441419072)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0.7318084089),
    (0.4444444444, 0.97002413, 1.0230023935),
    (0.8888888889, 1.1232313502, 0.7280725506),
    (1.3333333333, 1.3312770632, 0.8994801466),
    (1.7777777778, 0.4259343349, 0.7373333084),
    (2.2222222222, 1.0941068932, 0.8254751638),
    (2.6666666667, 1.0867060527, 1.2347159361),
    (3.1111111111, 0.8330832862, 1.4221503635),
    (3.5555555556, 1.0685640163, 1.3934587741),
    (4, 1.1633398827, 1.441419072)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 0.8254731304),
    (0.4444444444, 0.8650057783, 1.0230023935),
    (0.8888888889, 0.6703190838, 1.0059328937),
    (1.3333333333, 1.2078324816, 0.8767686498),
    (1.7777777778, 1.1810834252, 0.8609761514),
    (2.2222222222, 1.1531529172, 0.764388484),
    (2.6666666667, 0.9464444491, 1.4302164221),
    (3.1111111111, 1.3199549421, 1.0671676165),
    (3.5555555556, 1.1712664124, 0.7351718883),
    (4, 1.315573629, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8575956151, 0.6008685523),
    (0.4444444444, 1.4921053007, 1.2648299697),
    (0.8888888889, 0.8069414507, 1.2794723027),
    (1.3333333333, 1.0988994641, 1.3932983124),
    (1.7777777778, 1.4192808631, 2),
    (2.2222222222, 1.2777739686, 1.6804337199),
    (2.6666666667, 1.2607898392, 1.1648921773),
    (3.1111111111, 0.8963017747, 1.6578926905),
    (3.5555555556, 1.0685640163, 1.2496772613),
    (4, 0.9914206472, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9254063431, 0.4259343349),
    (0.4444444444, 1.25397557, 1.2648299697),
    (0.8888888889, 1.1232313502, 1.1910120937),
    (1.3333333333, 1.5276254792, 1.5808760815),
    (1.7777777778, 1.5499081273, 1.6426398893),
    (2.2222222222, 0.9853039509, 1.39962532),
    (2.6666666667, 1.3527484993, 1.4302164221),
    (3.1111111111, 0.8963017747, 0.945681362),
    (3.5555555556, 1.4937928719, 1.5514933958),
    (4, 1.2462549974, 1.1275631831)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 1.1745268696),
    (0.4444444444, 1.0468537967, 1.5969134823),
    (0.8888888889, 1.3965821935, 1.5740656651),
    (1.3333333333, 2, 1.4461598232),
    (1.7777777778, 1.619805772, 1.4101650889),
    (2.2222222222, 1.4018733017, 1.628237785),
    (2.6666666667, 0.7714763629, 0.6555127601),
    (3.1111111111, 0.9486276129, 1.3690403656),
    (3.5555555556, 1.1204715245, 1.0633388599),
    (4, 0.6541089557, 1.441419072)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1901110634, 1.0296909368),
    (0.4444444444, 0.6021507957, 1.0230023935),
    (0.8888888889, 0.6156715843, 1.0059328937),
    (1.3333333333, 0.7818957757, 1.1963712684),
    (1.7777777778, 0.9970336357, 1.5257206213),
    (2.2222222222, 0.6458160614, 1.1117638801),
    (2.6666666667, 0.3366118777, 1.3119475441),
    (3.1111111111, 0.9486276129, 1.0671676165),
    (3.5555555556, 0.6057478075, 1.4328332648),
    (4, 1.4990659947, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.7492398529, 1.1745268696),
    (0.4444444444, 1.2859393044, 1.5969134823),
    (0.8888888889, 1.4531840842, 1.5740656651),
    (1.3333333333, 1.5499081273, 1.0666880429),
    (1.7777777778, 1.8350708442, 1.5257206213),
    (2.2222222222, 0.5975540188, 1.1905539763),
    (2.6666666667, 1.4874422457, 1.7155533301),
    (3.1111111111, 1.23109971, 1.250414619),
    (3.5555555556, 1.435129758, 1.1432206168),
    (4, 1.4126777601, 1.612702619)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 0.7318084089),
    (0.4444444444, 0.755961689, 1.2648299697),
    (0.8888888889, 0.9944807008, 0.9344448153),
    (1.3333333333, 0.9494363266, 1.6898148891),
    (1.7777777778, 1.3527484993, 1.3070612262),
    (2.2222222222, 0.9853039509, 1.2717332769),
    (2.6666666667, 0.6559603423, 1.0392154501),
    (3.1111111111, 0.3514718165, 1.250414619),
    (3.5555555556, 1.2146644526, 0.827707186),
    (4, 0.4036320282, 0.4937273831)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5348671048, 0.9223851651),
    (0.4444444444, 1.3026602119, 1.2648299697),
    (0.8888888889, 1.5983086198, 1.1910120937),
    (1.3333333333, 1.6300045071, 1.2948060845),
    (1.7777777778, 1.014835125, 1.4101650889),
    (2.2222222222, 0.8330832862, 1.628237785),
    (2.6666666667, 0.7167173699, 1.4302164221),
    (3.1111111111, 0.4868641759, 2),
    (3.5555555556, 0.7818957757, 1.7977615772),
    (4, 1.5612979128, 1.539689776)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.1745268696),
    (0.4444444444, 1.0190248777, 1.2648299697),
    (0.8888888889, 1.2777739686, 1.8641287063),
    (1.3333333333, 1.7324158784, 1.3932983124),
    (1.7777777778, 1.7022347854, 2),
    (2.2222222222, 1.665906193, 1.628237785),
    (2.6666666667, 1.5348671048, 2),
    (3.1111111111, 1.5700967054, 1.762756952),
    (3.5555555556, 1.5205547536, 1.5514933958),
    (4, 1.7083204309, 1.441419072)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3243705185, 0.5425964137),
    (0.4444444444, 1.0006050785, 2),
    (0.8888888889, 0.9055990341, 0.7280725506),
    (1.3333333333, 0.4794452464, 0.6973397881),
    (1.7777777778, 1.5068867979, 2),
    (2.2222222222, 0.9271724927, 1.1905539763),
    (2.6666666667, 1.014835125, 1.1648921773),
    (3.1111111111, 0.8330832862, 0.4113688836),
    (3.5555555556, 0.7243125317, 1.3934587741),
    (4, 1.2657499273, 0.9943815053)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 0.8254731304),
    (0.4444444444, 0.8650057783, 0.7215743629),
    (0.8888888889, 0.583472753, 1.0776148349),
    (1.3333333333, 0.9132939473, 0.5927625073),
    (1.7777777778, 1.1204715245, 1.3070612262),
    (2.2222222222, 0.5328107674, 1.0008104347),
    (2.6666666667, 0.6559603423, 0.6839194196),
    (3.1111111111, 0.8330832862, 1.762756952),
    (3.5555555556, 0.9583954939, 0.5143907122),
    (4, 0.6067016876, 0.8230545257)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1329553904, 0.4863550884),
    (0.4444444444, 1.2697291762, 0.8585070772),
    (0.8888888889, 0.9394431816, 0.5125577543),
    (1.3333333333, 1.2215603965, 1.2546179581),
    (1.7777777778, 1.1050305034, 1.3070612262),
    (2.2222222222, 1.3711292739, 1.0008104347),
    (2.6666666667, 1.1943479843, 1.1648921773),
    (3.1111111111, 0.8330832862, 0.9993186063),
    (3.5555555556, 0.7955605068, 1.2496772613),
    (4, 1.3026602119, 1.441419072)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.4574035863),
    (0.4444444444, 0.9302433424, 1.5969134823),
    (0.8888888889, 0.6458160614, 1.2794723027),
    (1.3333333333, 1.1392460405, 1.1318399315),
    (1.7777777778, 1.1204715245, 1.2023040921),
    (2.2222222222, 1.1875969245, 1.3311519133),
    (2.6666666667, 1.4460916883, 1.3119475441),
    (3.1111111111, 1.1840865711, 1.4685530452),
    (3.5555555556, 0.7243125317, 1.198811539),
    (4, 1.1005198534, 1.0395349001)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9254063431, 1.0296909368),
    (0.4444444444, 1.1633398827, 0.7729643972),
    (0.8888888889, 0.5434660666, 1.0059328937),
    (1.3333333333, 1.3527484993, 0.9375393224),
    (1.7777777778, 0.8826304984, 1.4101650889),
    (2.2222222222, 0.4614293872, 1.0008104347),
    (2.6666666667, 0.564870242, 1.3119475441),
    (3.1111111111, 0.1794939017, 0.3673230706),
    (3.5555555556, 0.232476943, 1.198811539),
    (4, 0.4036320282, 1.1989678515)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.0296909368),
    (0.4444444444, 0.716392928, 0.3771200578),
    (0.8888888889, 0.583472753, 0.6811530255),
    (1.3333333333, 1.014835125, 0.9375393224),
    (1.7777777778, 0.6892692082, 0.4519881112),
    (2.2222222222, 0.9271724927, 0.8855666945),
    (2.6666666667, 0.9011005359, 1.2347159361),
    (3.1111111111, 1.0098049177, 0.8586690321),
    (3.5555555556, 0.9583954939, 0.6285577317),
    (4, 1.1364195285, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1329553904, 0.9223851651),
    (0.4444444444, 1.0190248777, 0.6839678314),
    (0.8888888889, 0.9394431816, 1.0059328937),
    (1.3333333333, 1.2215603965, 1.5131358241),
    (1.7777777778, 1.1810834252, 0.9153916302),
    (2.2222222222, 0.9853039509, 1.1117638801),
    (2.6666666667, 0.8416635922, 1.7155533301),
    (3.1111111111, 0.3514718165, 0.945681362),
    (3.5555555556, 1.1455717397, 0.5565993525),
    (4, 1.0624606776, 1.1989678515)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1329553904, 0.1649291558),
    (0.4444444444, 1.23109971, 0.5805317772),
    (0.8888888889, 0.4479429594, 0.4794452464),
    (1.3333333333, 0.9132939473, 0.8017740079),
    (1.7777777778, 1.1810834252, 1.4101650889),
    (2.2222222222, 1.242431385, 0.5394039792),
    (2.6666666667, 1.787589636, 1.3119475441),
    (3.1111111111, 1.3662224388, 0.4961056762),
    (3.5555555556, 1.3894315931, 1.3646347971),
    (4, 1.8301269492, 1.0395349001)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 0.4863550884),
    (0.4444444444, 0.8963017747, 0.6050909329),
    (0.8888888889, 0.8069414507, 0.5755110625),
    (1.3333333333, 0.4794452464, 0.7613686284),
    (1.7777777778, 0.5858562556, 0.7753534052),
    (2.2222222222, 0.8330832862, 0.7017024986),
    (2.6666666667, 0.8416635922, 0.9568636233),
    (3.1111111111, 0.3514718165, 0.5738084394),
    (3.5555555556, 0.3243705185, 0.9268711326),
    (4, 0.8869663603, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2794723027, 1.1745268696),
    (0.4444444444, 1.4720778811, 1.2648299697),
    (0.8888888889, 1.3811198901, 0.77496661),
    (1.3333333333, 1.6300045071, 1.0974961283),
    (1.7777777778, 1.6406354152, 1.6426398893),
    (2.2222222222, 1.1166972102, 1.5348549924),
    (2.6666666667, 1.6633881223, 1.561272692),
    (3.1111111111, 1.5285703846, 0.7159791419),
    (3.5555555556, 1.8986996193, 0.6285577317),
    (4, 1.6298631491, 1.0395349001)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 0.7318084089),
    (0.4444444444, 0.8003050892, 1.2648299697),
    (0.8888888889, 1.3243766758, 1.1266978453),
    (1.3333333333, 0.2675841216, 0.4299032946),
    (1.7777777778, 1.014835125, 1.4101650889),
    (2.2222222222, 1.0655974966, 1.628237785),
    (2.6666666667, 0.7714763629, 2),
    (3.1111111111, 0.5786764305, 1.6578926905),
    (3.5555555556, 0.4173916178, 1.4907034996),
    (4, 0.8200887508, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1, 0.8254731304),
    (0.4444444444, 0.3787503473, 1.2648299697),
    (0.8888888889, 1.2501028414, 1.0059328937),
    (1.3333333333, 0.5594311332, 1.1318399315),
    (1.7777777778, 1.4937928719, 0.9952101864),
    (2.2222222222, 0.5328107674, 1.1117638801),
    (2.6666666667, 0.564870242, 1.561272692),
    (3.1111111111, 0.4868641759, 1.0671676165),
    (3.5555555556, 0.3593645848, 0.6601823512),
    (4, 0.755961689, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7989386735, 0.4863550884),
    (0.4444444444, 0.5105604553, 0.6569977756),
    (0.8888888889, 0.9055990341, 0.6811530255),
    (1.3333333333, 0.6852275105, 0.9375393224),
    (1.7777777778, 1.5276254792, 0.8066439035),
    (2.2222222222, 0.6937932627, 0.5778051143),
    (2.6666666667, 0.7167173699, 1.4302164221),
    (3.1111111111, 0.9486276129, 1.0671676165),
    (3.5555555556, 0.6559603423, 0.9831179082),
    (4, 1.2859393044, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4297708742, 0.8254731304),
    (0.4444444444, 1.3965821935, 1.0230023935),
    (0.8888888889, 0.3787503473, 1.5740656651),
    (1.3333333333, 1.3312770632, 1.0974961283),
    (1.7777777778, 1.3312770632, 1.0539449316),
    (2.2222222222, 1.3069274149, 0.8855666945),
    (2.6666666667, 1.3188469745, 1.561272692),
    (3.1111111111, 1.3199549421, 1.3690403656),
    (3.5555555556, 1.3229552183, 0.7930891878),
    (4, 1.0159490284, 0.872100205)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9583954939, 0.4863550884),
    (0.4444444444, 1.4720778811, 1.2648299697),
    (0.8888888889, 0.7051939155, 1.0059328937),
    (1.3333333333, 0.8287335876, 1.2267137173),
    (1.7777777778, 1.2571227368, 1.158394846),
    (2.2222222222, 1.1166972102, 0.8254751638),
    (2.6666666667, 1.5826083822, 1.4302164221),
    (3.1111111111, 1.0750424818, 1.5212944497),
    (3.5555555556, 1.0988994641, 1.1432206168),
    (4, 1.2236553321, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5577329845, 0.6645071899),
    (0.4444444444, 1.7812224505, 0.6050909329),
    (0.8888888889, 0.6156715843, 0.5125577543),
    (1.3333333333, 1.4751008197, 1.0055192992),
    (1.7777777778, 1.4751008197, 0.8609761514),
    (2.2222222222, 1.2053979619, 1.2717332769),
    (2.6666666667, 0.8416635922, 0.9822912358),
    (3.1111111111, 1.2578738582, 1.1121004663),
    (3.5555555556, 2, 0),
    (4, 0.6067016876, 0.4725976579)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8384472847, 0.5425964137),
    (0.4444444444, 0.716392928, 0.7215743629),
    (0.8888888889, 1.1667619774, 0.8254731304),
    (1.3333333333, 1.2987932509, 1.0452556908),
    (1.7777777778, 1.1392460405, 0.9153916302),
    (2.2222222222, 1.4720778811, 0.6207803934),
    (2.6666666667, 1.7022347854, 1.4302164221),
    (3.1111111111, 1.0098049177, 0.5170467787),
    (3.5555555556, 1.4632008683, 0.7351718883),
    (4, 1.5612979128, 0.9554430393)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6293044262, 1.3188469745),
    (0.4444444444, 0.8963017747, 1.0230023935),
    (0.8888888889, 0.7051939155, 1.0776148349),
    (1.3333333333, 1.1173695016, 0.8228875552),
    (1.7777777778, 1.3312770632, 1.3070612262),
    (2.2222222222, 1.0655974966, 1.39962532),
    (2.6666666667, 0.4500918727, 1.4302164221),
    (3.1111111111, 0.6622742915, 0.771346443),
    (3.5555555556, 0.7243125317, 0.9535965829),
    (4, 0.5273705, 1.539689776)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 1.1745268696),
    (0.4444444444, 1.0468537967, 1.0230023935),
    (0.8888888889, 1.1232313502, 1.0776148349),
    (1.3333333333, 1.1392460405, 1.2546179581),
    (1.7777777778, 1.2044394932, 1.4101650889),
    (2.2222222222, 1.034449226, 1.1905539763),
    (2.6666666667, 1.014835125, 1.4302164221),
    (3.1111111111, 1.0406434124, 1.3690403656),
    (3.5555555556, 0.9583954939, 1.0410322635),
    (4, 1.2859393044, 1.441419072)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 0.3699954929),
    (0.4444444444, 0.836309986, 1.0230023935),
    (0.8888888889, 1.1667619774, 0.9344448153),
    (1.3333333333, 1.5914288226, 1.0055192992),
    (1.7777777778, 1.3846675639, 1.1113812947),
    (2.2222222222, 0.8775875825, 0.8254751638),
    (2.6666666667, 1.1647796282, 1.561272692),
    (3.1111111111, 1.2818411422, 0.8586690321),
    (3.5555555556, 1.0296909368, 0.6800614493),
    (4, 0.8200887508, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2044394932, 1.4574035863),
    (0.4444444444, 0.8650057783, 0.8585070772),
    (0.8888888889, 1.2053979619, 1.1910120937),
    (1.3333333333, 0.6008685523, 0.7613686284),
    (1.7777777778, 1.22503339, 1.4101650889),
    (2.2222222222, 1.2942321987, 1.0008104347),
    (2.6666666667, 1.3991314477, 1.1648921773),
    (3.1111111111, 0.5786764305, 1.1837577238),
    (3.5555555556, 1.0988994641, 1.4328332648),
    (4, 1.2657499273, 1.0395349001)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9583954939, 1.1745268696),
    (0.4444444444, 0.6860726901, 1.2648299697),
    (0.8888888889, 1.4531840842, 0.9344448153),
    (1.3333333333, 1.014835125, 1.4461598232),
    (1.7777777778, 1.2948736975, 1.2023040921),
    (2.2222222222, 1.1875969245, 1.1117638801),
    (2.6666666667, 1.3991314477, 2),
    (3.1111111111, 0.8330832862, 1.762756952),
    (3.5555555556, 0.8639035426, 1.198811539),
    (4, 1.2462549974, 1.612702619)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8384472847, 0.9223851651),
    (0.4444444444, 1.513465642, 1.5969134823),
    (0.8888888889, 1.1232313502, 1.0059328937),
    (1.3333333333, 1.3312770632, 1.5131358241),
    (1.7777777778, 1.2112406716, 1.2023040921),
    (2.2222222222, 1.1875969245, 1.39962532),
    (2.6666666667, 0.3366118777, 1.2347159361),
    (3.1111111111, 0.7801170272, 1.1837577238),
    (3.5555555556, 1.1712664124, 1.1015517522),
    (4, 0.8200887508, 0.892501825)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4931132021, 0.2675841216),
    (0.4444444444, 1.1364195285, 0.4947145759),
    (0.8888888889, 0.9394431816, 1.0059328937),
    (1.3333333333, 0.7818957757, 1.0055192992),
    (1.7777777778, 1.0685640163, 0.9952101864),
    (2.2222222222, 1.1531529172, 1.1905539763),
    (2.6666666667, 1.4690983238, 0.5361383491),
    (3.1111111111, 0.7801170272, 1.3690403656),
    (3.5555555556, 0.4931132021, 0.4285645113),
    (4, 0.9914206472, 0.2092409413)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1, 0.7318084089),
    (0.4444444444, 1.3288401077, 0.8585070772),
    (0.8888888889, 0.7629358153, 1.0059328937),
    (1.3333333333, 0.9821960318, 1.163690014),
    (1.7777777778, 0.7280725506, 0.4913316344),
    (2.2222222222, 0.9271724927, 1.3311519133),
    (2.6666666667, 1.2181042243, 1.0392154501),
    (3.1111111111, 0.4868641759, 0.771346443),
    (3.5555555556, 0.6057478075, 0.5361517975),
    (4, 0.936378512, 0.872100205)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4517019394, 1.3188469745),
    (0.4444444444, 1.8301269492, 0.9256178097),
    (0.8888888889, 1.679210827, 1.3661389652),
    (1.3333333333, 1.4751008197, 1.163690014),
    (1.7777777778, 1.8986996193, 0.9523650499),
    (2.2222222222, 1.5209243416, 0.1258390422),
    (2.6666666667, 1.5577329845, 2),
    (3.1111111111, 1.2818411422, 1.4685530452),
    (3.5555555556, 1.5068867979, 0.7648408039),
    (4, 1.7417230994, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9254063431, 1.1745268696),
    (0.4444444444, 0.6860726901, 1.0230023935),
    (0.8888888889, 0.5434660666, 1.2794723027),
    (1.3333333333, 0.4794452464, 1.3458910443),
    (1.7777777778, 0.77496661, 1.0539449316),
    (2.2222222222, 0.5975540188, 1.3311519133),
    (2.6666666667, 0.985164875, 1.561272692),
    (3.1111111111, 0.8330832862, 1.0671676165),
    (3.5555555556, 1.0296909368, 0.85717115),
    (4, 0.7014168885, 1.612702619)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.8986996193, 1.0296909368),
    (0.4444444444, 1.1364195285, 2),
    (0.8888888889, 2, 1.1910120937),
    (1.3333333333, 1.3527484993, 1.0974961283),
    (1.7777777778, 1.5740656651, 1.4101650889),
    (2.2222222222, 1.034449226, 1.1905539763),
    (2.6666666667, 1.1647796282, 2),
    (3.1111111111, 1.4786188729, 1.1837577238),
    (3.5555555556, 1.0685640163, 0.8960973232),
    (4, 1.665906193, 1.441419072)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 0.6645071899),
    (0.4444444444, 1.4531840842, 1.2648299697),
    (0.8888888889, 1.2236553321, 1.2794723027),
    (1.3333333333, 1.4751008197, 1.163690014),
    (1.7777777778, 1.2948736975, 1.6426398893),
    (2.2222222222, 0.8775875825, 1.2717332769),
    (2.6666666667, 1.1943479843, 1.3119475441),
    (3.1111111111, 0.8330832862, 1.1837577238),
    (3.5555555556, 0.9163291572, 0.8960973232),
    (4, 1.4990659947, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5367991317, 1.4574035863),
    (0.4444444444, 0.55892837, 0.8585070772),
    (0.8888888889, 0, 0.4500918727),
    (1.3333333333, 0.6852275105, 0.4299032946),
    (1.7777777778, 0.4259343349, 1.1113812947),
    (2.2222222222, 0, 2),
    (2.6666666667, 0, 0),
    (3.1111111111, 0.5786764305, 0.9993186063),
    (3.5555555556, 0.9583954939, 1.3646347971),
    (4, 0.9914206472, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4040715568, 0.8254731304),
    (0.4444444444, 1.0782030141, 1.0230023935),
    (0.8888888889, 1.0782030141, 1.0059328937),
    (1.3333333333, 1.1392460405, 0.9375393224),
    (1.7777777778, 1.435129758, 1.0539449316),
    (2.2222222222, 0.9853039509, 1.1905539763),
    (2.6666666667, 1.0565504637, 1.2347159361),
    (3.1111111111, 1.1840865711, 1.3014159822),
    (3.5555555556, 1.1910120937, 0.7037715155),
    (4, 1.376094375, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3229552183, 0.6008685523),
    (0.4444444444, 0.9883617877, 0.6569977756),
    (0.8888888889, 0.1358580679, 0.9344448153),
    (1.3333333333, 1.0475746559, 0.8767686498),
    (1.7777777778, 1.0475746559, 0.9523650499),
    (2.2222222222, 0.9853039509, 0.8855666945),
    (2.6666666667, 1.1647796282, 1.0029726035),
    (3.1111111111, 1.1840865711, 0.8586690321),
    (3.5555555556, 0.8857253942, 0.6285577317),
    (4, 0.4036320282, 0.8049276631)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}

triple[] points = {
    (0, 1.1398517463, 0.9529497133),
    (0.4444444444, 0.9857076584, 1.1398021234),
    (0.8888888889, 1.0656479268, 0.8524577306),
    (1.3333333333, 0.9612800867, 0.8958220755),
    (1.7777777778, 0.9143019956, 0.8818559402),
    (2.2222222222, 1.0904478975, 1.1698292281),
    (2.6666666667, 1.0149601108, 0.8455618392),
    (3.1111111111, 1.1509018038, 1.2354151962),
    (3.5555555556, 1.0943190667, 0.9389122324),
    (4, 0.8815530249, 0.6822186011)
};
//dot(points[0], blue);

pen myPen = red + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9873494003, 0.9487572032),
    (0.4444444444, 0.9734625546, 1.0646654798),
    (0.8888888889, 0.839344374, 0.9918208779),
    (1.3333333333, 1.0642320504, 1.0096651459),
    (1.7777777778, 1.1169072133, 1.1294921715),
    (2.2222222222, 0.9288103895, 1.1127572649),
    (2.6666666667, 1.0485815717, 1.3240536378),
    (3.1111111111, 0.8678767048, 1.0477191909),
    (3.5555555556, 0.9413827913, 0.9404648027),
    (4, 0.9715866736, 1.0696224045)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8483889948, 1.115038352),
    (0.4444444444, 0.9491812897, 1.4512104326),
    (0.8888888889, 1.0128884445, 1.1844798937),
    (1.3333333333, 0.9698802206, 1.2154686596),
    (1.7777777778, 0.9630057322, 1.4286317798),
    (2.2222222222, 0.8759190738, 1.467374633),
    (2.6666666667, 0.9243102128, 1.5778193247),
    (3.1111111111, 0.8771970074, 1.4621480283),
    (3.5555555556, 0.957703578, 1.3914523595),
    (4, 1.0759104007, 1.3772692628)
};
//dot(points[0], blue);

pen myPen = green + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}
