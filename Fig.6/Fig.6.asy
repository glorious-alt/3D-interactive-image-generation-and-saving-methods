import three;
usepackage("esvect");
size(10cm);
currentprojection = perspective(0, -1, 0);
draw(box(O, (4*X + 2*Y + 2*Z)), black);

// 手动绘制 x 轴刻度
for (int i = 1; i <= 10; ++i) {
    draw((i*(4/9)-(4/9), 0, 0)--(i*(4/9)-(4/9), 0, 0.1), black);  // 绘制刻度线
    label("$" + string(i) + "$", ((i-1)*(4/9), 0,-0.1));  // 添加刻度标签
}

// 手动绘制 x 轴刻度
for (int i = 1; i <= 10; ++i) {
    draw((i*(4/9)-(4/9), 0, 0)--(i*(4/9)-(4/9), 0, 0.1), black);  // 绘制刻度线
    label("$" + string(i) + "$", ((i-1)*(4/9), 0,-0.1));  // 添加刻度标签
}


// 添加 x 轴标签
label("$Time$", (2,-0.2,-0.3));
label("$Start\_time$", (-0.8,0.8,-0.2));
label("$Submission$", (-1,0.2,1));

// 定义轨迹点与 x 轴的 10 个点对应

triple[] points = {
    (0, 1.1081053214, 1.1680174306),
    (0.4444444444, 1.0595485882, 1.2859393044),
    (0.8888888889, 0.8089879063, 1.2236553321),
    (1.3333333333, 0.9284232209, 1.1876895938),
    (1.7777777778, 0.8918946786, 0.5187864154),
    (2.2222222222, 0.9102536766, 1.2657499273),
    (2.6666666667, 1.1142746058, 0.8416635922),
    (3.1111111111, 1.6298631491, 1.0406434124),
    (3.5555555556, 1.787589636, 0),
    (4, 0.6860726901, 0.5273705)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1777991043, 0.7989386735),
    (0.4444444444, 1.1204715245, 0.755961689),
    (0.8888888889, 0.9881328913, 1.0593292721),
    (1.3333333333, 1.0958428304, 0.7428772632),
    (1.7777777778, 0.5425964137, 0.5187864154),
    (2.2222222222, 0.9524253441, 1.0655974966),
    (2.6666666667, 0.5187864154, 0.4500918727),
    (3.1111111111, 1.5209243416, 1.1232313502),
    (3.5555555556, 0.7318084089, 0.9163291572),
    (4, 0.7664003613, 0.8650057783)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4141437444, 0.4931132021),
    (0.4444444444, 1.1910120937, 0.6021507957),
    (0.8888888889, 1.3661389652, 0.7629358153),
    (1.3333333333, 1.0595485882, 0.6852275105),
    (1.7777777778, 0.8287335876, 0.8826304984),
    (2.2222222222, 1.4690983238, 0.6937932627),
    (2.6666666667, 0.5755110625, 0.2507601471),
    (3.1111111111, 1.5527638817, 0.9486276129),
    (3.5555555556, 0.5062071281, 0.8639035426),
    (4, 0.6021507957, 0.6067016876)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4937928719, 1.0958428304),
    (0.4444444444, 1.1142746058, 1.7243948116),
    (0.8888888889, 0.8287335876, 1.3565755071),
    (1.3333333333, 1.2320315815, 0.4794452464),
    (1.7777777778, 0.232476943, 0.8826304984),
    (2.2222222222, 0.8857253942, 1.4990659947),
    (2.6666666667, 0.5425964137, 0.9464444491),
    (3.1111111111, 1.216293833, 1.1232313502),
    (3.5555555556, 0.2507601471, 1.2146644526),
    (4, 0.3699515547, 0.5273705)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5205547536, 0.7989386735),
    (0.4444444444, 1.1455717397, 0.467970379),
    (0.8888888889, 1.1712664124, 1.6532978884),
    (1.3333333333, 1.0059328937, 1.5276254792),
    (1.7777777778, 0.8980380465, 1.2571227368),
    (2.2222222222, 1.4460916883, 1.3199549421),
    (2.6666666667, 0.6602533881, 1.1943479843),
    (3.1111111111, 1.23109971, 1.3026602119),
    (3.5555555556, 1.0059328937, 0.9583954939),
    (4, 0.8586782576, 0.6541089557)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3483731883, 1.0958428304),
    (0.4444444444, 1.1019619535, 1.1364195285),
    (0.8888888889, 1.0059328937, 1.1464244022),
    (1.3333333333, 0.7887593284, 1.1392460405),
    (1.7777777778, 0.7243125317, 0.9643562786),
    (2.2222222222, 0.8607539595, 1.3518316261),
    (2.6666666667, 0.5425964137, 1.5136449116),
    (3.1111111111, 1.2697291762, 1.23109971),
    (3.5555555556, 0.1013003807, 1.5348671048),
    (4, 0.1358580679, 1.3471384292)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2181042243, 1.4517019394),
    (0.4444444444, 1.2607898392, 0.8963017747),
    (0.8888888889, 1.3229552183, 1.2657499273),
    (1.3333333333, 1.1266978453, 0.8733021547),
    (1.7777777778, 1, 1.1583364078),
    (2.2222222222, 1.0059328937, 1.5364162319),
    (2.6666666667, 1.0655551847, 1.3527484993),
    (3.1111111111, 1.1875969245, 1.8301269492),
    (3.5555555556, 0.6516268117, 1.6300045071),
    (4, 0.6703190838, 1.2236553321)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3067209471, 1.1876895938),
    (0.4444444444, 1.435129758, 0.8003050892),
    (0.8888888889, 1.0296909368, 1.2053979619),
    (1.3333333333, 0.9464444491, 0.9132939473),
    (1.7777777778, 0.6428330556, 0.6892692082),
    (2.2222222222, 1.1777991043, 0.5328107674),
    (2.6666666667, 0.9762552003, 1.2391024005),
    (3.1111111111, 1.5700967054, 1.5061829653),
    (3.5555555556, 0.8607539595, 0.7243125317),
    (4, 0.8838451809, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4040715568, 1.4751008197),
    (0.4444444444, 1.22503339, 1.2053979619),
    (0.8888888889, 1.0178039682, 1.5983086198),
    (1.3333333333, 1.22503339, 1.264479259),
    (1.7777777778, 0.4931132021, 1.0867060527),
    (2.2222222222, 0.8416635922, 1.435266228),
    (2.6666666667, 0.7818957757, 1.0565504637),
    (3.1111111111, 1.126512999, 1.0406434124),
    (3.5555555556, 0.8857253942, 1.1910120937),
    (4, 0.3514718165, 1.0159490284)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4244889375, 1.2285236371),
    (0.4444444444, 1.5348671048, 0.8003050892),
    (0.8888888889, 1.0897463234, 0.9944807008),
    (1.3333333333, 1.1329553904, 1.1173695016),
    (1.7777777778, 0.564870242, 1.3991314477),
    (2.2222222222, 1.4812135846, 1.665906193),
    (2.6666666667, 0.6246986086, 1.5577329845),
    (3.1111111111, 1.8956630523, 0.3514718165),
    (3.5555555556, 1.1976976108, 1.2832826301),
    (4, 0.5162488282, 1.4593665102)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7012067491, 1.3753013914),
    (0.4444444444, 0.6932790529, 1.3378974644),
    (0.8888888889, 0.8222008957, 1.4531840842),
    (1.3333333333, 0.8795284755, 1.8350708442),
    (1.7777777778, 0.9193594994, 1.1392460405),
    (2.2222222222, 0.9284232209, 1.7812224505),
    (2.6666666667, 0.8980380465, 1.8986996193),
    (3.1111111111, 1.1667619774, 1.0750424818),
    (3.5555555556, 0.9223851651, 1.6633881223),
    (4, 0.3101851109, 1.5285703846)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1329553904, 1.0267171214),
    (0.4444444444, 1.2832826301, 0.6499789124),
    (0.8888888889, 1.0237447997, 1.0593292721),
    (1.3333333333, 0.8023023892, 1.3753013914),
    (1.7777777778, 0.3366118777, 1.1583364078),
    (2.2222222222, 0.9223851651, 0.1794939017),
    (2.6666666667, 0.9940671063, 1.2181042243),
    (3.1111111111, 1.006736303, 1.23109971),
    (3.5555555556, 0.380194228, 1.2607898392),
    (4, 0.4479429594, 1.2053979619)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5348671048, 1.3846675639),
    (0.4444444444, 0.9583954939, 0.2467392461),
    (0.8888888889, 0.9223851651, 1.0468537967),
    (1.3333333333, 1.619805772, 0.380194228),
    (1.7777777778, 0.283190682, 0.6338610348),
    (2.2222222222, 0.8980380465, 0.7489249237),
    (2.6666666667, 0.283190682, 0.9464444491),
    (3.1111111111, 1.3026602119, 0.8330832862),
    (3.5555555556, 0.5858562556, 1.0296909368),
    (4, 0.6112081523, 0.8650057783)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6852275105, 1.2909825899),
    (0.4444444444, 1.0475746559, 0.755961689),
    (0.8888888889, 0.7955605068, 1.2236553321),
    (1.3333333333, 0.9583954939, 0.6008685523),
    (1.7777777778, 0.7818957757, 1.0475746559),
    (2.2222222222, 0.7392101608, 1.1531529172),
    (2.6666666667, 0.399449704, 1.0988994641),
    (3.1111111111, 1.4181972811, 1.4181972811),
    (3.5555555556, 0.5367991317, 1.2426662266),
    (4, 0.7418222679, 1.2859393044)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4460916883, 1.0958428304),
    (0.4444444444, 1.2044394932, 1.513465642),
    (0.8888888889, 1.1843801476, 1.7083204309),
    (1.3333333333, 0.9940671063, 1.2391024005),
    (1.7777777778, 0.6687229368, 1.4460916883),
    (2.2222222222, 0.8156198524, 1.0941068932),
    (2.6666666667, 0.6338610348, 1.0565504637),
    (3.1111111111, 1.25397557, 1.665906193),
    (3.5555555556, 0.4422670155, 1.2607898392),
    (4, 0.583472753, 0.9086905211)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3229552183, 0.7318084089),
    (0.4444444444, 1.3229552183, 0.3787503473),
    (0.8888888889, 1.0715767791, 0.7051939155),
    (1.3333333333, 0.9524253441, 0.8733021547),
    (1.7777777778, 0.7012067491, 0.4259343349),
    (2.2222222222, 0.7955605068, 0.7902656657),
    (2.6666666667, 0.8670446096, 0.9011005359),
    (3.1111111111, 1.0128757674, 1.0098049177),
    (3.5555555556, 0.5367991317, 1.1455717397),
    (4, 0.5929098309, 0.755961689)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3661389652, 0.1901110634),
    (0.4444444444, 1.3397466119, 0.5105604553),
    (0.8888888889, 1.2987932509, 0.2317278291),
    (1.3333333333, 0.9344448153, 0.3243705185),
    (1.7777777778, 0.1013003807, 0.1901110634),
    (2.2222222222, 0.9643562786, 0.3211346897),
    (2.6666666667, 0.4651328952, 0.3366118777),
    (3.1111111111, 1.0624606776, 0.6622742915),
    (3.5555555556, 0.7818957757, 0.7243125317),
    (4, 0.8069414507, 0.6067016876)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2534773751, 1.3616299392),
    (0.4444444444, 0.7679684185, 1.23109971),
    (0.8888888889, 0.7608975995, 1.3243766758),
    (1.3333333333, 0.8287335876, 0.5594311332),
    (1.7777777778, 0.4723745208, 0.77496661),
    (2.2222222222, 0.9940671063, 1.0655974966),
    (2.6666666667, 0.8287335876, 0.8416635922),
    (3.1111111111, 1.2617984034, 0.6622742915),
    (3.5555555556, 0.7167173699, 0.7679684185),
    (4, 0.8003050892, 1.0624606776)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 0.9254063431),
    (0.4444444444, 1.3483731883, 1.544475646),
    (0.8888888889, 1.1519345001, 1.2900693477),
    (1.3333333333, 0.7318084089, 1.1876895938),
    (1.7777777778, 0.7465226249, 0.7280725506),
    (2.2222222222, 0.9821960318, 0.8775875825),
    (2.6666666667, 0.1013003807, 1.2391024005),
    (3.1111111111, 0.9761348674, 1.3199549421),
    (3.5555555556, 0.212410364, 0.9940671063),
    (4, 0.4989094734, 0.7014168885)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3942521925, 1.5577329845),
    (0.4444444444, 1.4937928719, 0.97002413),
    (0.8888888889, 1.3571669444, 1.2386313716),
    (1.3333333333, 0.8980380465, 1.4192808631),
    (1.7777777778, 0.9524253441, 1.3107307918),
    (2.2222222222, 1.5348671048, 1.242431385),
    (2.6666666667, 0.5425964137, 1.2871191509),
    (3.1111111111, 1.5364162319, 0.9883617877),
    (3.5555555556, 0.1649291558, 1.5499081273),
    (4, 0.3316391408, 1.1875969245)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2987932509, 1.1680174306),
    (0.4444444444, 1.7492398529, 0.4265826181),
    (0.8888888889, 1.1976976108, 1.0159490284),
    (1.3333333333, 0.9102536766, 1.0745936569),
    (1.7777777778, 0.7679684185, 0.9254063431),
    (2.2222222222, 1.7492398529, 0.5975540188),
    (2.6666666667, 0.8287335876, 0.7714763629),
    (3.1111111111, 1.2386313716, 1.2818411422),
    (3.5555555556, 0.8670446096, 0.9163291572),
    (4, 0.7200837722, 1.1005198534)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3366118777, 1.0267171214),
    (0.4444444444, 1.1329553904, 0.97002413),
    (0.8888888889, 0.8352203718, 1.031357739),
    (1.3333333333, 0.8544282603, 0.5594311332),
    (1.7777777778, 1.0535555509, 0.6338610348),
    (2.2222222222, 1.0715767791, 1.0159490284),
    (2.6666666667, 0.5858562556, 0.9464444491),
    (3.1111111111, 1.0006050785, 0.7382451684),
    (3.5555555556, 1.5499081273, 0.7243125317),
    (4, 0.4191239185, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 1.2285236371),
    (0.4444444444, 1.6406354152, 0.8963017747),
    (0.8888888889, 1.3483731883, 1.0782030141),
    (1.3333333333, 0.7818957757, 0.8287335876),
    (1.7777777778, 0.1649291558, 0.6338610348),
    (2.2222222222, 1.8350708442, 0.9271724927),
    (2.6666666667, 0.2507601471, 1.1266978453),
    (3.1111111111, 0, 0),
    (3.5555555556, 1.2534773751, 0.232476943),
    (4, 0.4036320282, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4794452464, 0.8857253942),
    (0.4444444444, 0.5755110625, 1.0782030141),
    (0.8888888889, 1.0416045061, 1.4294878048),
    (1.3333333333, 0.8156198524, 1.5914288226),
    (1.7777777778, 0.7608975995, 1.2794723027),
    (2.2222222222, 1.0776148349, 1.4720778811),
    (2.6666666667, 0.7955605068, 2),
    (3.1111111111, 1.0375443884, 1.1232313502),
    (3.5555555556, 1.1519345001, 1.3894315931),
    (4, 1.0251850552, 1.4593665102)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0178039682, 1.2498531951),
    (0.4444444444, 0.9284232209, 1.0782030141),
    (0.8888888889, 1.1647796282, 0.8523240435),
    (1.3333333333, 0.8918946786, 0.6852275105),
    (1.7777777778, 1.0655551847, 1.0685640163),
    (2.2222222222, 1.619805772, 1.0941068932),
    (2.6666666667, 0.9643562786, 1.1647796282),
    (3.1111111111, 1.1134441918, 1.6084091192),
    (3.5555555556, 0.6057478075, 1.6885469045),
    (4, 0.7418222679, 1.1005198534)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4690983238, 1.3067209471),
    (0.4444444444, 1.4460916883, 1.0006050785),
    (0.8888888889, 1.0475746559, 1.8301269492),
    (1.3333333333, 0.9643562786, 1.1392460405),
    (1.7777777778, 0.8795284755, 1.1810834252),
    (2.2222222222, 1.4574035863, 1.5527638817),
    (2.6666666667, 0.7205276973, 1.1266978453),
    (3.1111111111, 1.679210827, 1.1840865711),
    (3.5555555556, 1.6406354152, 0.8287335876),
    (4, 0.8459413668, 0.8869663603)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9643562786, 1.3483731883),
    (0.4444444444, 1.2320315815, 2),
    (0.8888888889, 1.2320315815, 1.6298631491),
    (1.3333333333, 0.7012067491, 1.787589636),
    (1.7777777778, 0.4500918727, 1.3753013914),
    (2.2222222222, 0.8222008957, 2),
    (2.6666666667, 0.380194228, 1.787589636),
    (3.1111111111, 1.1331068094, 2),
    (3.5555555556, 0.6932790529, 1.787589636),
    (4, 0.5328107674, 1.665906193)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3753013914, 0.7318084089),
    (0.4444444444, 1.1976976108, 0.6021507957),
    (0.8888888889, 1.0655551847, 0.4989094734),
    (1.3333333333, 0.8222008957, 0.1901110634),
    (1.7777777778, 0.7955605068, 0.1013003807),
    (2.2222222222, 1.0897463234, 0.7489249237),
    (2.6666666667, 0.8089879063, 0.3366118777),
    (3.1111111111, 1.3862080833, 1.1840865711),
    (3.5555555556, 1.1329553904, 0.5539083117),
    (4, 0.7200837722, 0.7014168885)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6406354152, 0.9583954939),
    (0.4444444444, 1.5068867979, 1.1069649739),
    (0.8888888889, 1.435129758, 1.097309472),
    (1.3333333333, 0.985164875, 0.9494363266),
    (1.7777777778, 0.6008685523, 0.9792261957),
    (2.2222222222, 1.3942521925, 1.4181972811),
    (2.6666666667, 0.8857253942, 1.3188469745),
    (3.1111111111, 1.3662224388, 0.9486276129),
    (3.5555555556, 0.7955605068, 0.9940671063),
    (4, 0.8713083274, 0.6067016876)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.435129758, 1.6300045071),
    (0.4444444444, 1.3067209471, 1.8956630523),
    (0.8888888889, 1.2391024005, 1.5700967054),
    (1.3333333333, 0.77496661, 0.8733021547),
    (1.7777777778, 0.9583954939, 1.0867060527),
    (2.2222222222, 0.6687229368, 1.0655974966),
    (2.6666666667, 0.6811530255, 0.6559603423),
    (3.1111111111, 1.1397431709, 1.23109971),
    (3.5555555556, 0.7887593284, 1.0685640163),
    (4, 0.6373880481, 0.755961689)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9284232209, 0.8384472847),
    (0.4444444444, 0.6729017692, 1.25397557),
    (0.8888888889, 0.9314359837, 1.0468537967),
    (1.3333333333, 0.7955605068, 0.7818957757),
    (1.7777777778, 0.6153324361, 0.9643562786),
    (2.2222222222, 1.5826083822, 1.3333465725),
    (2.6666666667, 0.8287335876, 1.1266978453),
    (3.1111111111, 0.9944807008, 1.2578738582),
    (3.5555555556, 0.3366118777, 1.2756874683),
    (4, 0.6782498566, 0.7014168885)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3571669444, 0.9792261957),
    (0.4444444444, 1.2756874683, 1.1633398827),
    (0.8888888889, 1.1019619535, 1.031357739),
    (1.3333333333, 1.0178039682, 0.6852275105),
    (1.7777777778, 0.8544282603, 0.8826304984),
    (2.2222222222, 0.9762552003, 0.9853039509),
    (2.6666666667, 0.7714763629, 0.8416635922),
    (3.1111111111, 1.4411387867, 0.9486276129),
    (3.5555555556, 0.6338610348, 1.3027420557),
    (4, 0.4614293872, 1.0159490284)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2320315815, 1.0267171214),
    (0.4444444444, 1.2462496544, 1.2053979619),
    (0.8888888889, 1.1392460405, 0.9944807008),
    (1.3333333333, 1.1142746058, 0.6852275105),
    (1.7777777778, 0.8023023892, 0.6338610348),
    (2.2222222222, 0.9404514118, 0.7489249237),
    (2.6666666667, 0.9881328913, 0.6559603423),
    (3.1111111111, 1.2942321987, 0.6622742915),
    (3.5555555556, 0.6153324361, 0.7679684185),
    (4, 0.7594563851, 0.755961689)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 2, 0.5367991317),
    (0.4444444444, 1.8350708442, 0.755961689),
    (0.8888888889, 1.5348671048, 0.6458160614),
    (1.3333333333, 1.1976976108, 1.1876895938),
    (1.7777777778, 1.1081053214, 0.8826304984),
    (2.2222222222, 1.6406354152, 1.4018733017),
    (2.6666666667, 1.0237447997, 0.7714763629),
    (3.1111111111, 1.1464244022, 1.4786188729),
    (3.5555555556, 1.0356437214, 1.4632008683),
    (4, 0.9394431816, 0.5273705)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.619805772, 1.8350708442),
    (0.4444444444, 1.4040715568, 1.3565755071),
    (0.8888888889, 1.2909825899, 1.7417230994),
    (1.3333333333, 0.9163291572, 1.264479259),
    (1.7777777778, 0.8416635922, 0.77496661),
    (2.2222222222, 1.4244889375, 1.7083204309),
    (2.6666666667, 0.4794452464, 1.3527484993),
    (3.1111111111, 1.7417230994, 1.1840865711),
    (3.5555555556, 0.5187864154, 1.2320315815),
    (4, 0.5162488282, 0.9086905211)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5499081273, 1.3067209471),
    (0.4444444444, 1.1519345001, 0.8003050892),
    (0.8888888889, 1.2181042243, 1.3565755071),
    (1.3333333333, 0.7608975995, 1.4751008197),
    (1.7777777778, 0.380194228, 1.014835125),
    (2.2222222222, 1.1976976108, 0.9271724927),
    (2.6666666667, 0.3243705185, 1.2607898392),
    (3.1111111111, 1.0437464854, 1.5527638817),
    (3.5555555556, 0.8918946786, 1.0988994641),
    (4, 0.260837433, 1.1005198534)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1843801476, 0.6293044262),
    (0.4444444444, 1.3312770632, 0.467970379),
    (0.8888888889, 1.1777991043, 0.4989094734),
    (1.3333333333, 0.8670446096, 0.1901110634),
    (1.7777777778, 0.4085711774, 0.5187864154),
    (2.2222222222, 0.9464444491, 1.034449226),
    (2.6666666667, 0.212410364, 0.7714763629),
    (3.1111111111, 1.1736478987, 0.1794939017),
    (3.5555555556, 1.4690983238, 0.6057478075),
    (4, 0.8135352611, 0.5273705)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2391024005, 1.5136449116),
    (0.4444444444, 1.2987932509, 0.9302433424),
    (0.8888888889, 0.8670446096, 0.3787503473),
    (1.3333333333, 1.0715767791, 1.5657800038),
    (1.7777777778, 0.8089879063, 0.8826304984),
    (2.2222222222, 0.8733021547, 1.4990659947),
    (2.6666666667, 0.7537503456, 0.7167173699),
    (3.1111111111, 1.3112315114, 0.9486276129),
    (3.5555555556, 0.6428330556, 1.1204715245),
    (4, 0.5538401768, 0.9086905211)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7243125317, 1.2498531951),
    (0.4444444444, 0.9163291572, 1.679210827),
    (0.8888888889, 0.8480654999, 1.5061829653),
    (1.3333333333, 0.8607539595, 0.9494363266),
    (1.7777777778, 0.5539083117, 0.5858562556),
    (2.2222222222, 0.8795284755, 1.8301269492),
    (2.6666666667, 0.6972579443, 1.1943479843),
    (3.1111111111, 0.5105604553, 1.0750424818),
    (3.5555555556, 0.564870242, 0.9163291572),
    (4, 0.8266040683, 0.936378512)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5425964137, 0.8857253942),
    (0.4444444444, 0.8089879063, 1.6298631491),
    (0.8888888889, 1.1266978453, 1.2657499273),
    (1.3333333333, 0.7679684185, 0.8733021547),
    (1.7777777778, 0.4085711774, 0.8189165748),
    (2.2222222222, 0.7465226249, 1.2657499273),
    (2.6666666667, 0.3243705185, 1.2871191509),
    (3.1111111111, 0.7453820419, 0.8963017747),
    (3.5555555556, 0.4422670155, 1.3527484993),
    (4, 0.1983251607, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7090174101, 0.4259343349),
    (0.4444444444, 1.1647796282, 0.6499789124),
    (0.8888888889, 1.0356437214, 0.6458160614),
    (1.3333333333, 0.8733021547, 0.6293044262),
    (1.7777777778, 0.9102536766, 0.6338610348),
    (2.2222222222, 0.8287335876, 0.8330832862),
    (2.6666666667, 1.0118671087, 0.985164875),
    (3.1111111111, 1.0877242166, 0.8963017747),
    (3.5555555556, 0.7679684185, 0.4931132021),
    (4, 0.8200887508, 0.5273705)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6885469045, 1),
    (0.4444444444, 1.5826083822, 1.0468537967),
    (0.8888888889, 1.5826083822, 1.0782030141),
    (1.3333333333, 1.1204715245, 1.4751008197),
    (1.7777777778, 0.6852275105, 1.3661389652),
    (2.2222222222, 1.5068867979, 0.4614293872),
    (2.6666666667, 0.7887593284, 1.1266978453),
    (3.1111111111, 1.5885764436, 1.5285703846),
    (3.5555555556, 1.3571669444, 1.600550296),
    (4, 0.3872843784, 1.2053979619)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1266978453, 1.4040715568),
    (0.4444444444, 1.619805772, 1.1069649739),
    (0.8888888889, 1.5499081273, 0.8523240435),
    (1.3333333333, 0.9223851651, 1.2078324816),
    (1.7777777778, 0.9762552003, 0.8826304984),
    (2.2222222222, 1.716809318, 1.2053979619),
    (2.6666666667, 1.1329553904, 0.9464444491),
    (3.1111111111, 1.7812224505, 1.3662224388),
    (3.5555555556, 1.8986996193, 1.3527484993),
    (4, 0.9333119571, 1.0624606776)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2044394932, 1.716809318),
    (0.4444444444, 0.9762552003, 1.376094375),
    (0.8888888889, 1.2681915911, 1.4181972811),
    (1.3333333333, 0.8416635922, 1.014835125),
    (1.7777777778, 0.77496661, 1.2571227368),
    (2.2222222222, 0.4173916178, 1.6298631491),
    (2.6666666667, 1, 1.0565504637),
    (3.1111111111, 1.4072374927, 1.665906193),
    (3.5555555556, 0.283190682, 1.1455717397),
    (4, 0.2867503717, 1.4786188729)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0, 1.5136449116),
    (0.4444444444, 1.2391024005, 0.8963017747),
    (0.8888888889, 1.1329553904, 0.8681600685),
    (1.3333333333, 0.7243125317, 1.2987932509),
    (1.7777777778, 0.5309016762, 0.8826304984),
    (2.2222222222, 0.9703090632, 0.7902656657),
    (2.6666666667, 1.0475746559, 1.0565504637),
    (3.1111111111, 1.0941068932, 1.4531840842),
    (3.5555555556, 0.4173916178, 1.4090748391),
    (4, 0.6541089557, 1.0624606776)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5068867979, 1.3067209471),
    (0.4444444444, 1.4812135846, 1.7243948116),
    (0.8888888889, 1.2607898392, 0.8069414507),
    (1.3333333333, 0.8480654999, 1.4192808631),
    (1.7777777778, 0.8156198524, 1.5276254792),
    (2.2222222222, 1.787589636, 0.1794939017),
    (2.6666666667, 0.8156198524, 1.2871191509),
    (3.1111111111, 1.1805918749, 1.1232313502),
    (3.5555555556, 0.5755110625, 0.8857253942),
    (4, 0.5434660666, 0.6541089557)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 0.3243705185),
    (0.4444444444, 1.3571669444, 0.6499789124),
    (0.8888888889, 0.9940671063, 0.97002413),
    (1.3333333333, 0.7465226249, 0.6852275105),
    (1.7777777778, 0.5125577543, 0.8416635922),
    (2.2222222222, 0.8918946786, 1.0159490284),
    (2.6666666667, 0.7608975995, 0.7167173699),
    (3.1111111111, 1.3199549421, 0.3514718165),
    (3.5555555556, 0.7392101608, 0.7955605068),
    (4, 0.7310372, 0.4036320282)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0897463234, 1.264479259),
    (0.4444444444, 1.4244889375, 0.2467392461),
    (0.8888888889, 1.1455717397, 0.4479429594),
    (1.3333333333, 0.8089879063, 0.9821960318),
    (1.7777777778, 0.4342199962, 0.4259343349),
    (2.2222222222, 1.4040715568, 1.034449226),
    (2.6666666667, 1.1266978453, 0.1901110634),
    (3.1111111111, 1.3565755071, 1.1232313502),
    (3.5555555556, 0.6246986086, 0.8639035426),
    (4, 0.911778517, 0.5273705)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0356437214, 0.8575956151),
    (0.4444444444, 0.7318084089, 0.755961689),
    (0.8888888889, 1.1142746058, 0.7629358153),
    (1.3333333333, 0.9041571696, 0.9821960318),
    (1.7777777778, 0.6852275105, 0.77496661),
    (2.2222222222, 0.9881328913, 0.6937932627),
    (2.6666666667, 0.4931132021, 0.564870242),
    (3.1111111111, 1.1199595093, 1.0098049177),
    (3.5555555556, 0.399449704, 1.1204715245),
    (4, 0.6937932627, 0.9669688464)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3147724895, 1.787589636),
    (0.4444444444, 1.6885469045, 1.2053979619),
    (0.8888888889, 1.5205547536, 1.3243766758),
    (1.3333333333, 1.0836708428, 0.9821960318),
    (1.7777777778, 0.6516268117, 0.9464444491),
    (2.2222222222, 1.5205547536, 1.3711292739),
    (2.6666666667, 0.6153324361, 0.8416635922),
    (3.1111111111, 1.6532978884, 1.0406434124),
    (3.5555555556, 0.9643562786, 1.1455717397),
    (4, 0.8395284066, 0.8869663603)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.716809318, 1.264479259),
    (0.4444444444, 1.4690983238, 0.6499789124),
    (0.8888888889, 1.4460916883, 0.4479429594),
    (1.3333333333, 0.7537503456, 1.1647796282),
    (1.7777777778, 0.9193594994, 1.1976976108),
    (2.2222222222, 1.5499081273, 1.1531529172),
    (2.6666666667, 0.8857253942, 1.2607898392),
    (3.1111111111, 1.2236553321, 1.6084091192),
    (3.5555555556, 0.7243125317, 1.5740656651),
    (4, 0.8775875825, 1.2462549974)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9464444491, 0.4259343349),
    (0.4444444444, 0.7955605068, 0.6499789124),
    (0.8888888889, 0.9494363266, 0.829848063),
    (1.3333333333, 0.9404514118, 0.6852275105),
    (1.7777777778, 0.3366118777, 0.7280725506),
    (2.2222222222, 0.8670446096, 0.9271724927),
    (2.6666666667, 0.8857253942, 0.6559603423),
    (3.1111111111, 1.0562030792, 0.7382451684),
    (3.5555555556, 0.4794452464, 0.8287335876),
    (4, 0.4338652948, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5826083822, 0.4259343349),
    (0.4444444444, 1.2681915911, 0.755961689),
    (0.8888888889, 1.22503339, 1.2501028414),
    (1.3333333333, 0.7392101608, 0.6852275105),
    (1.7777777778, 0.8352203718, 0.9254063431),
    (2.2222222222, 0.9583954939, 0.7902656657),
    (2.6666666667, 0.6972579443, 0.1901110634),
    (3.1111111111, 1.5061829653, 1.1840865711),
    (3.5555555556, 0.4651328952, 0.8287335876),
    (4, 0.4868641759, 1.1005198534)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0595485882, 1.2794723027),
    (0.4444444444, 1.1583364078, 0.55892837),
    (0.8888888889, 0.8416635922, 1.1232313502),
    (1.3333333333, 1.0776148349, 0.8287335876),
    (1.7777777778, 0.5125577543, 0.9464444491),
    (2.2222222222, 0.9041571696, 0.5328107674),
    (2.6666666667, 0.6811530255, 1.2871191509),
    (3.1111111111, 1.0499655372, 1.0750424818),
    (3.5555555556, 1.2987932509, 1.1712664124),
    (4, 0.7524513356, 0.1099213108)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2607898392, 0.7318084089),
    (0.4444444444, 0.380194228, 0.97002413),
    (0.8888888889, 0.8918946786, 0.1358580679),
    (1.3333333333, 0, 0),
    (1.7777777778, 0.4723745208, 0.6338610348),
    (2.2222222222, 1.600550296, 0.8330832862),
    (2.6666666667, 0.6008685523, 0.9464444491),
    (3.1111111111, 1.2462549974, 1.7417230994),
    (3.5555555556, 0.6645071899, 0.7955605068),
    (4, 0.6622742915, 0.755961689)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.77496661, 0.8857253942),
    (0.4444444444, 1.0267171214, 0.3787503473),
    (0.8888888889, 0.9404514118, 0.8838451809),
    (1.3333333333, 1.1019619535, 0.6008685523),
    (1.7777777778, 0.9464444491, 0.3482549441),
    (2.2222222222, 0.9344448153, 1.2199644879),
    (2.6666666667, 1.0356437214, 0.8416635922),
    (3.1111111111, 1.3471384292, 0.6622742915),
    (3.5555555556, 0.7537503456, 0.8639035426),
    (4, 0, 0)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9762552003, 1.2044394932),
    (0.4444444444, 0.9102536766, 1.5791815461),
    (0.8888888889, 1.0595485882, 1.1911233364),
    (1.3333333333, 0.9762552003, 0.9494363266),
    (1.7777777778, 0.5755110625, 0.9254063431),
    (2.2222222222, 0.9163291572, 1.3862080833),
    (2.6666666667, 1.0296909368, 1.4460916883),
    (3.1111111111, 1.1069649739, 1.1232313502),
    (3.5555555556, 0.7012067491, 0.8287335876),
    (4, 0.9025038717, 1.3471384292)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.8986996193, 0.8857253942),
    (0.4444444444, 1.600550296, 1.1069649739),
    (0.8888888889, 1.5657800038, 1.2900693477),
    (1.3333333333, 1.0897463234, 0.8733021547),
    (1.7777777778, 1.0416045061, 1.1392460405),
    (2.2222222222, 1.6633881223, 1.1531529172),
    (2.6666666667, 0.9434495363, 0.1013003807),
    (3.1111111111, 2, 1.3662224388),
    (3.5555555556, 2, 1.2146644526),
    (4, 0.8650057783, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2681915911, 1.3312770632),
    (0.4444444444, 1.5657800038, 1.6084091192),
    (0.8888888889, 1.0836708428, 0.9394431816),
    (1.3333333333, 1.0655551847, 0.9494363266),
    (1.7777777778, 0.8857253942, 0.4259343349),
    (2.2222222222, 1.1910120937, 1.5791815461),
    (2.6666666667, 1.0535555509, 1.014835125),
    (3.1111111111, 1.7083204309, 1.2818411422),
    (3.5555555556, 1.5068867979, 1.0296909368),
    (4, 0.6288167486, 0.4036320282)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0776148349, 1.5826083822),
    (0.4444444444, 1.6633881223, 1.0468537967),
    (0.8888888889, 1.0776148349, 0.7051939155),
    (1.3333333333, 1.0178039682, 1.0745936569),
    (1.7777777778, 0.3366118777, 0.7280725506),
    (2.2222222222, 1.5657800038, 0.7489249237),
    (2.6666666667, 0.8416635922, 0.8416635922),
    (3.1111111111, 1.6084091192, 1.1232313502),
    (3.5555555556, 1.8350708442, 1.0296909368),
    (4, 0.5639538851, 0.4036320282)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4812135846, 1.2044394932),
    (0.4444444444, 1.3942521925, 0.5105604553),
    (0.8888888889, 1.2832826301, 0.8838451809),
    (1.3333333333, 1.0178039682, 0.6852275105),
    (1.7777777778, 0.7167173699, 0.8189165748),
    (2.2222222222, 1.1712664124, 0.7489249237),
    (2.6666666667, 0.7714763629, 1.1647796282),
    (3.1111111111, 1.2090110601, 0.9883617877),
    (3.5555555556, 1.0715767791, 1.0296909368),
    (4, 0.6458160614, 1.1633398827)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3312770632, 1.1876895938),
    (0.4444444444, 1.4574035863, 1.2859393044),
    (0.8888888889, 1.3753013914, 0.7382451684),
    (1.3333333333, 1.0535555509, 0.3243705185),
    (1.7777777778, 0.5858562556, 1.0296909368),
    (2.2222222222, 1.4141437444, 1.2859393044),
    (2.6666666667, 0.9072081498, 1.0867060527),
    (3.1111111111, 1.0750424818, 1.3662224388),
    (3.5555555556, 0.8733021547, 1.1910120937),
    (4, 0.7936238579, 0.8650057783)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1647796282, 0.6293044262),
    (0.4444444444, 0.8670446096, 1.1633398827),
    (0.8888888889, 0.9821960318, 0.9394431816),
    (1.3333333333, 0.985164875, 0.380194228),
    (1.7777777778, 0.6246986086, 0.9881328913),
    (2.2222222222, 0.6932790529, 0.8775875825),
    (2.6666666667, 0.4500918727, 1.3188469745),
    (3.1111111111, 1.1599312329, 0.8330832862),
    (3.5555555556, 0.3593645848, 1.3354928101),
    (4, 0.2317278291, 1.1633398827)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9940671063, 2),
    (0.4444444444, 1.3661389652, 1.4411387867),
    (0.8888888889, 1.3147724895, 1.5364162319),
    (1.3333333333, 0.9703090632, 1.3991314477),
    (1.7777777778, 0.6602533881, 1.3107307918),
    (2.2222222222, 1.1583364078, 1.8956630523),
    (2.6666666667, 0.9284232209, 1.3188469745),
    (3.1111111111, 1.0813700025, 1.7083204309),
    (3.5555555556, 1.0296909368, 1.7492398529),
    (4, 0.911778517, 1.3913613433)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5657800038, 1.6633881223),
    (0.4444444444, 1.5205547536, 1.315573629),
    (0.8888888889, 1.5068867979, 0.97002413),
    (1.3333333333, 1.0416045061, 0.1013003807),
    (1.7777777778, 0.8480654999, 0.77496661),
    (2.2222222222, 1.1843801476, 1.2199644879),
    (2.6666666667, 1.0958428304, 0.8416635922),
    (3.1111111111, 1.8301269492, 0.1794939017),
    (3.5555555556, 1.3753013914, 1.0988994641),
    (4, 1.031357739, 1.0159490284)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5062071281, 1.4937928719),
    (0.4444444444, 1.3147724895, 0.467970379),
    (0.8888888889, 0.7167173699, 0.9394431816),
    (1.3333333333, 1.0326664139, 0.9132939473),
    (1.7777777778, 0.7465226249, 0.77496661),
    (2.2222222222, 1.435129758, 0.7489249237),
    (2.6666666667, 0.6008685523, 1.0565504637),
    (3.1111111111, 1.3965821935, 1.0406434124),
    (3.5555555556, 0.7090174101, 0.6559603423),
    (4, 0.7732862827, 0.5273705)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2756874683, 0.9792261957),
    (0.4444444444, 1.1777991043, 0.836309986),
    (0.8888888889, 0.9762552003, 0.97002413),
    (1.3333333333, 1.0326664139, 0.8287335876),
    (1.7777777778, 0.7465226249, 0.5187864154),
    (2.2222222222, 0.7818957757, 1.3518316261),
    (2.6666666667, 0.8544282603, 0.8416635922),
    (3.1111111111, 1.2777739686, 0.9883617877),
    (3.5555555556, 0.7465226249, 1.3706955738),
    (4, 0.7868953429, 0.9914206472)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1019619535, 0.1901110634),
    (0.4444444444, 0.9643562786, 0.8003050892),
    (0.8888888889, 1.0118671087, 0.5434660666),
    (1.3333333333, 1.0475746559, 0.7818957757),
    (1.7777777778, 0.7318084089, 0.283190682),
    (2.2222222222, 1.8986996193, 0.7489249237),
    (2.6666666667, 0.9524253441, 0.564870242),
    (3.1111111111, 1.2859393044, 0.6622742915),
    (3.5555555556, 1.435129758, 0.9940671063),
    (4, 0.5738258213, 0.5273705)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3114530955, 1),
    (0.4444444444, 0.4794452464, 1.5791815461),
    (0.8888888889, 0.7318084089, 1.7812224505),
    (1.3333333333, 1, 1.2391024005),
    (1.7777777778, 0.232476943, 0.9970336357),
    (2.2222222222, 0.7243125317, 0.9853039509),
    (2.6666666667, 0.4173916178, 0.564870242),
    (3.1111111111, 1.1005198534, 0.9486276129),
    (3.5555555556, 0.6645071899, 0.5539083117),
    (4, 0.7801170272, 0.5273705)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.7492398529, 1.4040715568),
    (0.4444444444, 1.4141437444, 0.97002413),
    (0.8888888889, 1.2112406716, 1.4072374927),
    (1.3333333333, 0.8352203718, 1.6885469045),
    (1.7777777778, 0, 1.4751008197),
    (2.2222222222, 1.1204715245, 1.6084091192),
    (2.6666666667, 0, 1.619805772),
    (3.1111111111, 1.4786188729, 1.8956630523),
    (3.5555555556, 0, 1.8350708442),
    (4, 0.1358580679, 1.3471384292)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1204715245, 0.4259343349),
    (0.4444444444, 0.6008685523, 1.1840865711),
    (0.8888888889, 0.399449704, 0.829848063),
    (1.3333333333, 0.6246986086, 1.0475746559),
    (1.7777777778, 1.3846675639, 0.6338610348),
    (2.2222222222, 1.4937928719, 0.5328107674),
    (2.6666666667, 1.0715767791, 0.564870242),
    (3.1111111111, 1.4921053007, 0.3514718165),
    (3.5555555556, 1.4937928719, 0.8287335876),
    (4, 1.5364162319, 0.6541089557)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8023023892, 1.0565504637),
    (0.4444444444, 0.212410364, 0.9486276129),
    (0.8888888889, 0.5539083117, 0.7382451684),
    (1.3333333333, 0.6153324361, 1.014835125),
    (1.7777777778, 0.9344448153, 1.1050305034),
    (2.2222222222, 0.3593645848, 1.1531529172),
    (2.6666666667, 0.9163291572, 0.9011005359),
    (3.1111111111, 0.1983251607, 1.1232313502),
    (3.5555555556, 0.8416635922, 0.9163291572),
    (4, 1.2236553321, 0.936378512)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4651328952, 1.0565504637),
    (0.4444444444, 0.2507601471, 0.836309986),
    (0.8888888889, 0, 0.9944807008),
    (1.3333333333, 0.2507601471, 1.2987932509),
    (1.7777777778, 0.9881328913, 0.9643562786),
    (2.2222222222, 0, 0.9271724927),
    (2.6666666667, 0.1649291558, 1.014835125),
    (3.1111111111, 0.1588258096, 0.9486276129),
    (3.5555555556, 0.7608975995, 0.9583954939),
    (4, 1.2617984034, 0.9669688464)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0416045061, 0.6293044262),
    (0.4444444444, 0.8416635922, 0.8003050892),
    (0.8888888889, 0.4931132021, 1.1667619774),
    (1.3333333333, 0.4651328952, 0.8287335876),
    (1.7777777778, 1.0715767791, 0.8826304984),
    (2.2222222222, 0.7608975995, 0.9271724927),
    (2.6666666667, 0.6687229368, 1.3991314477),
    (3.1111111111, 0.9086905211, 1.6084091192),
    (3.5555555556, 0.8156198524, 1.3706955738),
    (4, 1.2859393044, 1.3913613433)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6932790529, 1.3397466119),
    (0.4444444444, 0.7090174101, 0.6021507957),
    (0.8888888889, 0.7679684185, 0.9944807008),
    (1.3333333333, 0.6008685523, 1.0745936569),
    (1.7777777778, 1.0836708428, 1.2355576796),
    (2.2222222222, 1.0836708428, 1.0655974966),
    (2.6666666667, 0.8480654999, 1.3753013914),
    (3.1111111111, 0.9271724927, 1.3662224388),
    (3.5555555556, 1.5657800038, 1.2146644526),
    (4, 1.5700967054, 1.1875969245)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0535555509, 0.4259343349),
    (0.4444444444, 0.5062071281, 0.8963017747),
    (0.8888888889, 0.3366118777, 0.7868953429),
    (1.3333333333, 0.5187864154, 0.4794452464),
    (1.7777777778, 1.0118671087, 0.6892692082),
    (2.2222222222, 0.4651328952, 0.5975540188),
    (2.6666666667, 0.6516268117, 0.9011005359),
    (3.1111111111, 0.6860726901, 0.1794939017),
    (3.5555555556, 0.9821960318, 0.5539083117),
    (4, 1.5885764436, 1.0624606776)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7818957757, 0.3243705185),
    (0.4444444444, 0.4173916178, 1.0468537967),
    (0.8888888889, 1.3312770632, 0.2317278291),
    (1.3333333333, 0.6687229368, 0.2675841216),
    (1.7777777778, 1.3942521925, 0.77496661),
    (2.2222222222, 0.6057478075, 0.1794939017),
    (2.6666666667, 1.0178039682, 0.4500918727),
    (3.1111111111, 0.6200933179, 0.4868641759),
    (3.5555555556, 1.2112406716, 0.6559603423),
    (4, 1.6532978884, 0.7014168885)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5309016762, 0.7989386735),
    (0.4444444444, 0.399449704, 1.1633398827),
    (0.8888888889, 0.2507601471, 0.829848063),
    (1.3333333333, 0.4651328952, 0.7428772632),
    (1.7777777778, 1.0059328937, 0.8416635922),
    (2.2222222222, 0.4500918727, 0.8330832862),
    (2.6666666667, 0.9434495363, 0.9464444491),
    (3.1111111111, 0.6782498566, 0.4868641759),
    (3.5555555556, 1.0595485882, 0.3243705185),
    (4, 1.23109971, 1.2236553321)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.212410364, 0.6293044262),
    (0.4444444444, 0.564870242, 0),
    (0.8888888889, 0.7537503456, 0.3787503473),
    (1.3333333333, 0.6428330556, 0.7818957757),
    (1.7777777778, 0.9940671063, 0.8189165748),
    (2.2222222222, 0.7537503456, 0),
    (2.6666666667, 1.1204715245, 0.4500918727),
    (3.1111111111, 0.97002413, 0.6622742915),
    (3.5555555556, 1.2756874683, 0.6057478075),
    (4, 1.2462549974, 0.936378512)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9163291572, 1.0565504637),
    (0.4444444444, 2, 0.2467392461),
    (0.8888888889, 0.9102536766, 0.4989094734),
    (1.3333333333, 0.5425964137, 1.0988994641),
    (1.7777777778, 1.4040715568, 0),
    (2.2222222222, 0.1901110634, 0.4036320282),
    (2.6666666667, 0.9703090632, 0.4500918727),
    (3.1111111111, 0, 0),
    (3.5555555556, 1.716809318, 0.4931132021),
    (4, 2, 0.1588258096)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1392460405, 0.6293044262),
    (0.4444444444, 0.7608975995, 0.467970379),
    (0.8888888889, 0.8023023892, 0.9055990341),
    (1.3333333333, 0.7167173699, 0.380194228),
    (1.7777777778, 1.0776148349, 0.283190682),
    (2.2222222222, 1, 0.6937932627),
    (2.6666666667, 1.0595485882, 0.7714763629),
    (3.1111111111, 0.6541089557, 0.5786764305),
    (3.5555555556, 1.4812135846, 0.4173916178),
    (4, 1.679210827, 0.7014168885)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6428330556, 0.7989386735),
    (0.4444444444, 0.6008685523, 1.4294878048),
    (0.8888888889, 0.6892692082, 1.5527638817),
    (1.3333333333, 0.5309016762, 1.0988994641),
    (1.7777777778, 1.1142746058, 0.8416635922),
    (2.2222222222, 0.3114530955, 0.9853039509),
    (2.6666666667, 0.8023023892, 0.7167173699),
    (3.1111111111, 0.6288167486, 0.8963017747),
    (3.5555555556, 0.9284232209, 1.2426662266),
    (4, 1.4181972811, 1.1875969245)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.380194228, 1.1519345001),
    (0.4444444444, 0.1013003807, 1.0190248777),
    (0.8888888889, 0.1013003807, 1.4786188729),
    (1.3333333333, 0.3114530955, 1.0475746559),
    (1.7777777778, 0.7090174101, 1.0475746559),
    (2.2222222222, 0.5755110625, 0.8330832862),
    (2.6666666667, 1.1392460405, 1.014835125),
    (3.1111111111, 0.4479429594, 0.8330832862),
    (3.5555555556, 1.0416045061, 1.3027420557),
    (4, 1.25397557, 1.1364195285)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1583364078, 0.6293044262),
    (0.4444444444, 0.4931132021, 0.8523240435),
    (0.8888888889, 0.9643562786, 1.0159490284),
    (1.3333333333, 0.6516268117, 0.7818957757),
    (1.7777777778, 0.8222008957, 0.564870242),
    (2.2222222222, 0.5539083117, 0.6937932627),
    (2.6666666667, 0.9344448153, 0.7167173699),
    (3.1111111111, 0.4743857496, 0.5786764305),
    (3.5555555556, 1.2462496544, 0.5539083117),
    (4, 1.3965821935, 1.1005198534)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9881328913, 0.6293044262),
    (0.4444444444, 0.5248991803, 0.6499789124),
    (0.8888888889, 0.4794452464, 0.5434660666),
    (1.3333333333, 0.4342199962, 0.4794452464),
    (1.7777777778, 0.9041571696, 1.014835125),
    (2.2222222222, 0.6153324361, 0.3211346897),
    (2.6666666667, 0.7205276973, 0.6559603423),
    (3.1111111111, 1.1531529172, 0.3514718165),
    (3.5555555556, 0.9132939473, 0.6057478075),
    (4, 1.2697291762, 0.8869663603)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1519345001, 0.6293044262),
    (0.4444444444, 0.5539083117, 0.716392928),
    (0.8888888889, 0.6153324361, 0.6703190838),
    (1.3333333333, 0.283190682, 0.4794452464),
    (1.7777777778, 1.0356437214, 0.5187864154),
    (2.2222222222, 0.3366118777, 0.8330832862),
    (2.6666666667, 0.9223851651, 0.564870242),
    (3.1111111111, 0.3872843784, 1.0406434124),
    (3.5555555556, 1.0237447997, 0.6559603423),
    (4, 1.3199549421, 1.315573629)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6153324361, 0.7318084089),
    (0.4444444444, 0.283190682, 0.716392928),
    (0.8888888889, 0.380194228, 0.583472753),
    (1.3333333333, 0.6852275105, 0.8287335876),
    (1.7777777778, 1.0475746559, 0.3482549441),
    (2.2222222222, 0.564870242, 0.3211346897),
    (2.6666666667, 0.7090174101, 0.564870242),
    (3.1111111111, 0.7200837722, 0.5786764305),
    (3.5555555556, 1.2607898392, 0.5539083117),
    (4, 1.6084091192, 0.755961689)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.22503339, 1.4297708742),
    (0.4444444444, 0.8480654999, 0.6021507957),
    (0.8888888889, 1.3067209471, 1.1232313502),
    (1.3333333333, 0.6932790529, 1.1647796282),
    (1.7777777778, 0.9284232209, 1.3312770632),
    (2.2222222222, 0.4931132021, 1.242431385),
    (2.6666666667, 0.7318084089, 1.4460916883),
    (3.1111111111, 0.9025038717, 1.7812224505),
    (3.5555555556, 1.619805772, 1.5740656651),
    (4, 1.7812224505, 1.5885764436)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9583954939, 0.4259343349),
    (0.4444444444, 0.5248991803, 0.9302433424),
    (0.8888888889, 0.5959284432, 0.7629358153),
    (1.3333333333, 0.3366118777, 1.264479259),
    (1.7777777778, 0.8670446096, 1.0475746559),
    (2.2222222222, 0.1013003807, 0.5328107674),
    (2.6666666667, 0.3593645848, 0.7714763629),
    (3.1111111111, 0.2867503717, 0.7382451684),
    (3.5555555556, 0.6770447817, 0.7679684185),
    (4, 1.1331068094, 1.0375443884)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6338610348, 0.7318084089),
    (0.4444444444, 0.1649291558, 1.0468537967),
    (0.8888888889, 0.5755110625, 0.8838451809),
    (1.3333333333, 0.1013003807, 0.8733021547),
    (1.7777777778, 0.8607539595, 0.9254063431),
    (2.2222222222, 0.2507601471, 0.7489249237),
    (2.6666666667, 0.6428330556, 0.4500918727),
    (3.1111111111, 0.260837433, 0.7382451684),
    (3.5555555556, 0.5959284432, 0.7243125317),
    (4, 1.8301269492, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8222008957, 0.8857253942),
    (0.4444444444, 0.9703090632, 1.1069649739),
    (0.8888888889, 0.5309016762, 1.3243766758),
    (1.3333333333, 0.4931132021, 1.435129758),
    (1.7777777778, 0.8733021547, 1.4574035863),
    (2.2222222222, 0.380194228, 0.9271724927),
    (2.6666666667, 0.8733021547, 1.5136449116),
    (3.1111111111, 0.3101851109, 1.23109971),
    (3.5555555556, 0.9132939473, 1.4090748391),
    (4, 1.5527638817, 1.6084091192)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8416635922, 0.1901110634),
    (0.4444444444, 1.1843801476, 0.9486276129),
    (0.8888888889, 0.7428772632, 1.1667619774),
    (1.3333333333, 0.4085711774, 0.8287335876),
    (1.7777777778, 1.0296909368, 0.4259343349),
    (2.2222222222, 0.5425964137, 0.6937932627),
    (2.6666666667, 0.7392101608, 0.6559603423),
    (3.1111111111, 0.6937932627, 0.6622742915),
    (3.5555555556, 0.8287335876, 0.9940671063),
    (4, 1.4921053007, 1.1364195285)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3593645848, 1.3616299392),
    (0.4444444444, 0.77496661, 1.2053979619),
    (0.8888888889, 0.8733021547, 0.6156715843),
    (1.3333333333, 0.380194228, 1.3753013914),
    (1.7777777778, 1.1329553904, 0.8189165748),
    (2.2222222222, 1.6885469045, 0.6458160614),
    (2.6666666667, 1.0806405006, 0.564870242),
    (3.1111111111, 1.4531840842, 0.7801170272),
    (3.5555555556, 1.4574035863, 0.4931132021),
    (4, 1.5209243416, 0.6541089557)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8319825694, 0.6293044262),
    (0.4444444444, 1.0416045061, 0.2467392461),
    (0.8888888889, 1.2756874683, 0.7868953429),
    (1.3333333333, 0.5062071281, 1.1876895938),
    (1.7777777778, 1.1266978453, 1.2181042243),
    (2.2222222222, 0.6428330556, 0.1794939017),
    (2.6666666667, 1.1455717397, 1.3991314477),
    (3.1111111111, 1.4656625104, 0.9486276129),
    (3.5555555556, 1.4141437444, 0.4173916178),
    (4, 0, 0)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8480654999, 0),
    (0.4444444444, 0.3366118777, 0.2467392461),
    (0.8888888889, 0.3114530955, 0.4479429594),
    (1.3333333333, 0.564870242, 0.7428772632),
    (1.7777777778, 0.9703090632, 0.283190682),
    (2.2222222222, 0.5187864154, 0.4614293872),
    (2.6666666667, 0.8607539595, 0.3366118777),
    (3.1111111111, 0.3699515547, 0.4868641759),
    (3.5555555556, 1.0776148349, 0.232476943),
    (4, 1.6298631491, 0.755961689)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1, 0.7989386735),
    (0.4444444444, 0.7465226249, 0.836309986),
    (0.8888888889, 0.7428772632, 0.7051939155),
    (1.3333333333, 0.5858562556, 0.4794452464),
    (1.7777777778, 1.0897463234, 0.5187864154),
    (2.2222222222, 0.5062071281, 0.6458160614),
    (2.6666666667, 1.1081053214, 0.4500918727),
    (3.1111111111, 0.6703190838, 0.5786764305),
    (3.5555555556, 1.0958428304, 0.4931132021),
    (4, 1.4786188729, 0.7014168885)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7608975995, 1.1329553904),
    (0.4444444444, 0.4342199962, 0.8003050892),
    (0.8888888889, 0.5187864154, 0.4479429594),
    (1.3333333333, 0.4651328952, 0.9494363266),
    (1.7777777778, 0.9821960318, 0.6892692082),
    (2.2222222222, 0.5309016762, 0.6458160614),
    (2.6666666667, 0.9821960318, 1.2391024005),
    (3.1111111111, 0.4989094734, 0.3514718165),
    (3.5555555556, 1.3483731883, 0.4173916178),
    (4, 1.7083204309, 0.9669688464)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0655551847, 0.3243705185),
    (0.4444444444, 0.5858562556, 0.716392928),
    (0.8888888889, 0.7243125317, 0.7382451684),
    (1.3333333333, 0.1649291558, 0.7818957757),
    (1.7777777778, 0.9404514118, 0.6892692082),
    (2.2222222222, 0.6338610348, 0.9271724927),
    (2.6666666667, 0.4342199962, 0.9011005359),
    (3.1111111111, 1.376094375, 1.0750424818),
    (3.5555555556, 0.8980380465, 0.9940671063),
    (4, 1.3862080833, 1.1633398827)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0118671087, 0.9254063431),
    (0.4444444444, 0.6153324361, 1.1840865711),
    (0.8888888889, 0.283190682, 1.097309472),
    (1.3333333333, 0.6602533881, 1.1647796282),
    (1.7777777778, 0.7887593284, 1.2794723027),
    (2.2222222222, 0.4342199962, 0.4614293872),
    (2.6666666667, 0.564870242, 0.7167173699),
    (3.1111111111, 0.9210233824, 0.3514718165),
    (3.5555555556, 1.3067209471, 0.6559603423),
    (4, 1.2386313716, 1.0375443884)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4422670155, 1.2285236371),
    (0.4444444444, 0.4500918727, 1.315573629),
    (0.8888888889, 0.5425964137, 1.5209243416),
    (1.3333333333, 0.212410364, 1.8986996193),
    (1.7777777778, 0.6852275105, 2),
    (2.2222222222, 0.1901110634, 1.242431385),
    (2.6666666667, 1.0806405006, 1.787589636),
    (3.1111111111, 0.3417396402, 1.3662224388),
    (3.5555555556, 0.3114530955, 1.716809318),
    (4, 1.216293833, 2)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.2507601471, 0.4931132021),
    (0.4444444444, 0.7167173699, 0.2467392461),
    (0.8888888889, 1.2534773751, 0.2317278291),
    (1.3333333333, 0.7090174101, 0.6293044262),
    (1.7777777778, 0.6338610348, 0.1901110634),
    (2.2222222222, 0.5858562556, 0.3211346897),
    (2.6666666667, 1.0059328937, 0.8416635922),
    (3.1111111111, 1.1946662182, 0.4868641759),
    (3.5555555556, 0.8222008957, 0.9163291572),
    (4, 1.2777739686, 0.4036320282)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0237447997, 0.9583954939),
    (0.4444444444, 0.6729017692, 0.3787503473),
    (0.8888888889, 1.1583364078, 0.5434660666),
    (1.3333333333, 0.4085711774, 0.6852275105),
    (1.7777777778, 1.1204715245, 0.5858562556),
    (2.2222222222, 0.7012067491, 0.7902656657),
    (2.6666666667, 1.0416045061, 1.0988994641),
    (3.1111111111, 0.7524513356, 0.6622742915),
    (3.5555555556, 1.1455717397, 0.8857253942),
    (4, 1.4531840842, 0.1983251607)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8575956151, 0.7318084089),
    (0.4444444444, 0.6246986086, 0.5328107674),
    (0.8888888889, 1.4574035863, 0.3101851109),
    (1.3333333333, 0.3593645848, 0.9821960318),
    (1.7777777778, 1.1455717397, 0.77496661),
    (2.2222222222, 0.7128808491, 0.6458160614),
    (2.6666666667, 1.619805772, 0.9464444491),
    (3.1111111111, 1.4294878048, 0.5786764305),
    (3.5555555556, 1.5205547536, 0.232476943),
    (4, 1.4656625104, 0.2867503717)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4173916178, 1.0565504637),
    (0.4444444444, 1.0267171214, 1.0006050785),
    (0.8888888889, 0.9041571696, 0.9055990341),
    (1.3333333333, 0.8857253942, 1.2391024005),
    (1.7777777778, 1.0958428304, 1.2571227368),
    (2.2222222222, 0.4794452464, 1.1166972102),
    (2.6666666667, 1.1019619535, 0.9011005359),
    (3.1111111111, 0.3417396402, 1.1840865711),
    (3.5555555556, 0.5539083117, 1.2607898392),
    (4, 1.7417230994, 0.6067016876)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7392101608, 1.6300045071),
    (0.4444444444, 0.9041571696, 1.23109971),
    (0.8888888889, 0.7887593284, 1.3565755071),
    (1.3333333333, 0.6770447817, 1.0475746559),
    (1.7777777778, 1.0237447997, 0.9464444491),
    (2.2222222222, 0.6770447817, 0.8775875825),
    (2.6666666667, 0.7465226249, 1.0565504637),
    (3.1111111111, 0.6458160614, 1.4181972811),
    (3.5555555556, 0.6852275105, 1.435129758),
    (4, 1.4072374927, 1.1005198534)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5539083117, 0.9254063431),
    (0.4444444444, 0.3114530955, 0.9302433424),
    (0.8888888889, 0.3593645848, 0.8681600685),
    (1.3333333333, 0.5755110625, 1.014835125),
    (1.7777777778, 0.9643562786, 1.7492398529),
    (2.2222222222, 0.399449704, 0.4036320282),
    (2.6666666667, 0.5062071281, 0.564870242),
    (3.1111111111, 0.7089485501, 0.7382451684),
    (3.5555555556, 0.77496661, 1.0296909368),
    (4, 1.4411387867, 1.4294878048)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7537503456, 1.0267171214),
    (0.4444444444, 0.3593645848, 0),
    (0.8888888889, 0.4577093786, 0.7051939155),
    (1.3333333333, 0.5539083117, 0.8733021547),
    (1.7777777778, 1.0595485882, 1.1204715245),
    (2.2222222222, 0.6246986086, 0.5975540188),
    (2.6666666667, 0.9072081498, 0.985164875),
    (3.1111111111, 0.9394431816, 0.8330832862),
    (3.5555555556, 1.0655551847, 0.7243125317),
    (4, 1.5061829653, 0.755961689)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1142746058, 0.5367991317),
    (0.4444444444, 0.7012067491, 0.4265826181),
    (0.8888888889, 0.4342199962, 0.829848063),
    (1.3333333333, 0.6338610348, 0.9132939473),
    (1.7777777778, 1.0178039682, 1.0867060527),
    (2.2222222222, 0.5959284432, 0.4036320282),
    (2.6666666667, 0.9583954939, 0.564870242),
    (3.1111111111, 0.6622742915, 0.6622742915),
    (3.5555555556, 1.0178039682, 0.8287335876),
    (4, 1.4294878048, 1.1364195285)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6633881223, 1.1329553904),
    (0.4444444444, 0.6602533881, 1.0782030141),
    (0.8888888889, 1.2044394932, 0.6703190838),
    (1.3333333333, 0.6008685523, 0.7428772632),
    (1.7777777778, 1.1019619535, 0.5187864154),
    (2.2222222222, 0.283190682, 0.5328107674),
    (2.6666666667, 1.1647796282, 1.1266978453),
    (3.1111111111, 1.0687399327, 0.8330832862),
    (3.5555555556, 1.4460916883, 0.6559603423),
    (4, 1.8956630523, 0.2867503717)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8670446096, 0.7989386735),
    (0.4444444444, 1.0836708428, 1.1364195285),
    (0.8888888889, 1.600550296, 0.8523240435),
    (1.3333333333, 1.2534773751, 1.0475746559),
    (1.7777777778, 1.6406354152, 1.0475746559),
    (2.2222222222, 1.1329553904, 1.435266228),
    (2.6666666667, 1.5205547536, 1.4874422457),
    (3.1111111111, 0.9455675593, 0.7382451684),
    (3.5555555556, 0.9762552003, 1.0685640163),
    (4, 1.0499655372, 1.4411387867)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9102536766, 0.8384472847),
    (0.4444444444, 1.8986996193, 0.2467392461),
    (0.8888888889, 1.6633881223, 0.3101851109),
    (1.3333333333, 1.3753013914, 1.6633881223),
    (1.7777777778, 1.7492398529, 0.9792261957),
    (2.2222222222, 1.3397466119, 0.8330832862),
    (2.6666666667, 1.8986996193, 0.8416635922),
    (3.1111111111, 0.7310372, 1.1232313502),
    (3.5555555556, 0.9344448153, 0.9163291572),
    (4, 1.1397431709, 0.936378512)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9344448153, 1.0565504637),
    (0.4444444444, 1.1266978453, 0.6860726901),
    (0.8888888889, 0.7818957757, 1.1911233364),
    (1.3333333333, 1.5068867979, 1.3991314477),
    (1.7777777778, 1.5826083822, 1.0867060527),
    (2.2222222222, 1.2462496544, 1.1531529172),
    (2.6666666667, 1.6406354152, 1.3527484993),
    (3.1111111111, 0.8900827229, 0.8963017747),
    (3.5555555556, 0.9940671063, 1.435129758),
    (4, 1.0813700025, 1.5285703846)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6516268117, 1.6885469045),
    (0.4444444444, 0.8156198524, 1.544475646),
    (0.8888888889, 0.8544282603, 1.4921053007),
    (1.3333333333, 1.2462496544, 1.7324158784),
    (1.7777777778, 1.2320315815, 1.787589636),
    (2.2222222222, 0.7887593284, 1.7417230994),
    (2.6666666667, 1.2320315815, 1.619805772),
    (3.1111111111, 0.8330832862, 1.4786188729),
    (3.5555555556, 0.8544282603, 1.6300045071),
    (4, 1.1069649739, 1.8956630523)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6729017692, 0.6293044262),
    (0.4444444444, 1.0655551847, 1.6532978884),
    (0.8888888889, 0.6516268117, 1.3811198901),
    (1.3333333333, 1.3397466119, 1.014835125),
    (1.7777777778, 0.6008685523, 1.3991314477),
    (2.2222222222, 0.77496661, 1.1166972102),
    (2.6666666667, 1.1519345001, 0.6559603423),
    (3.1111111111, 0.4191239185, 0.7382451684),
    (3.5555555556, 1.2181042243, 0.8287335876),
    (4, 0.8900827229, 1.3471384292)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8980380465, 0.9583954939),
    (0.4444444444, 1.0897463234, 1.3565755071),
    (0.8888888889, 0.9583954939, 1.3026602119),
    (1.3333333333, 1.2756874683, 1.3753013914),
    (1.7777777778, 1.6633881223, 1.6633881223),
    (2.2222222222, 1.2607898392, 0.9271724927),
    (2.6666666667, 1.4244889375, 1.0565504637),
    (3.1111111111, 0.4868641759, 0.8330832862),
    (3.5555555556, 1.3846675639, 0.9583954939),
    (4, 1.1805918749, 1.0375443884)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5755110625, 1.4751008197),
    (0.4444444444, 0.8918946786, 1.4126777601),
    (0.8888888889, 0.8795284755, 1.1667619774),
    (1.3333333333, 1.1519345001, 1.2987932509),
    (1.7777777778, 1.2181042243, 1.3527484993),
    (2.2222222222, 0.6852275105, 0.8330832862),
    (2.6666666667, 1.2044394932, 1.7022347854),
    (3.1111111111, 0.8003050892, 1.4181972811),
    (3.5555555556, 0.8023023892, 1.4812135846),
    (4, 1.0006050785, 1.7812224505)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6602533881, 0.6293044262),
    (0.4444444444, 0.6428330556, 0.8963017747),
    (0.8888888889, 1.6406354152, 0.3787503473),
    (1.3333333333, 1.1647796282, 0.4794452464),
    (1.7777777778, 1.8986996193, 0.8826304984),
    (2.2222222222, 1.2534773751, 0.3211346897),
    (2.6666666667, 1.716809318, 0.7714763629),
    (3.1111111111, 0.5929098309, 0.7382451684),
    (3.5555555556, 1.6885469045, 0.4173916178),
    (4, 1.3565755071, 0.4036320282)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1976976108, 0.5367991317),
    (0.4444444444, 0.7887593284, 0.2467392461),
    (0.8888888889, 1.4812135846, 0.3101851109),
    (1.3333333333, 2, 0.5594311332),
    (1.7777777778, 1.3753013914, 0.6892692082),
    (2.2222222222, 1.3753013914, 0.3211346897),
    (2.6666666667, 1.5657800038, 0.9464444491),
    (3.1111111111, 0.7868953429, 0.4868641759),
    (3.5555555556, 1.4244889375, 0.1013003807),
    (4, 1.3112315114, 0.4036320282)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2112406716, 1.0565504637),
    (0.4444444444, 0.8544282603, 1.4126777601),
    (0.8888888889, 1.0958428304, 1.031357739),
    (1.3333333333, 1.2681915911, 1.264479259),
    (1.7777777778, 1.787589636, 1.600550296),
    (2.2222222222, 1.2681915911, 1.4531840842),
    (2.6666666667, 1.3753013914, 1.4244889375),
    (3.1111111111, 1.0190248777, 1.1232313502),
    (3.5555555556, 1.3147724895, 1.3354928101),
    (4, 1.2090110601, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0836708428, 0.7318084089),
    (0.4444444444, 1.3753013914, 1.3862080833),
    (0.8888888889, 1.4040715568, 0.7868953429),
    (1.3333333333, 1.2909825899, 1.4751008197),
    (1.7777777778, 1.5205547536, 1.5740656651),
    (2.2222222222, 0.8089879063, 1.3069274149),
    (2.6666666667, 1.1976976108, 1.2181042243),
    (3.1111111111, 0.9608575988, 1.4411387867),
    (3.5555555556, 1.3397466119, 1.3027420557),
    (4, 1.1946662182, 0.9669688464)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8575956151, 1.1680174306),
    (0.4444444444, 1.3846675639, 1.1069649739),
    (0.8888888889, 1.4141437444, 0.9394431816),
    (1.3333333333, 1.2987932509, 0.9132939473),
    (1.7777777778, 1.2909825899, 1.2355576796),
    (2.2222222222, 0.8480654999, 0.6937932627),
    (2.6666666667, 1.2607898392, 1.1266978453),
    (3.1111111111, 0.7732862827, 0.7382451684),
    (3.5555555556, 0.8089879063, 1.1455717397),
    (4, 0.8963017747, 1.3471384292)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3846675639, 1),
    (0.4444444444, 1.787589636, 0.55892837),
    (0.8888888889, 1.3942521925, 0),
    (1.3333333333, 1.3571669444, 0.6008685523),
    (1.7777777778, 1.1712664124, 0.77496661),
    (2.2222222222, 1.0416045061, 0.5975540188),
    (2.6666666667, 1.1910120937, 0.985164875),
    (3.1111111111, 1.2018030917, 0.6622742915),
    (3.5555555556, 1.1266978453, 0.7243125317),
    (4, 1.3471384292, 0.2317278291)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7887593284, 1.600550296),
    (0.4444444444, 0.8670446096, 1.25397557),
    (0.8888888889, 0.6338610348, 1.0782030141),
    (1.3333333333, 1.1455717397, 1.2987932509),
    (1.7777777778, 1.22503339, 1.4192808631),
    (2.2222222222, 1.0237447997, 1.5791815461),
    (2.6666666667, 1.2987932509, 1.619805772),
    (3.1111111111, 0.7594563851, 1.3662224388),
    (3.5555555556, 1.5348671048, 1.0685640163),
    (4, 1.3026602119, 1.4126777601)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.600550296, 1.2285236371),
    (0.4444444444, 1.1392460405, 0.55892837),
    (0.8888888889, 0.77496661, 0.6156715843),
    (1.3333333333, 1.4040715568, 1.0988994641),
    (1.7777777778, 1.3397466119, 1.1583364078),
    (2.2222222222, 1.0118671087, 0.4614293872),
    (2.6666666667, 1.2681915911, 1.014835125),
    (3.1111111111, 0.8200887508, 0.4868641759),
    (3.5555555556, 1.2391024005, 0.6852275105),
    (4, 1.006736303, 0.2867503717)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 1.1680174306),
    (0.4444444444, 1.0535555509, 1.3565755071),
    (0.8888888889, 1.3846675639, 1.8956630523),
    (1.3333333333, 1.4141437444, 1.0745936569),
    (1.7777777778, 1.4574035863, 1.7022347854),
    (2.2222222222, 0.7318084089, 1.3333465725),
    (2.6666666667, 1.2391024005, 1.1266978453),
    (3.1111111111, 0.5639538851, 0.8963017747),
    (3.5555555556, 1.0475746559, 1.3027420557),
    (4, 1.0750424818, 0.936378512)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1455717397, 0.7318084089),
    (0.4444444444, 0.8857253942, 0.97002413),
    (0.8888888889, 0.9163291572, 1.1232313502),
    (1.3333333333, 1.600550296, 1.3312770632),
    (1.7777777778, 1.619805772, 0.4259343349),
    (2.2222222222, 1.0958428304, 1.0941068932),
    (2.6666666667, 1.4574035863, 1.0867060527),
    (3.1111111111, 0.8395284066, 0.8330832862),
    (3.5555555556, 1.1142746058, 1.0685640163),
    (4, 0.7014168885, 1.1633398827)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1649291558, 1.0958428304),
    (0.4444444444, 0.8795284755, 0.8650057783),
    (0.8888888889, 0.7090174101, 0.6703190838),
    (1.3333333333, 1.1843801476, 1.2078324816),
    (1.7777777778, 1.2534773751, 1.1810834252),
    (2.2222222222, 1.3661389652, 1.1531529172),
    (2.6666666667, 1.600550296, 0.9464444491),
    (3.1111111111, 0.2317278291, 1.3199549421),
    (3.5555555556, 1.5826083822, 1.1712664124),
    (4, 1.1875969245, 1.315573629)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7167173699, 0.8575956151),
    (0.4444444444, 0.6516268117, 1.4921053007),
    (0.8888888889, 0.7012067491, 0.8069414507),
    (1.3333333333, 1.6406354152, 1.0988994641),
    (1.7777777778, 1.1583364078, 1.4192808631),
    (2.2222222222, 0.6602533881, 1.2777739686),
    (2.6666666667, 1.0897463234, 1.2607898392),
    (3.1111111111, 0.8838451809, 0.8963017747),
    (3.5555555556, 1.1392460405, 1.0685640163),
    (4, 1.0687399327, 0.9914206472)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9404514118, 0.9254063431),
    (0.4444444444, 1.0715767791, 1.25397557),
    (0.8888888889, 0.8857253942, 1.1232313502),
    (1.3333333333, 1.5348671048, 1.5276254792),
    (1.7777777778, 1.2987932509, 1.5499081273),
    (2.2222222222, 1.22503339, 0.9853039509),
    (2.6666666667, 1.4040715568, 1.3527484993),
    (3.1111111111, 0.4614293872, 0.8963017747),
    (3.5555555556, 0.9404514118, 1.4937928719),
    (4, 1.0624606776, 1.2462549974)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6246986086, 1.0958428304),
    (0.4444444444, 1, 1.0468537967),
    (0.8888888889, 1.4244889375, 1.3965821935),
    (1.3333333333, 1.2112406716, 2),
    (1.7777777778, 1.1777991043, 1.619805772),
    (2.2222222222, 1.2320315815, 1.4018733017),
    (2.6666666667, 1.2756874683, 0.7714763629),
    (3.1111111111, 0.8135352611, 0.9486276129),
    (3.5555555556, 0.9583954939, 1.1204715245),
    (4, 1.0562030792, 0.6541089557)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8795284755, 0.1901110634),
    (0.4444444444, 1.2909825899, 0.6021507957),
    (0.8888888889, 1.4937928719, 0.6156715843),
    (1.3333333333, 1.8986996193, 0.7818957757),
    (1.7777777778, 1.2756874683, 0.9970336357),
    (2.2222222222, 1.2987932509, 0.6458160614),
    (2.6666666667, 1.4460916883, 0.3366118777),
    (3.1111111111, 0.5538401768, 0.9486276129),
    (3.5555555556, 1.1204715245, 0.6057478075),
    (4, 1.3288401077, 1.4990659947)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 1.7492398529),
    (0.4444444444, 1.1712664124, 1.2859393044),
    (0.8888888889, 0.6602533881, 1.4531840842),
    (1.3333333333, 1.3942521925, 1.5499081273),
    (1.7777777778, 1.4141437444, 1.8350708442),
    (2.2222222222, 1.3229552183, 0.5975540188),
    (2.6666666667, 1.4937928719, 1.4874422457),
    (3.1111111111, 0.8266040683, 1.23109971),
    (3.5555555556, 0.8480654999, 1.435129758),
    (4, 1.1199595093, 1.4126777601)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1910120937, 1.0958428304),
    (0.4444444444, 1.2534773751, 0.755961689),
    (0.8888888889, 1.4690983238, 0.9944807008),
    (1.3333333333, 1.716809318, 0.9494363266),
    (1.7777777778, 1.2044394932, 1.3527484993),
    (2.2222222222, 1.2181042243, 0.9853039509),
    (2.6666666667, 1.8350708442, 0.6559603423),
    (3.1111111111, 0.7382451684, 0.3514718165),
    (3.5555555556, 1.4040715568, 1.2146644526),
    (4, 1.3378974644, 0.4036320282)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1013003807, 1.5348671048),
    (0.4444444444, 0.9821960318, 1.3026602119),
    (0.8888888889, 0.6428330556, 1.5983086198),
    (1.3333333333, 1.2607898392, 1.6300045071),
    (1.7777777778, 1.2607898392, 1.014835125),
    (2.2222222222, 0.7128808491, 0.8330832862),
    (2.6666666667, 1.2112406716, 0.7167173699),
    (3.1111111111, 0.9516864724, 0.4868641759),
    (3.5555555556, 1.0836708428, 0.7818957757),
    (4, 0.9210233824, 1.5612979128)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4422670155, 0.6293044262),
    (0.4444444444, 0.9223851651, 1.0190248777),
    (0.8888888889, 1.1910120937, 1.2777739686),
    (1.3333333333, 1.1081053214, 1.7324158784),
    (1.7777777778, 1.2391024005, 1.7022347854),
    (2.2222222222, 1.0535555509, 1.665906193),
    (2.6666666667, 1.2181042243, 1.5348671048),
    (3.1111111111, 0.1099213108, 1.5700967054),
    (3.5555555556, 0.4931132021, 1.5205547536),
    (4, 0.4743857496, 1.7083204309)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5187864154, 0.3243705185),
    (0.4444444444, 0.5425964137, 1.0006050785),
    (0.8888888889, 0.6246986086, 0.9055990341),
    (1.3333333333, 1.1712664124, 0.4794452464),
    (1.7777777778, 1.4244889375, 1.5068867979),
    (2.2222222222, 1.2044394932, 0.9271724927),
    (2.6666666667, 1.6633881223, 1.014835125),
    (3.1111111111, 0.4338652948, 0.8330832862),
    (3.5555555556, 1, 0.7243125317),
    (4, 0.6200933179, 1.2657499273)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.283190682, 0.7989386735),
    (0.4444444444, 1.0059328937, 0.8650057783),
    (0.8888888889, 0.4577093786, 0.583472753),
    (1.3333333333, 1.3067209471, 0.9132939473),
    (1.7777777778, 1.600550296, 1.1204715245),
    (2.2222222222, 1.2909825899, 0.5328107674),
    (2.6666666667, 1.3942521925, 0.6559603423),
    (3.1111111111, 0.8713083274, 0.8330832862),
    (3.5555555556, 1.2832826301, 0.9583954939),
    (4, 1.0877242166, 0.6067016876)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.399449704, 1.1329553904),
    (0.4444444444, 0.9911002466, 1.2697291762),
    (0.8888888889, 0.9703090632, 0.9394431816),
    (1.3333333333, 1.3661389652, 1.2215603965),
    (1.7777777778, 1.3147724895, 1.1050305034),
    (2.2222222222, 1.0356437214, 1.3711292739),
    (2.6666666667, 1.2832826301, 1.1943479843),
    (3.1111111111, 0.521850979, 0.8330832862),
    (3.5555555556, 0.9703090632, 0.7955605068),
    (4, 1.0437464854, 1.3026602119)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2462496544, 0.7318084089),
    (0.4444444444, 1.0958428304, 0.9302433424),
    (0.8888888889, 1.7492398529, 0.6458160614),
    (1.3333333333, 1.4812135846, 1.1392460405),
    (1.7777777778, 1.4460916883, 1.1204715245),
    (2.2222222222, 1.1019619535, 1.1875969245),
    (2.6666666667, 1.5348671048, 1.4460916883),
    (3.1111111111, 0.9608575988, 1.1840865711),
    (3.5555555556, 1.1712664124, 0.7243125317),
    (4, 1.1531529172, 1.1005198534)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9524253441, 0.9254063431),
    (0.4444444444, 0, 1.1633398827),
    (0.8888888889, 1.6885469045, 0.5434660666),
    (1.3333333333, 1.7492398529, 1.3527484993),
    (1.7777777778, 2, 0.8826304984),
    (2.2222222222, 2, 0.4614293872),
    (2.6666666667, 2, 0.564870242),
    (3.1111111111, 1.3288401077, 0.1794939017),
    (3.5555555556, 1.7492398529, 0.232476943),
    (4, 1.376094375, 0.4036320282)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4931132021, 0.7318084089),
    (0.4444444444, 0.8670446096, 0.716392928),
    (0.8888888889, 1, 0.583472753),
    (1.3333333333, 1.1392460405, 1.014835125),
    (1.7777777778, 1.3571669444, 0.6892692082),
    (2.2222222222, 1.0595485882, 0.9271724927),
    (2.6666666667, 1.2909825899, 0.9011005359),
    (3.1111111111, 0.5434660666, 1.0098049177),
    (3.5555555556, 1.0118671087, 0.9583954939),
    (4, 0.8523240435, 1.1364195285)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8733021547, 1.1329553904),
    (0.4444444444, 0.7537503456, 1.0190248777),
    (0.8888888889, 1.1081053214, 0.9394431816),
    (1.3333333333, 1.5657800038, 1.2215603965),
    (1.7777777778, 1.2462496544, 1.1810834252),
    (2.2222222222, 1.0475746559, 0.9853039509),
    (2.6666666667, 1.1843801476, 0.8416635922),
    (3.1111111111, 0.9333119571, 0.3514718165),
    (3.5555555556, 1.1777991043, 1.1455717397),
    (4, 1.0190248777, 1.0624606776)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8089879063, 1.1329553904),
    (0.4444444444, 0.9464444491, 1.23109971),
    (0.8888888889, 1.8986996193, 0.4479429594),
    (1.3333333333, 1.787589636, 0.9132939473),
    (1.7777777778, 1.4937928719, 1.1810834252),
    (2.2222222222, 0.6516268117, 1.242431385),
    (2.6666666667, 1.1712664124, 1.787589636),
    (3.1111111111, 0.6021507957, 1.3662224388),
    (3.5555555556, 1.2320315815, 1.3894315931),
    (4, 0.7089485501, 1.8301269492)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8156198524, 0.6293044262),
    (0.4444444444, 0.7243125317, 0.8963017747),
    (0.8888888889, 1.716809318, 0.8069414507),
    (1.3333333333, 1.5205547536, 0.4794452464),
    (1.7777777778, 1.6885469045, 0.5858562556),
    (2.2222222222, 1.3846675639, 0.8330832862),
    (2.6666666667, 1.3147724895, 0.8416635922),
    (3.1111111111, 0.8775875825, 0.3514718165),
    (3.5555555556, 1.1910120937, 0.3243705185),
    (4, 0.9944807008, 0.8869663603)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2832826301, 1.2794723027),
    (0.4444444444, 1.5499081273, 1.4720778811),
    (0.8888888889, 1.0535555509, 1.3811198901),
    (1.3333333333, 1.4244889375, 1.6300045071),
    (1.7777777778, 1.3229552183, 1.6406354152),
    (2.2222222222, 1.1142746058, 1.1166972102),
    (2.6666666667, 1.3661389652, 1.6633881223),
    (3.1111111111, 0.5738258213, 1.5285703846),
    (3.5555555556, 0.8352203718, 1.8986996193),
    (4, 0.9822469657, 1.6298631491)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3397466119, 0.8857253942),
    (0.4444444444, 1.0118671087, 0.8003050892),
    (0.8888888889, 0.8607539595, 1.3243766758),
    (1.3333333333, 1.8350708442, 0.2675841216),
    (1.7777777778, 1.3661389652, 1.014835125),
    (2.2222222222, 1.1647796282, 1.0655974966),
    (2.6666666667, 1.5826083822, 0.7714763629),
    (3.1111111111, 1.0251850552, 0.5786764305),
    (3.5555555556, 1.6633881223, 0.4173916178),
    (4, 1.2018030917, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0715767791, 1),
    (0.4444444444, 0.8352203718, 0.3787503473),
    (0.8888888889, 0.4173916178, 1.2501028414),
    (1.3333333333, 1.4460916883, 0.5594311332),
    (1.7777777778, 1.1647796282, 1.4937928719),
    (2.2222222222, 0.8544282603, 0.5328107674),
    (2.6666666667, 1.3067209471, 0.564870242),
    (3.1111111111, 0.7014168885, 0.4868641759),
    (3.5555555556, 1.2044394932, 0.3593645848),
    (4, 0.97002413, 0.755961689)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0059328937, 0.7989386735),
    (0.4444444444, 0.9344448153, 0.5105604553),
    (0.8888888889, 1.2462496544, 0.9055990341),
    (1.3333333333, 1.2391024005, 0.6852275105),
    (1.7777777778, 1.2681915911, 1.5276254792),
    (2.2222222222, 1.1519345001, 0.6937932627),
    (2.6666666667, 1.3483731883, 0.7167173699),
    (3.1111111111, 0.8523240435, 0.9486276129),
    (3.5555555556, 1.1081053214, 0.6559603423),
    (4, 1.0128757674, 1.2859393044)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5909251609, 1.4297708742),
    (0.4444444444, 0.8287335876, 1.3965821935),
    (0.8888888889, 1.787589636, 0.3787503473),
    (1.3333333333, 1.5499081273, 1.3312770632),
    (1.7777777778, 1.8350708442, 1.3312770632),
    (2.2222222222, 1.3312770632, 1.3069274149),
    (2.6666666667, 1.5499081273, 1.3188469745),
    (3.1111111111, 0.583472753, 1.3199549421),
    (3.5555555556, 1.1019619535, 1.3229552183),
    (4, 1.1667619774, 1.0159490284)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7679684185, 0.9583954939),
    (0.4444444444, 0.6852275105, 1.4720778811),
    (0.8888888889, 0.5062071281, 0.7051939155),
    (1.3333333333, 1.1910120937, 0.8287335876),
    (1.7777777778, 1.4812135846, 1.2571227368),
    (2.2222222222, 1.2391024005, 1.1166972102),
    (2.6666666667, 1.1583364078, 1.5826083822),
    (3.1111111111, 0.8069414507, 1.0750424818),
    (3.5555555556, 0.9464444491, 1.0988994641),
    (4, 0.9455675593, 1.2236553321)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.5577329845),
    (0.4444444444, 0.8980380465, 1.7812224505),
    (0.8888888889, 0.9494363266, 0.6156715843),
    (1.3333333333, 1.5826083822, 1.4751008197),
    (1.7777777778, 1.716809318, 1.4751008197),
    (2.2222222222, 1.3571669444, 1.2053979619),
    (2.6666666667, 1.787589636, 0.8416635922),
    (3.1111111111, 0.9148632049, 1.2578738582),
    (3.5555555556, 1.22503339, 2),
    (4, 1.1464244022, 0.6067016876)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7465226249, 0.8384472847),
    (0.4444444444, 0.8023023892, 0.716392928),
    (0.8888888889, 0.6892692082, 1.1667619774),
    (1.3333333333, 1.4574035863, 1.2987932509),
    (1.7777777778, 1.1519345001, 1.1392460405),
    (2.2222222222, 0.7679684185, 1.4720778811),
    (2.6666666667, 1.2534773751, 1.7022347854),
    (3.1111111111, 0.7801170272, 1.0098049177),
    (3.5555555556, 0.9524253441, 1.4632008683),
    (4, 0.9516864724, 1.5612979128)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2909825899, 0.6293044262),
    (0.4444444444, 0.9524253441, 0.8963017747),
    (0.8888888889, 0.9314359837, 0.7051939155),
    (1.3333333333, 1.6633881223, 1.1173695016),
    (1.7777777778, 1.435129758, 1.3312770632),
    (2.2222222222, 1.0296909368, 1.0655974966),
    (2.6666666667, 1.6885469045, 0.4500918727),
    (3.1111111111, 1.031357739, 0.6622742915),
    (3.5555555556, 1.3312770632, 0.7243125317),
    (4, 1.2942321987, 0.5273705)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1712664124, 0.8857253942),
    (0.4444444444, 0.9404514118, 1.0468537967),
    (0.8888888889, 0.8980380465, 1.1232313502),
    (1.3333333333, 1.3846675639, 1.1392460405),
    (1.7777777778, 1.1843801476, 1.2044394932),
    (2.2222222222, 1.0655551847, 1.034449226),
    (2.6666666667, 1.2462496544, 1.014835125),
    (3.1111111111, 0.6373880481, 1.0406434124),
    (3.5555555556, 1.1843801476, 0.9583954939),
    (4, 1.0375443884, 1.2859393044)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.787589636, 0.7318084089),
    (0.4444444444, 0.9911002466, 0.836309986),
    (0.8888888889, 0.1649291558, 1.1667619774),
    (1.3333333333, 1.2832826301, 1.5914288226),
    (1.7777777778, 1.3067209471, 1.3846675639),
    (2.2222222222, 1.2756874683, 0.8775875825),
    (2.6666666667, 1.435129758, 1.1647796282),
    (3.1111111111, 0.8586782576, 1.2818411422),
    (3.5555555556, 1.1583364078, 1.0296909368),
    (4, 0.9883617877, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6729017692, 1.2044394932),
    (0.4444444444, 0.7392101608, 0.8650057783),
    (0.8888888889, 0.8156198524, 1.2053979619),
    (1.3333333333, 1.2181042243, 0.6008685523),
    (1.7777777778, 1.5499081273, 1.22503339),
    (2.2222222222, 1.1455717397, 1.2942321987),
    (2.6666666667, 1.3571669444, 1.3991314477),
    (3.1111111111, 0.7936238579, 0.5786764305),
    (3.5555555556, 1.3942521925, 1.0988994641),
    (4, 1.1005198534, 1.2657499273)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9041571696, 0.9583954939),
    (0.4444444444, 0.4651328952, 0.6860726901),
    (0.8888888889, 0.5858562556, 1.4531840842),
    (1.3333333333, 1.3483731883, 1.014835125),
    (1.7777777778, 1.4690983238, 1.2948736975),
    (2.2222222222, 1.3067209471, 1.1875969245),
    (2.6666666667, 1.3397466119, 1.3991314477),
    (3.1111111111, 0.7200837722, 0.8330832862),
    (3.5555555556, 1.1647796282, 0.8639035426),
    (4, 1.0941068932, 1.2462549974)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9703090632, 0.8384472847),
    (0.4444444444, 1.2181042243, 1.513465642),
    (0.8888888889, 1.3397466119, 1.1232313502),
    (1.3333333333, 1.2044394932, 1.3312770632),
    (1.7777777778, 1.2112406716, 1.2112406716),
    (2.2222222222, 1.1266978453, 1.1875969245),
    (2.6666666667, 1.7492398529, 0.3366118777),
    (3.1111111111, 1.3378974644, 0.7801170272),
    (3.5555555556, 1.600550296, 1.1712664124),
    (4, 0.9578012944, 0.8200887508)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8319825694, 0.4931132021),
    (0.4444444444, 1.1081053214, 1.1364195285),
    (0.8888888889, 0.6687229368, 0.9394431816),
    (1.3333333333, 1.1777991043, 0.7818957757),
    (1.7777777778, 1.1910120937, 1.0685640163),
    (2.2222222222, 0.8352203718, 1.1531529172),
    (2.6666666667, 1.1777991043, 1.4690983238),
    (3.1111111111, 0.7664003613, 0.7801170272),
    (3.5555555556, 1.2681915911, 0.4931132021),
    (4, 1.126512999, 0.9914206472)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0475746559, 1),
    (0.4444444444, 1.0178039682, 1.3288401077),
    (0.8888888889, 0.6770447817, 0.7629358153),
    (1.3333333333, 1.3229552183, 0.9821960318),
    (1.7777777778, 1.5348671048, 0.7280725506),
    (2.2222222222, 1.1392460405, 0.9271724927),
    (2.6666666667, 1.4141437444, 1.2181042243),
    (3.1111111111, 0.8650057783, 0.4868641759),
    (3.5555555556, 1.0535555509, 0.6057478075),
    (4, 1.1134441918, 0.936378512)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9821960318, 1.4517019394),
    (0.4444444444, 1.0356437214, 1.8301269492),
    (0.8888888889, 0.6057478075, 1.679210827),
    (1.3333333333, 1.4690983238, 1.4751008197),
    (1.7777777778, 1.5068867979, 1.8986996193),
    (2.2222222222, 1.1081053214, 1.5209243416),
    (2.6666666667, 1.4690983238, 1.5577329845),
    (3.1111111111, 0.8963017747, 1.2818411422),
    (3.5555555556, 1.3229552183, 1.5068867979),
    (4, 1.1736478987, 1.7417230994)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.564870242, 0.9254063431),
    (0.4444444444, 1.2112406716, 0.6860726901),
    (0.8888888889, 1.8350708442, 0.5434660666),
    (1.3333333333, 1.6885469045, 0.4794452464),
    (1.7777777778, 1.2832826301, 0.77496661),
    (2.2222222222, 1.3483731883, 0.5975540188),
    (2.6666666667, 1.4812135846, 0.985164875),
    (3.1111111111, 0.8459413668, 0.8330832862),
    (3.5555555556, 1.2909825899, 1.0296909368),
    (4, 0.8330832862, 0.7014168885)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6057478075, 1.8986996193),
    (0.4444444444, 0.7818957757, 1.1364195285),
    (0.8888888889, 0.212410364, 2),
    (1.3333333333, 1.1583364078, 1.3527484993),
    (1.7777777778, 1.1392460405, 1.5740656651),
    (2.2222222222, 1.0178039682, 1.034449226),
    (2.6666666667, 1.22503339, 1.1647796282),
    (3.1111111111, 0.6112081523, 1.4786188729),
    (3.5555555556, 0.9041571696, 1.0685640163),
    (4, 0.9639133927, 1.665906193)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7955605068, 1.0958428304),
    (0.4444444444, 0.6338610348, 1.4531840842),
    (0.8888888889, 0.564870242, 1.2236553321),
    (1.3333333333, 1.3312770632, 1.4751008197),
    (1.7777777778, 1.1976976108, 1.2948736975),
    (2.2222222222, 0.8023023892, 0.8775875825),
    (2.6666666667, 1.3846675639, 1.1943479843),
    (3.1111111111, 0.5328107674, 0.8330832862),
    (3.5555555556, 0.9881328913, 0.9163291572),
    (4, 0.9761348674, 1.4990659947)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.8350708442, 0.5367991317),
    (0.4444444444, 1.716809318, 0.55892837),
    (0.8888888889, 2, 0),
    (1.3333333333, 1.3147724895, 0.6852275105),
    (1.7777777778, 1.5657800038, 0.4259343349),
    (2.2222222222, 1.2832826301, 0),
    (2.6666666667, 1.5068867979, 0),
    (3.1111111111, 0.9822469657, 0.5786764305),
    (3.5555555556, 1.3661389652, 0.9583954939),
    (4, 1.1599312329, 0.9914206472)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8918946786, 1.4040715568),
    (0.4444444444, 1.0776148349, 1.0782030141),
    (0.8888888889, 1.619805772, 1.0782030141),
    (1.3333333333, 1.435129758, 1.1392460405),
    (1.7777777778, 1.3312770632, 1.435129758),
    (2.2222222222, 1.2112406716, 0.9853039509),
    (2.6666666667, 1.3229552183, 1.0565504637),
    (3.1111111111, 0.9883617877, 1.1840865711),
    (3.5555555556, 1.0897463234, 1.1910120937),
    (4, 0.9271724927, 1.376094375)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5909251609, 1.3229552183),
    (0.4444444444, 0.8222008957, 0.9883617877),
    (0.8888888889, 1.1204715245, 0.1358580679),
    (1.3333333333, 1.4937928719, 1.0475746559),
    (1.7777777778, 1.3483731883, 1.0475746559),
    (2.2222222222, 1.3147724895, 0.9853039509),
    (2.6666666667, 1.3312770632, 1.1647796282),
    (3.1111111111, 0.4036320282, 1.1840865711),
    (3.5555555556, 0.8795284755, 0.8857253942),
    (4, 1.3662224388, 0.4036320282)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}

triple[] points = {
    (0, 1.2854397427, 1.1398517463),
    (0.4444444444, 1.2733268812, 0.9857076584),
    (0.8888888889, 1.1557396377, 1.0656479268),
    (1.3333333333, 0.9393020419, 0.9612800867),
    (1.7777777778, 0.6900620298, 0.9143019956),
    (2.2222222222, 1.1934008289, 1.0904478975),
    (2.6666666667, 0.7584776399, 1.0149601108),
    (3.1111111111, 1.3180074396, 1.1509018038),
    (3.5555555556, 0.8518135315, 1.0943190667),
    (4, 0.6302129543, 0.8815530249)
};
//dot(points[0], blue);

pen myPen = red + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9273165145, 0.9873494003),
    (0.4444444444, 0.9746252019, 0.9734625546),
    (0.8888888889, 1.0767103836, 0.839344374),
    (1.3333333333, 1.276937098, 1.0642320504),
    (1.7777777778, 1.3901234817, 1.1169072133),
    (2.2222222222, 1.1136905632, 0.9288103895),
    (2.6666666667, 1.3830972964, 1.0485815717),
    (3.1111111111, 0.8135681186, 0.8678767048),
    (3.5555555556, 1.229548816, 0.9413827913),
    (4, 1.1739201495, 0.9715866736)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7438311147, 0.8483889948),
    (0.4444444444, 0.7014503295, 0.9491812897),
    (0.8888888889, 0.7201163902, 1.0128884445),
    (1.3333333333, 0.7396525782, 0.9698802206),
    (1.7777777778, 0.9035534617, 0.9630057322),
    (2.2222222222, 0.6302962733, 0.8759190738),
    (2.6666666667, 0.8295588384, 0.9243102128),
    (3.1111111111, 0.7397352517, 0.8771970074),
    (3.5555555556, 0.9020405501, 0.957703578),
    (4, 1.1340579425, 1.0759104007)
};
//dot(points[0], blue);

pen myPen = green + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}
