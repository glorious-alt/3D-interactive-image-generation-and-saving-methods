import three;
usepackage("esvect");
size(10cm);
currentprojection = perspective(0, -1, 0);
draw(box(O, (4*X + 2*Y + 2*Z)), black);

// 手动绘制 x 轴刻度
for (int i = 1; i <= 10; ++i) {
    draw((i*(4/9)-(4/9), 0, 0)--(i*(4/9)-(4/9), 0, 0.1), black);  // 绘制刻度线
    label("$" + string(i) + "$", ((i-1)*(4/9), 0,-0.1));  // 添加刻度标签
}

// 添加 x 轴标签
label("$Time$", (2,-0.2,-0.3));
label("$Cost\_time$", (-0.8,0.8,-0.2));
label("$Score$", (-1,0.2,1));

// 定义轨迹点与 x 轴的 10 个点对应

triple[] points = {
    (0, 0.4500918727, 1.1745268696),
    (0.4444444444, 0.77496661, 1.5969134823),
    (0.8888888889, 1.1455717397, 1.0776148349),
    (1.3333333333, 0.9881328913, 1.5131358241),
    (1.7777777778, 0.3366118777, 0.4519881112),
    (2.2222222222, 1.3661389652, 1.0574559594),
    (2.6666666667, 0.6338610348, 0.5832483486),
    (3.1111111111, 1.25397557, 0.5738084394),
    (3.5555555556, 1.8350708442, 0.2278923803),
    (4, 0.8900827229, 0.7635897384)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6428330556, 1.1745268696),
    (0.4444444444, 0.6338610348, 0.8585070772),
    (0.8888888889, 0.6516268117, 1.767523057),
    (1.3333333333, 1.0178039682, 1.7843465515),
    (1.7777777778, 0.9344448153, 1.4101650889),
    (2.2222222222, 0.7608975995, 2),
    (2.6666666667, 0.564870242, 0.9822912358),
    (3.1111111111, 1.1875969245, 2),
    (3.5555555556, 0.8089879063, 1.7977615772),
    (4, 0.4479429594, 1.1989678515)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0836708428, 1.1745268696),
    (0.4444444444, 1.4040715568, 1.2648299697),
    (0.8888888889, 1.0958428304, 1.2794723027),
    (1.3333333333, 0.9821960318, 1.1318399315),
    (1.7777777778, 0.9940671063, 0.6267621907),
    (2.2222222222, 1.2756874683, 1.810440101),
    (2.6666666667, 0.4342199962, 0.7040709888),
    (3.1111111111, 1.5527638817, 1.6578926905),
    (3.5555555556, 0.9344448153, 1.0633388599),
    (4, 0.7237544271, 0.8583120931)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.619805772, 0.6645071899),
    (0.4444444444, 1.0118671087, 1.0230023935),
    (0.8888888889, 1.0178039682, 0.564870242),
    (1.3333333333, 0.8544282603, 1.2948060845),
    (1.7777777778, 0.6153324361, 1.158394846),
    (2.2222222222, 1.0958428304, 1.0574559594),
    (2.6666666667, 0.9881328913, 1.561272692),
    (3.1111111111, 1.3471384292, 2),
    (3.5555555556, 1.3571669444, 1.1015517522),
    (4, 0.260837433, 0.4086004398)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4460916883, 1.0296909368),
    (0.4444444444, 0.6428330556, 1.2648299697),
    (0.8888888889, 0.8733021547, 1.0776148349),
    (1.3333333333, 0.8089879063, 1.3583805599),
    (1.7777777778, 0.7608975995, 1.158394846),
    (2.2222222222, 1.1142746058, 2),
    (2.6666666667, 0.7167173699, 0.7991717425),
    (3.1111111111, 0.9944807008, 2),
    (3.5555555556, 0.7608975995, 1.6026713895),
    (4, 0.6703190838, 0.5843234388)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9404514118, 1.1745268696),
    (0.4444444444, 0.7887593284, 1.5969134823),
    (0.8888888889, 0.8352203718, 0.6383700608),
    (1.3333333333, 0.7679684185, 1.0055192992),
    (1.7777777778, 0.4173916178, 0.9952101864),
    (2.2222222222, 1.0237447997, 2),
    (2.6666666667, 0.6811530255, 0.8754350952),
    (3.1111111111, 1.0877242166, 1.5212944497),
    (3.5555555556, 0.7243125317, 0.85717115),
    (4, 0.6373880481, 1.0169670095)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0897463234, 0.9223851651),
    (0.4444444444, 0.9643562786, 0.7215743629),
    (0.8888888889, 0.9163291572, 1.0059328937),
    (1.3333333333, 0.2507601471, 0.7302708238),
    (1.7777777778, 0.8156198524, 1.3070612262),
    (2.2222222222, 1.1583364078, 1.7504043617),
    (2.6666666667, 0.7465226249, 0.9654191746),
    (3.1111111111, 0.9883617877, 1.140183069),
    (3.5555555556, 0.6516268117, 0.7930891878),
    (4, 0.6860726901, 0.9943815053)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7608975995, 1.1745268696),
    (0.4444444444, 1.2756874683, 1.5969134823),
    (0.8888888889, 1.1976976108, 1.3661389652),
    (1.3333333333, 0.7243125317, 0.9375393224),
    (1.7777777778, 1.2044394932, 0.4519881112),
    (2.2222222222, 1.4040715568, 0.4844732346),
    (2.6666666667, 0.8733021547, 0.8754350952),
    (3.1111111111, 1.2859393044, 0.4739025803),
    (3.5555555556, 1.6633881223, 1.0154282222),
    (4, 0.716392928, 0.7635897384)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6338610348, 1.1745268696),
    (0.4444444444, 0.7955605068, 1.1131978221),
    (0.8888888889, 0.7955605068, 1.1910120937),
    (1.3333333333, 0.4500918727, 1.1963712684),
    (1.7777777778, 0.8918946786, 1.2468996646),
    (2.2222222222, 1.2320315815, 0.9318598294),
    (2.6666666667, 0.5425964137, 0.741901977),
    (3.1111111111, 1.0251850552, 1.4221503635),
    (3.5555555556, 1.2607898392, 1.4907034996),
    (4, 0.3514718165, 0.5200696529)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9041571696, 1.1745268696),
    (0.4444444444, 1.2112406716, 1.5969134823),
    (0.8888888889, 1.2534773751, 0.8254731304),
    (1.3333333333, 1.0296909368, 1.3336886631),
    (1.7777777778, 0.9703090632, 1.158394846),
    (2.2222222222, 1.2391024005, 1.0574559594),
    (2.6666666667, 0.8287335876, 0.6555127601),
    (3.1111111111, 1.5209243416, 0.2299290868),
    (3.5555555556, 1.6406354152, 0.2690373752),
    (4, 0.1588258096, 0.2751938777)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5309016762, 1.6099992322),
    (0.4444444444, 0.4931132021, 1.5969134823),
    (0.8888888889, 1.1266978453, 1.0059328937),
    (1.3333333333, 0.4342199962, 1.8641419321),
    (1.7777777778, 0.1649291558, 2),
    (2.2222222222, 1.0296909368, 2),
    (2.6666666667, 0.9762552003, 1.1648921773),
    (3.1111111111, 1.1397431709, 1.6578926905),
    (3.5555555556, 0.9163291572, 1.1015517522),
    (4, 0.2867503717, 1.7716342838)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9881328913, 1.3188469745),
    (0.4444444444, 0.8156198524, 1.5969134823),
    (0.8888888889, 0.6602533881, 1.2794723027),
    (1.3333333333, 0.9223851651, 1.2267137173),
    (1.7777777778, 0.8857253942, 1.4101650889),
    (2.2222222222, 1.3846675639, 0.6811159281),
    (2.6666666667, 0.9404514118, 0.935092079),
    (3.1111111111, 0.97002413, 1.6578926905),
    (3.5555555556, 1.2681915911, 1.4907034996),
    (4, 0.6288167486, 0.6304432827)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.600550296, 1.0296909368),
    (0.4444444444, 1.1843801476, 0.7215743629),
    (0.8888888889, 1.0118671087, 0.4651328952),
    (1.3333333333, 0.380194228, 0.6337775612),
    (1.7777777778, 0.5425964137, 0.8609761514),
    (2.2222222222, 1.1519345001, 0.6207803934),
    (2.6666666667, 0.3593645848, 0.8754350952),
    (3.1111111111, 1.2018030917, 0.6613072675),
    (3.5555555556, 0.9583954939, 0.5821447971),
    (4, 0.5434660666, 0.9943815053)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6602533881, 0.4259343349),
    (0.4444444444, 0.9881328913, 1.0230023935),
    (0.8888888889, 0.8023023892, 0.9344448153),
    (1.3333333333, 0.5959284432, 0.8017740079),
    (1.7777777778, 0.9163291572, 0.8609761514),
    (2.2222222222, 1.0059328937, 0.9318598294),
    (2.6666666667, 0.5309016762, 0.8754350952),
    (3.1111111111, 1.2462549974, 0.8110186275),
    (3.5555555556, 1.3397466119, 0.9535965829),
    (4, 0.8395284066, 0.9684682786)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1329553904, 1.4574035863),
    (0.4444444444, 1.1910120937, 1.0230023935),
    (0.8888888889, 1.0715767791, 1.3661389652),
    (1.3333333333, 0.9163291572, 0.4938170347),
    (1.7777777778, 0.9524253441, 0.5654556826),
    (2.2222222222, 1.1910120937, 1.5800348523),
    (2.6666666667, 0.9223851651, 0.7991717425),
    (3.1111111111, 1.4294878048, 2),
    (3.5555555556, 0.9821960318, 1.4328332648),
    (4, 0.3101851109, 0.6769340567)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8980380465, 1.1745268696),
    (0.4444444444, 1, 1.0230023935),
    (0.8888888889, 0.7090174101, 1.3661389652),
    (1.3333333333, 0.5187864154, 0.8228875552),
    (1.7777777778, 0.8287335876, 0.8609761514),
    (2.2222222222, 1.0475746559, 2),
    (2.6666666667, 0.9041571696, 0.8754350952),
    (3.1111111111, 0.9639133927, 1.250414619),
    (3.5555555556, 1.0715767791, 0.9535965829),
    (4, 0.7594563851, 0.6495580357)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1910120937, 1.767523057),
    (0.4444444444, 0.8980380465, 1.5969134823),
    (0.8888888889, 1.1392460405, 1.3661389652),
    (1.3333333333, 0.6153324361, 1.2948060845),
    (1.7777777778, 0.5062071281, 0.5654556826),
    (2.2222222222, 1.3571669444, 0.4464158462),
    (2.6666666667, 0.6932790529, 0.5832483486),
    (3.1111111111, 1.4786188729, 1.6578926905),
    (3.5555555556, 1.600550296, 1.0154282222),
    (4, 0.8330832862, 0.8049276631)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7243125317, 0.8254731304),
    (0.4444444444, 0.5858562556, 1.0230023935),
    (0.8888888889, 0.6338610348, 0.6383700608),
    (1.3333333333, 0.8480654999, 1.3932983124),
    (1.7777777778, 0.9223851651, 1.1113812947),
    (2.2222222222, 1.0178039682, 2),
    (2.6666666667, 0.7537503456, 0.935092079),
    (3.1111111111, 1.216293833, 2),
    (3.5555555556, 1.4244889375, 0.6800614493),
    (4, 0.6458160614, 0.7360135803)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8795284755, 0.8254731304),
    (0.4444444444, 1.4690983238, 1.2648299697),
    (0.8888888889, 1.2462496544, 0.6811530255),
    (1.3333333333, 0.4794452464, 1.0974961283),
    (1.7777777778, 0.7679684185, 1.2023040921),
    (2.2222222222, 1.1081053214, 1.4309752168),
    (2.6666666667, 0.6811530255, 0.935092079),
    (3.1111111111, 1.0499655372, 1.5212944497),
    (3.5555555556, 1.3942521925, 1.3934587741),
    (4, 0.7664003613, 0.7360135803)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2462496544, 1.4574035863),
    (0.4444444444, 1.3571669444, 1.5969134823),
    (0.8888888889, 1.2607898392, 1.0059328937),
    (1.3333333333, 0.6770447817, 1.2948060845),
    (1.7777777778, 0.8416635922, 0.756678035),
    (2.2222222222, 1.3942521925, 2),
    (2.6666666667, 0.8089879063, 1.1648921773),
    (3.1111111111, 1.4921053007, 2),
    (3.5555555556, 1.787589636, 0.7351718883),
    (4, 0.4868641759, 0.3807287519)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1204715245, 1.4574035863),
    (0.4444444444, 1.4244889375, 1.5969134823),
    (0.8888888889, 1.1777991043, 0.5909251609),
    (1.3333333333, 0.6428330556, 0.6621025356),
    (1.7777777778, 0.2507601471, 0.2403480545),
    (2.2222222222, 1.3229552183, 1.5046475146),
    (2.6666666667, 0.9344448153, 0.4694318722),
    (3.1111111111, 1.4072374927, 2),
    (3.5555555556, 1.619805772, 0.7930891878),
    (4, 0.5738258213, 0.84786031)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9163291572, 0.3699954929),
    (0.4444444444, 0.4342199962, 1.2648299697),
    (0.8888888889, 0.7608975995, 1.1910120937),
    (1.3333333333, 0.7818957757, 1.3932983124),
    (1.7777777778, 0.7537503456, 1.7907640593),
    (2.2222222222, 0.7465226249, 1.5800348523),
    (2.6666666667, 0.380194228, 1.3119475441),
    (3.1111111111, 1.3565755071, 1.250414619),
    (3.5555555556, 1.4812135846, 1.4328332648),
    (4, 0.4191239185, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3942521925, 0.3366118777),
    (0.4444444444, 1.1777991043, 0.5449895201),
    (0.8888888889, 0.9583954939, 1.2794723027),
    (1.3333333333, 0.5062071281, 0.7613686284),
    (1.7777777778, 0.4931132021, 0.9153916302),
    (2.2222222222, 1.2681915911, 1.0574559594),
    (2.6666666667, 0.5539083117, 1.0936192592),
    (3.1111111111, 0, 0),
    (3.5555555556, 0.1013003807, 0.3855576963),
    (4, 0.8523240435, 0.9684682786)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3114530955, 0.9223851651),
    (0.4444444444, 0.8670446096, 1.4221648376),
    (0.8888888889, 1.1583364078, 0.6383700608),
    (1.3333333333, 0.7392101608, 1.8641419321),
    (1.7777777778, 0, 0.8066439035),
    (2.2222222222, 1.0836708428, 0.9318598294),
    (2.6666666667, 0.283190682, 1.4302164221),
    (3.1111111111, 1.3662224388, 1.140183069),
    (3.5555555556, 1.5068867979, 1.1432206168),
    (4, 0.6541089557, 1.1644878268)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4931132021, 0.8254731304),
    (0.4444444444, 0.399449704, 1.2648299697),
    (0.8888888889, 0.4794452464, 1.5740656651),
    (1.3333333333, 1.1142746058, 1.6300484453),
    (1.7777777778, 0.7090174101, 1.7907640593),
    (2.2222222222, 1.1647796282, 1.2348665595),
    (2.6666666667, 0.8156198524, 1.0936192592),
    (3.1111111111, 0.9333119571, 0.8985048692),
    (3.5555555556, 0.7887593284, 1.2496772613),
    (4, 0.521850979, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9940671063, 0.8254731304),
    (0.4444444444, 1.1712664124, 2),
    (0.8888888889, 0.7818957757, 0.8254731304),
    (1.3333333333, 0.9583954939, 0.9375393224),
    (1.7777777778, 1.1777991043, 1.2468996646),
    (2.2222222222, 1.3147724895, 0.8612166255),
    (2.6666666667, 0.6602533881, 0.8754350952),
    (3.1111111111, 1.5700967054, 1.250414619),
    (3.5555555556, 1.3067209471, 1.0154282222),
    (4, 0.2317278291, 0.3498924985)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8857253942, 1.0296909368),
    (0.4444444444, 1.0416045061, 1.2648299697),
    (0.8888888889, 0.9881328913, 0.5125577543),
    (1.3333333333, 0.8670446096, 0.6621025356),
    (1.7777777778, 0.8089879063, 0.7753534052),
    (2.2222222222, 1, 1.365093153),
    (2.6666666667, 0.4931132021, 0.7040709888),
    (3.1111111111, 1.126512999, 0.6613072675),
    (3.5555555556, 1.716809318, 1.3646347971),
    (4, 0.8838451809, 0.892501825)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7679684185, 1.4574035863),
    (0.4444444444, 1.2909825899, 1.2648299697),
    (0.8888888889, 1.0535555509, 1.1910120937),
    (1.3333333333, 0.7955605068, 0.6973397881),
    (1.7777777778, 0.5858562556, 0.517910504),
    (2.2222222222, 0.9583954939, 2),
    (2.6666666667, 0.5858562556, 0.935092079),
    (3.1111111111, 1.0750424818, 2),
    (3.5555555556, 1.3147724895, 1.198811539),
    (4, 0.7801170272, 1.1275631831)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0715767791, 0.6645071899),
    (0.4444444444, 1.3942521925, 0),
    (0.8888888889, 1.0356437214, 0.2977652146),
    (1.3333333333, 1.0059328937, 0.4938170347),
    (1.7777777778, 0.380194228, 0.6267621907),
    (2.2222222222, 1.3312770632, 0.7874053878),
    (2.6666666667, 0.8795284755, 0.4932069152),
    (3.1111111111, 1.3965821935, 0.945681362),
    (3.5555555556, 1.8986996193, 0.5361517975),
    (4, 0.4036320282, 0.4421924223)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2320315815, 1.3188469745),
    (0.4444444444, 1.1329553904, 1.2648299697),
    (0.8888888889, 1.0655551847, 1.5740656651),
    (1.3333333333, 0.4651328952, 0.7302708238),
    (1.7777777778, 0.8670446096, 1.0539449316),
    (2.2222222222, 1.0715767791, 2),
    (2.6666666667, 0.8480654999, 1.0392154501),
    (3.1111111111, 1.0562030792, 2),
    (3.5555555556, 0.9464444491, 2),
    (4, 0.5639538851, 0.7072133236)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.283190682, 1.767523057),
    (0.4444444444, 0.4651328952, 0.8585070772),
    (0.8888888889, 0.4342199962, 1.1910120937),
    (1.3333333333, 0.5858562556, 0.9375393224),
    (1.7777777778, 0.4500918727, 1.5257206213),
    (2.2222222222, 1.1455717397, 1.7504043617),
    (2.6666666667, 0.8918946786, 1.4302164221),
    (3.1111111111, 0.8586782576, 2),
    (3.5555555556, 0.6246986086, 1.198811539),
    (4, 0.1983251607, 0.5386616094)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0776148349, 0.8254731304),
    (0.4444444444, 0.5959284432, 1.2648299697),
    (0.8888888889, 1.1910120937, 1.1266978453),
    (1.3333333333, 1.0776148349, 0.9717302569),
    (1.7777777778, 0.9404514118, 0.9523650499),
    (2.2222222222, 1.0118671087, 1.7504043617),
    (2.6666666667, 0.7679684185, 0.7991717425),
    (3.1111111111, 1.4531840842, 1.6578926905),
    (3.5555555556, 1.0897463234, 1.0154282222),
    (4, 0.8618452459, 0.7938661195)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7012067491, 1.0296909368),
    (0.4444444444, 0.9940671063, 1.4221648376),
    (0.8888888889, 1.1019619535, 1.0776148349),
    (1.3333333333, 0.564870242, 1.0055192992),
    (1.7777777778, 1.2112406716, 1.0539449316),
    (2.2222222222, 1.2987932509, 0.9318598294),
    (2.6666666667, 0.7887593284, 1.0392154501),
    (3.1111111111, 1.1464244022, 1.250414619),
    (3.5555555556, 1.3229552183, 0.8960973232),
    (4, 0.8003050892, 0.7360135803)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.8350708442, 0.212410364),
    (0.4444444444, 1.5068867979, 1.5969134823),
    (0.8888888889, 1.2832826301, 0.8254731304),
    (1.3333333333, 1.0958428304, 1.1963712684),
    (1.7777777778, 0.564870242, 0.7172308529),
    (2.2222222222, 1.3483731883, 0.6207803934),
    (2.6666666667, 0.9524253441, 0.3676554557),
    (3.1111111111, 1.4656625104, 0.8110186275),
    (3.5555555556, 1.5657800038, 0.5821447971),
    (4, 0.7346502981, 0.5200696529)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6633881223, 0.5425964137),
    (0.4444444444, 1.4574035863, 0.8585070772),
    (0.8888888889, 1.1519345001, 0.8826304984),
    (1.3333333333, 1.0535555509, 0.3467021116),
    (1.7777777778, 0.6057478075, 1.5257206213),
    (2.2222222222, 1.2909825899, 1.7504043617),
    (2.6666666667, 0.8023023892, 0.5557356079),
    (3.1111111111, 1.4181972811, 0.7412761213),
    (3.5555555556, 1.4141437444, 0.7930891878),
    (4, 0.3872843784, 0.5621365746)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2391024005, 0.399449704),
    (0.4444444444, 1.3753013914, 0.5449895201),
    (0.8888888889, 1.1081053214, 0.6057478075),
    (1.3333333333, 0.9344448153, 0.8468470828),
    (1.7777777778, 0.5755110625, 0.3204378929),
    (2.2222222222, 1.1777991043, 0.4181516003),
    (2.6666666667, 0.7318084089, 0.8754350952),
    (3.1111111111, 1.1199595093, 1.0671676165),
    (3.5555555556, 1.2987932509, 0.6800614493),
    (4, 0.7089485501, 0.3807287519)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0475746559, 1.767523057),
    (0.4444444444, 0.6516268117, 1.5969134823),
    (0.8888888889, 0.7318084089, 1.5740656651),
    (1.3333333333, 0.6852275105, 1.5131358241),
    (1.7777777778, 0.9284232209, 1.0539449316),
    (2.2222222222, 0.9881328913, 1.7504043617),
    (2.6666666667, 0.8352203718, 1.2347159361),
    (3.1111111111, 0.9578012944, 2),
    (3.5555555556, 0.8156198524, 1.7977615772),
    (4, 0.5538401768, 0.7360135803)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6770447817, 0.6008685523),
    (0.4444444444, 0.8222008957, 0.2301941969),
    (0.8888888889, 0.7243125317, 0.1013003807),
    (1.3333333333, 0.9464444491, 0.8468470828),
    (1.7777777778, 0.3114530955, 0.1866217871),
    (2.2222222222, 0.9940671063, 0.5591206054),
    (2.6666666667, 0.8980380465, 1.3119475441),
    (3.1111111111, 1.3199549421, 0.2299290868),
    (3.5555555556, 1.5348671048, 0.8960973232),
    (4, 0.6937932627, 0.9258898425)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7392101608, 1.3188469745),
    (0.4444444444, 1.2681915911, 1.2648299697),
    (0.8888888889, 0.5755110625, 1.3661389652),
    (1.3333333333, 0.7887593284, 1.0974961283),
    (1.7777777778, 0.7318084089, 1.2468996646),
    (2.2222222222, 0.7318084089, 2),
    (2.6666666667, 1.0059328937, 1.1648921773),
    (3.1111111111, 0.8775875825, 2),
    (3.5555555556, 0.6602533881, 1.7977615772),
    (4, 0.4989094734, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1649291558, 1.0296909368),
    (0.4444444444, 0.283190682, 1.2648299697),
    (0.8888888889, 0.399449704, 1.1910120937),
    (1.3333333333, 0.5539083117, 2),
    (1.7777777778, 0.7465226249, 1.5257206213),
    (2.2222222222, 0.6516268117, 2),
    (2.6666666667, 0.4651328952, 1.0936192592),
    (3.1111111111, 0.8459413668, 0.5738084394),
    (3.5555555556, 0.8023023892, 1.6026713895),
    (4, 0.7936238579, 1.1644878268)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.212410364, 1.0296909368),
    (0.4444444444, 0.3593645848, 1.2648299697),
    (0.8888888889, 0.5425964137, 1.1266978453),
    (1.3333333333, 0.3593645848, 1.5808760815),
    (1.7777777778, 0.4342199962, 1.2023040921),
    (2.2222222222, 1.1329553904, 2),
    (2.6666666667, 0.7243125317, 1.4302164221),
    (3.1111111111, 0.8650057783, 1.4221503635),
    (3.5555555556, 1.2909825899, 1.198811539),
    (4, 0.8135352611, 0.8230545257)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5657800038, 1.0296909368),
    (0.4444444444, 1.3661389652, 1.2648299697),
    (0.8888888889, 1.2044394932, 0.8254731304),
    (1.3333333333, 0.6687229368, 0.8468470828),
    (1.7777777778, 1.1843801476, 0.9952101864),
    (2.2222222222, 1.2044394932, 2),
    (2.6666666667, 0.7818957757, 0.8754350952),
    (3.1111111111, 1.2777739686, 2),
    (3.5555555556, 1.3846675639, 0.8960973232),
    (4, 0.7014168885, 0.84786031)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.77496661, 0.6008685523),
    (0.4444444444, 1.22503339, 1.2648299697),
    (0.8888888889, 1.2320315815, 0.7280725506),
    (1.3333333333, 0.7090174101, 0.3810864296),
    (1.7777777778, 0.212410364, 0.6267621907),
    (2.2222222222, 1.2112406716, 0.4844732346),
    (2.6666666667, 0.6057478075, 0.2622664615),
    (3.1111111111, 1.376094375, 1.250414619),
    (3.5555555556, 1.4517019394, 1.1015517522),
    (4, 0.4743857496, 0.6495580357)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1081053214, 0.7318084089),
    (0.4444444444, 0.8416635922, 0.4216812309),
    (0.8888888889, 1, 0.380194228),
    (1.3333333333, 0.6338610348, 0.8017740079),
    (1.7777777778, 0.399449704, 0.6007295623),
    (2.2222222222, 0.6338610348, 0.2638639321),
    (2.6666666667, 0.4794452464, 0.4437131797),
    (3.1111111111, 1.0624606776, 0.6613072675),
    (3.5555555556, 0, 0.1769503954),
    (4, 0.8200887508, 0.6054090895)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.380194228, 0.7318084089),
    (0.4444444444, 0.6246986086, 1.0230023935),
    (0.8888888889, 0.3366118777, 1.2794723027),
    (1.3333333333, 0.9703090632, 1.163690014),
    (1.7777777778, 0.4794452464, 1.7907640593),
    (2.2222222222, 1.0655551847, 2),
    (2.6666666667, 0.8222008957, 1.1648921773),
    (3.1111111111, 0.9210233824, 2),
    (3.5555555556, 0.4173916178, 1.5514933958),
    (4, 0.8266040683, 1.539689776)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.7492398529, 0.1013003807),
    (0.4444444444, 1.4812135846, 0.4947145759),
    (0.8888888889, 1.2681915911, 0.212410364),
    (1.3333333333, 0.9524253441, 0.2394456416),
    (1.7777777778, 1.0535555509, 0.6570993624),
    (2.2222222222, 1.4141437444, 0),
    (2.6666666667, 0.9821960318, 0.6555127601),
    (3.1111111111, 1.2090110601, 1.3251144672),
    (3.5555555556, 1.5205547536, 0.4079055558),
    (4, 0.5105604553, 0.3025330597)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7167173699, 1.0296909368),
    (0.4444444444, 1.0178039682, 1.5969134823),
    (0.8888888889, 0.8857253942, 0.6383700608),
    (1.3333333333, 0.6602533881, 1.2948060845),
    (1.7777777778, 0.9102536766, 0.8609761514),
    (2.2222222222, 1.3397466119, 1.0574559594),
    (2.6666666667, 0.6687229368, 1.0029726035),
    (3.1111111111, 1.1134441918, 2),
    (3.5555555556, 2, 0.9535965829),
    (4, 0.7346502981, 0.6769340567)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1519345001, 0.2675841216),
    (0.4444444444, 1.0059328937, 0.2301941969),
    (0.8888888889, 0.9404514118, 0),
    (1.3333333333, 0.212410364, 0.1043369477),
    (1.7777777778, 1.1910120937, 0.1146241123),
    (2.2222222222, 1.2462496544, 0.3115034368),
    (2.6666666667, 0.5959284432, 0.3096175497),
    (3.1111111111, 1.2386313716, 0.1408076062),
    (3.5555555556, 1.4690983238, 0.303831684),
    (4, 0.6782498566, 0.4421924223)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7537503456, 1.4574035863),
    (0.4444444444, 0.5309016762, 1.5969134823),
    (0.8888888889, 0.5062071281, 1.1266978453),
    (1.3333333333, 0.283190682, 1.2546179581),
    (1.7777777778, 0.4651328952, 1.5257206213),
    (2.2222222222, 1.0897463234, 1.7504043617),
    (2.6666666667, 0.6153324361, 0.8754350952),
    (3.1111111111, 0.9516864724, 2),
    (3.5555555556, 0.7679684185, 1.6712719238),
    (4, 0.7524513356, 2)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.716809318, 0.9223851651),
    (0.4444444444, 1.4141437444, 1.5969134823),
    (0.8888888889, 1.2391024005, 0.4259343349),
    (1.3333333333, 0.9284232209, 0.5468159158),
    (1.7777777778, 0.7243125317, 0.3524175758),
    (2.2222222222, 1.3067209471, 0.9318598294),
    (2.6666666667, 0.7608975995, 1.0392154501),
    (3.1111111111, 1.5364162319, 2),
    (3.5555555556, 1.7492398529, 0.361146606),
    (4, 0.5328107674, 0.6304432827)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5826083822, 0),
    (0.4444444444, 1.1583364078, 0.3036305708),
    (0.8888888889, 1.1843801476, 0.1649291558),
    (1.3333333333, 0.8980380465, 0.1698730508),
    (1.7777777778, 1, 0.7373333084),
    (2.2222222222, 1.1712664124, 0.3517898349),
    (2.6666666667, 0.8416635922, 0.3676554557),
    (3.1111111111, 1.1531529172, 0.8110186275),
    (3.5555555556, 1.5826083822, 0.4478141626),
    (4, 0.8069414507, 0.7826520299)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3593645848, 1.3188469745),
    (0.4444444444, 0.4794452464, 1.5969134823),
    (0.8888888889, 0.9344448153, 0.8826304984),
    (1.3333333333, 0.8156198524, 1.3336886631),
    (1.7777777778, 1.2181042243, 0.7373333084),
    (2.2222222222, 0.7392101608, 1.7504043617),
    (2.6666666667, 0.5187864154, 1.0936192592),
    (3.1111111111, 0.9271724927, 1.5212944497),
    (3.5555555556, 0.4500918727, 1.6712719238),
    (4, 0.6200933179, 1.8792606084)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3397466119, 0.9223851651),
    (0.4444444444, 1.0958428304, 1.2648299697),
    (0.8888888889, 0.9940671063, 0.5909251609),
    (1.3333333333, 0.8352203718, 0.4299032946),
    (1.7777777778, 0.5539083117, 1.0539449316),
    (2.2222222222, 1.22503339, 0.6207803934),
    (2.6666666667, 0.9583954939, 0.4156200497),
    (3.1111111111, 1.3288401077, 0.945681362),
    (3.5555555556, 1.4937928719, 0.7930891878),
    (4, 0.8618452459, 0.7072133236)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7318084089, 1.1745268696),
    (0.4444444444, 0.5539083117, 0.4216812309),
    (0.8888888889, 0.7887593284, 0.8254731304),
    (1.3333333333, 0.3114530955, 0.8468470828),
    (1.7777777778, 1.0237447997, 0.517910504),
    (2.2222222222, 1.0535555509, 1.5800348523),
    (2.6666666667, 0.5062071281, 0.6170220986),
    (3.1111111111, 1.0687399327, 1.6578926905),
    (3.5555555556, 1.2756874683, 0.8960973232),
    (4, 0.1099213108, 0.1159713597)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4794452464, 0.8254731304),
    (0.4444444444, 0.7243125317, 0.1226586153),
    (0.8888888889, 0.6932790529, 0.2507601471),
    (1.3333333333, 0, 0),
    (1.7777777778, 1.1647796282, 0.6908746163),
    (2.2222222222, 1.1392460405, 0.2048810366),
    (2.6666666667, 0.8670446096, 0.203640657),
    (3.1111111111, 1.2617984034, 0.6613072675),
    (3.5555555556, 1.3312770632, 0.4828978505),
    (4, 0.3316391408, 0.5621365746)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6687229368, 1.0296909368),
    (0.4444444444, 0.8287335876, 1.1131978221),
    (0.8888888889, 0.9284232209, 0.8826304984),
    (1.3333333333, 0.6972579443, 1.0974961283),
    (1.7777777778, 0.5309016762, 0.8609761514),
    (2.2222222222, 0.9762552003, 1.365093153),
    (2.6666666667, 0.6516268117, 1.1648921773),
    (3.1111111111, 1.0128757674, 1.4221503635),
    (3.5555555556, 0.399449704, 0.9268711326),
    (4, 0, 0)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5959284432, 0.8254731304),
    (0.4444444444, 1.2832826301, 1.2648299697),
    (0.8888888889, 0.6246986086, 0.3593645848),
    (1.3333333333, 0.9762552003, 0.9375393224),
    (1.7777777778, 0.7955605068, 0.6908746163),
    (2.2222222222, 0.7167173699, 0.6811159281),
    (2.6666666667, 1.0178039682, 1.1648921773),
    (3.1111111111, 0.9394431816, 0.3160693985),
    (3.5555555556, 0.5858562556, 0.85717115),
    (4, 0.8713083274, 1.1644878268)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6885469045, 1.4574035863),
    (0.4444444444, 1.4937928719, 1.2648299697),
    (0.8888888889, 1.2756874683, 1.0059328937),
    (1.3333333333, 0.8857253942, 1.4461598232),
    (1.7777777778, 0.5959284432, 0.5425052244),
    (2.2222222222, 1.2534773751, 0.5184991514),
    (2.6666666667, 0.1013003807, 0.1250771943),
    (3.1111111111, 1.5885764436, 0.3160693985),
    (3.5555555556, 1.6885469045, 1.0633388599),
    (4, 0.4614293872, 0.9943815053)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7818957757, 0.7318084089),
    (0.4444444444, 1.2044394932, 1.5969134823),
    (0.8888888889, 1.22503339, 1.0776148349),
    (1.3333333333, 0.399449704, 0.6621025356),
    (1.7777777778, 0.3593645848, 0),
    (2.2222222222, 1.2181042243, 0.7149209155),
    (2.6666666667, 0.9102536766, 0.741901977),
    (3.1111111111, 1.3378974644, 0.6613072675),
    (3.5555555556, 1.4517019394, 1.0633388599),
    (4, 0.3699515547, 0.2444820865)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6057478075, 1.3188469745),
    (0.4444444444, 1.2181042243, 1.0230023935),
    (0.8888888889, 1.2181042243, 1.1266978453),
    (1.3333333333, 0.8222008957, 1.2267137173),
    (1.7777777778, 0.1013003807, 0.9153916302),
    (2.2222222222, 1.1976976108, 1.1458206273),
    (2.6666666667, 0.7012067491, 0.741901977),
    (3.1111111111, 1.3112315114, 1.4221503635),
    (3.5555555556, 1.435129758, 0.9831179082),
    (4, 0.6021507957, 0.9943815053)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.787589636, 1.3188469745),
    (0.4444444444, 0.9223851651, 1.5969134823),
    (0.8888888889, 0.5309016762, 2),
    (1.3333333333, 0.5755110625, 2),
    (1.7777777778, 0.77496661, 1.3070612262),
    (2.2222222222, 1.0356437214, 2),
    (2.6666666667, 0.9163291572, 0.7991717425),
    (3.1111111111, 1.23109971, 2),
    (3.5555555556, 1.3483731883, 1.198811539),
    (4, 0.6112081523, 1.0395349001)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1455717397, 0.4863550884),
    (0.4444444444, 1.0836708428, 0.3428987797),
    (0.8888888889, 0.9041571696, 0.399449704),
    (1.3333333333, 0.1013003807, 0.320789173),
    (1.7777777778, 0.9881328913, 0.7753534052),
    (2.2222222222, 1.2832826301, 2),
    (2.6666666667, 0.9464444491, 0.5153600821),
    (3.1111111111, 1.5061829653, 1.0671676165),
    (3.5555555556, 1.5499081273, 0.827707186),
    (4, 0.7453820419, 0.5621365746)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.2507601471, 0.8254731304),
    (0.4444444444, 0.564870242, 1.0230023935),
    (0.8888888889, 0, 1.4405688668),
    (1.3333333333, 0.8287335876, 1.5131358241),
    (1.7777777778, 0.7887593284, 0.9523650499),
    (2.2222222222, 0.6428330556, 1.7504043617),
    (2.6666666667, 1, 1.3119475441),
    (3.1111111111, 0.9455675593, 2),
    (3.5555555556, 0.7818957757, 1.198811539),
    (4, 0.6622742915, 1.612702619)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0118671087, 0.9223851651),
    (0.4444444444, 1.3067209471, 1.5969134823),
    (0.8888888889, 0.9464444491, 1.0776148349),
    (1.3333333333, 0.3366118777, 1.2948060845),
    (1.7777777778, 1.0715767791, 1.3070612262),
    (2.2222222222, 1.1204715245, 1.0574559594),
    (2.6666666667, 0.9643562786, 0.7991717425),
    (3.1111111111, 1.0190248777, 1.140183069),
    (3.5555555556, 1.3753013914, 2),
    (4, 0.8459413668, 0.7826520299)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.6406354152, 1.1745268696),
    (0.4444444444, 1.435129758, 1.5969134823),
    (0.8888888889, 1.1712664124, 1.1910120937),
    (1.3333333333, 0.1649291558, 0.2394456416),
    (1.7777777778, 1.0475746559, 1.6426398893),
    (2.2222222222, 1.1019619535, 2),
    (2.6666666667, 0.8857253942, 0.741901977),
    (3.1111111111, 1.4411387867, 2),
    (3.5555555556, 1.0416045061, 1.5514933958),
    (4, 0.8775875825, 0.9092810506)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4342199962, 0.6008685523),
    (0.4444444444, 0.8857253942, 1.5969134823),
    (0.8888888889, 0.7465226249, 0.77496661),
    (1.3333333333, 0.8416635922, 0.6973397881),
    (1.7777777778, 1.1976976108, 1.1113812947),
    (2.2222222222, 1.1266978453, 0.9318598294),
    (2.6666666667, 0.8544282603, 1.7155533301),
    (3.1111111111, 1.1946662182, 0.945681362),
    (3.5555555556, 1.4040715568, 0.6285577317),
    (4, 0.4338652948, 0.4421924223)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6852275105, 1.1745268696),
    (0.4444444444, 0.6057478075, 0.8585070772),
    (0.8888888889, 0.7392101608, 0.9344448153),
    (1.3333333333, 0.7167173699, 0.5927625073),
    (1.7777777778, 0.7167173699, 1.3070612262),
    (2.2222222222, 1.1843801476, 2),
    (2.6666666667, 0.9703090632, 1.0392154501),
    (3.1111111111, 1.3026602119, 1.0671676165),
    (3.5555555556, 1.3661389652, 1.198811539),
    (4, 0.7732862827, 0.6054090895)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6153324361, 1.1745268696),
    (0.4444444444, 0.8352203718, 1.5969134823),
    (0.8888888889, 0.77496661, 0.3366118777),
    (1.3333333333, 0.8795284755, 1.0666880429),
    (1.7777777778, 0.283190682, 0.4066307179),
    (2.2222222222, 1.3753013914, 0.3868984398),
    (2.6666666667, 0.6428330556, 0.7991717425),
    (3.1111111111, 1.031357739, 1.140183069),
    (3.5555555556, 1.2832826301, 0.4828978505),
    (4, 0.583472753, 0.6769340567)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.1013003807, 0.8254731304),
    (0.4444444444, 0.5425964137, 1.2648299697),
    (0.8888888889, 0.6428330556, 1.4405688668),
    (1.3333333333, 0.7537503456, 1.2267137173),
    (1.7777777778, 0.9041571696, 1.158394846),
    (2.2222222222, 0.7537503456, 2),
    (2.6666666667, 0.5755110625, 1.3119475441),
    (3.1111111111, 0.9148632049, 1.250414619),
    (3.5555555556, 0.5062071281, 1.1432206168),
    (4, 0.7868953429, 1.0395349001)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3147724895, 0.9223851651),
    (0.4444444444, 1.2320315815, 0.7729643972),
    (0.8888888889, 1.0237447997, 0.7280725506),
    (1.3333333333, 0.4931132021, 0.6973397881),
    (1.7777777778, 0.5187864154, 1.7907640593),
    (2.2222222222, 1.2607898392, 1.5800348523),
    (2.6666666667, 0.6246986086, 1.0936192592),
    (3.1111111111, 1.3862080833, 1.5212944497),
    (3.5555555556, 0.8918946786, 1.1015517522),
    (4, 0.5929098309, 0.7072133236)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2909825899, 1.1745268696),
    (0.4444444444, 0.8733021547, 0.8585070772),
    (0.8888888889, 0.8287335876, 0.77496661),
    (1.3333333333, 0.6516268117, 0.5279221189),
    (1.7777777778, 1.0595485882, 0.8066439035),
    (2.2222222222, 1.0416045061, 1.3311519133),
    (2.6666666667, 0.77496661, 1.561272692),
    (3.1111111111, 1.1331068094, 0.6613072675),
    (3.5555555556, 0.8795284755, 1.3256141333),
    (4, 1.679210827, 0.7635897384)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.22503339, 1.3188469745),
    (0.4444444444, 0.4173916178, 2),
    (0.8888888889, 0.1013003807, 1.3661389652),
    (1.3333333333, 0.8023023892, 1.0452556908),
    (1.7777777778, 0.6602533881, 1.5257206213),
    (2.2222222222, 0.4342199962, 1.4671850788),
    (2.6666666667, 0.212410364, 2),
    (3.1111111111, 0.4191239185, 1.3251144672),
    (3.5555555556, 0.4342199962, 2),
    (4, 1.3565755071, 1.7716342838)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8918946786, 1.4574035863),
    (0.4444444444, 0.7318084089, 2),
    (0.8888888889, 0.5959284432, 1.4405688668),
    (1.3333333333, 1.3753013914, 1.6898148891),
    (1.7777777778, 0.6516268117, 1.158394846),
    (2.2222222222, 0.212410364, 1.6804337199),
    (2.6666666667, 0, 1.4302164221),
    (3.1111111111, 0.1588258096, 1.5212944497),
    (3.5555555556, 0.283190682, 1.3646347971),
    (4, 1.4072374927, 1.7716342838)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5187864154, 0.8254731304),
    (0.4444444444, 0.8480654999, 2),
    (0.8888888889, 1.1204715245, 0.6811530255),
    (1.3333333333, 1.8986996193, 1.0452556908),
    (1.7777777778, 1.1266978453, 1.4101650889),
    (2.2222222222, 0.7679684185, 1.4671850788),
    (2.6666666667, 1.0416045061, 1.7155533301),
    (3.1111111111, 0.6541089557, 1.5722392017),
    (3.5555555556, 0.9524253441, 1.6712719238),
    (4, 1.5527638817, 1.441419072)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2534773751, 1.0296909368),
    (0.4444444444, 1.1392460405, 1.5969134823),
    (0.8888888889, 0.8222008957, 0.8254731304),
    (1.3333333333, 1.1647796282, 1.0055192992),
    (1.7777777778, 1.0416045061, 1.6426398893),
    (2.2222222222, 1.4690983238, 0.8855666945),
    (2.6666666667, 1.3229552183, 1.561272692),
    (3.1111111111, 1.2697291762, 1.250414619),
    (3.5555555556, 0.9404514118, 0.7648408039),
    (4, 1.5209243416, 0.3272576427)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2607898392, 1.6099992322),
    (0.4444444444, 0.9102536766, 1.2648299697),
    (0.8888888889, 1.0836708428, 0.8826304984),
    (1.3333333333, 1.1081053214, 0.4938170347),
    (1.7777777778, 1.0059328937, 1.4101650889),
    (2.2222222222, 0.4931132021, 0.9626919001),
    (2.6666666667, 1.2681915911, 2),
    (3.1111111111, 0.8330832862, 0.9993186063),
    (3.5555555556, 1.0059328937, 1.1432206168),
    (4, 1.4921053007, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1712664124, 1.1745268696),
    (0.4444444444, 0.8089879063, 1.5969134823),
    (0.8888888889, 0.5187864154, 0.9344448153),
    (1.3333333333, 0.9404514118, 1.4461598232),
    (1.7777777778, 1.1142746058, 1.3070612262),
    (2.2222222222, 1.5205547536, 1.1905539763),
    (2.6666666667, 0.4173916178, 1.4302164221),
    (3.1111111111, 0.8395284066, 1.250414619),
    (3.5555555556, 1.0535555509, 1.2849945466),
    (4, 1.7083204309, 0.9258898425)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6246986086, 0.9223851651),
    (0.4444444444, 0.7608975995, 1.5969134823),
    (0.8888888889, 0.564870242, 0.8826304984),
    (1.3333333333, 1.3147724895, 0.9375393224),
    (1.7777777778, 0.8544282603, 1.6426398893),
    (2.2222222222, 0.5062071281, 1.39962532),
    (2.6666666667, 0.7955605068, 1.4302164221),
    (3.1111111111, 0.6288167486, 1.6578926905),
    (3.5555555556, 0.4794452464, 1.5514933958),
    (4, 1.1069649739, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5858562556, 1.6099992322),
    (0.4444444444, 0, 1.5969134823),
    (0.8888888889, 0.4500918727, 1.4405688668),
    (1.3333333333, 1.3229552183, 1.5131358241),
    (1.7777777778, 0.6428330556, 1.2468996646),
    (2.2222222222, 0.4651328952, 1.1117638801),
    (2.6666666667, 1.0356437214, 2),
    (3.1111111111, 0.7524513356, 1.5722392017),
    (3.5555555556, 0.3114530955, 1.4328332648),
    (4, 0.9148632049, 1.6760114005)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9524253441, 1.767523057),
    (0.4444444444, 2, 0.4603546131),
    (0.8888888889, 1.1647796282, 0.2977652146),
    (1.3333333333, 1.3846675639, 0.9717302569),
    (1.7777777778, 1.1204715245, 0.2837418681),
    (2.2222222222, 0.4500918727, 1.2717332769),
    (2.6666666667, 1.3571669444, 0.6170220986),
    (3.1111111111, 0, 0),
    (3.5555555556, 0.9881328913, 1.0154282222),
    (4, 1.7812224505, 0.1675675531)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1392460405, 1.0296909368),
    (0.4444444444, 0.9041571696, 0.5449895201),
    (0.8888888889, 1.0776148349, 0.77496661),
    (1.3333333333, 0.9041571696, 0.3810864296),
    (1.7777777778, 0.8480654999, 0.5870208181),
    (2.2222222222, 1.4812135846, 1.2717332769),
    (2.6666666667, 1.4141437444, 1.4302164221),
    (3.1111111111, 1.2942321987, 1.140183069),
    (3.5555555556, 0.9102536766, 0.7351718883),
    (4, 1.4786188729, 0.9456340604)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5755110625, 0.6645071899),
    (0.4444444444, 1.1976976108, 0.7215743629),
    (0.8888888889, 1.1329553904, 0.5425964137),
    (1.3333333333, 0.9102536766, 0.5927625073),
    (1.7777777778, 0.6338610348, 0.6908746163),
    (2.2222222222, 1.4244889375, 0.8254751638),
    (2.6666666667, 0.4500918727, 1.7155533301),
    (3.1111111111, 1.0813700025, 0.771346443),
    (3.5555555556, 1.0237447997, 0.7351718883),
    (4, 1.3471384292, 0.9092810506)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8607539595, 1.1745268696),
    (0.4444444444, 0.7392101608, 1.5969134823),
    (0.8888888889, 0.8607539595, 1.5740656651),
    (1.3333333333, 0.9643562786, 1.6300484453),
    (1.7777777778, 1.0118671087, 1.4101650889),
    (2.2222222222, 0.1013003807, 1.3311519133),
    (2.6666666667, 0.7090174101, 2),
    (3.1111111111, 0.9761348674, 0.8985048692),
    (3.5555555556, 0.7012067491, 1.2849945466),
    (4, 1.3862080833, 1.1644878268)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0958428304, 1.0296909368),
    (0.4444444444, 1.0535555509, 1.5969134823),
    (0.8888888889, 0.6852275105, 1.2794723027),
    (1.3333333333, 1.3397466119, 0.8994801466),
    (1.7777777778, 0.8023023892, 1.5257206213),
    (2.2222222222, 0.564870242, 1.4671850788),
    (2.6666666667, 0.9940671063, 2),
    (3.1111111111, 0.521850979, 1.3690403656),
    (3.5555555556, 1.0475746559, 1.6712719238),
    (4, 1.4411387867, 1.1644878268)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.8986996193, 2),
    (0.4444444444, 0.3114530955, 1.5969134823),
    (0.8888888889, 0.212410364, 1.0776148349),
    (1.3333333333, 1.2909825899, 1.5808760815),
    (1.7777777778, 0.6932790529, 1.7907640593),
    (2.2222222222, 0.5309016762, 1.3311519133),
    (2.6666666667, 1.1266978453, 2),
    (3.1111111111, 0.8713083274, 1.4221503635),
    (3.5555555556, 0.77496661, 1.7977615772),
    (4, 1.3288401077, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8670446096, 1.3188469745),
    (0.4444444444, 0.8023023892, 2),
    (0.8888888889, 0.7012067491, 0.77496661),
    (1.3333333333, 1.2607898392, 1.3583805599),
    (1.7777777778, 0.7818957757, 1.6426398893),
    (2.2222222222, 0.6057478075, 1.628237785),
    (2.6666666667, 0.8607539595, 1.7155533301),
    (3.1111111111, 0.6937932627, 1.6578926905),
    (3.5555555556, 0.5425964137, 1.4328332648),
    (4, 1.1005198534, 1.7716342838)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9344448153, 1.1745268696),
    (0.4444444444, 1.1455717397, 1.0230023935),
    (0.8888888889, 1.0897463234, 0.7280725506),
    (1.3333333333, 1.1455717397, 1.163690014),
    (1.7777777778, 1.0897463234, 1.0539449316),
    (2.2222222222, 0.2507601471, 1.2717332769),
    (2.6666666667, 0.2507601471, 2),
    (3.1111111111, 0.3872843784, 1.3251144672),
    (3.5555555556, 0.6852275105, 1.2496772613),
    (4, 1.4656625104, 0.9943815053)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9703090632, 1.4574035863),
    (0.4444444444, 0.380194228, 2),
    (0.8888888889, 0.8980380465, 1.5740656651),
    (1.3333333333, 0.8918946786, 1.0452556908),
    (1.7777777778, 1.0776148349, 1.6426398893),
    (2.2222222222, 0.5425964137, 1.5348549924),
    (2.6666666667, 1.0595485882, 1.3119475441),
    (3.1111111111, 0.9025038717, 1.5212944497),
    (3.5555555556, 1.0595485882, 1.2849945466),
    (4, 1.8301269492, 2)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.399449704, 1.6099992322),
    (0.4444444444, 0.7465226249, 2),
    (0.8888888889, 0.2507601471, 1.1266978453),
    (1.3333333333, 0.5425964137, 1.2948060845),
    (1.7777777778, 0.9643562786, 1.6426398893),
    (2.2222222222, 0.3366118777, 1.39962532),
    (2.6666666667, 1.2391024005, 1.7155533301),
    (3.1111111111, 0.1099213108, 1.762756952),
    (3.5555555556, 0.6932790529, 1.3256141333),
    (4, 1.3965821935, 1.539689776)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1583364078, 0.4863550884),
    (0.4444444444, 0.9821960318, 0.7729643972),
    (0.8888888889, 1.0296909368, 0.4259343349),
    (1.3333333333, 1.4040715568, 0.4635837681),
    (1.7777777778, 0.8222008957, 0.8609761514),
    (2.2222222222, 0.4794452464, 1.1117638801),
    (2.6666666667, 0.3114530955, 1.1648921773),
    (3.1111111111, 0.2317278291, 0.5368916656),
    (3.5555555556, 0.8544282603, 0.9535965829),
    (4, 1.6532978884, 0.8373047699)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7465226249, 0.7318084089),
    (0.4444444444, 0.8795284755, 1.0230023935),
    (0.8888888889, 0.9102536766, 0.7280725506),
    (1.3333333333, 1.4812135846, 0.5927625073),
    (1.7777777778, 1.0178039682, 0.9523650499),
    (2.2222222222, 0.5187864154, 1.2717332769),
    (2.6666666667, 1.1204715245, 1.7155533301),
    (3.1111111111, 0.260837433, 0.7412761213),
    (3.5555555556, 0.8857253942, 0.7037715155),
    (4, 1.8956630523, 0.9258898425)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8733021547, 0.6008685523),
    (0.4444444444, 0.7679684185, 0.8585070772),
    (0.8888888889, 0.7167173699, 0.8826304984),
    (1.3333333333, 1.4574035863, 0.5927625073),
    (1.7777777778, 0.9464444491, 0.6570993624),
    (2.2222222222, 0.9703090632, 1.0008104347),
    (2.6666666667, 1.0715767791, 1.7155533301),
    (3.1111111111, 0.5328107674, 1.6578926905),
    (3.5555555556, 0.6153324361, 1.4907034996),
    (4, 1.376094375, 1.1275631831)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0059328937, 1.4574035863),
    (0.4444444444, 0.9404514118, 2),
    (0.8888888889, 0.9821960318, 1.1910120937),
    (1.3333333333, 1.2534773751, 1.1318399315),
    (1.7777777778, 1.1392460405, 1.7907640593),
    (2.2222222222, 1.5068867979, 1.4671850788),
    (2.6666666667, 1.0475746559, 1.7155533301),
    (3.1111111111, 1.7083204309, 1.3690403656),
    (3.5555555556, 1.0178039682, 1.2849945466),
    (4, 1.5791815461, 1.441419072)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9821960318, 1.3188469745),
    (0.4444444444, 1.0595485882, 2),
    (0.8888888889, 1.2112406716, 0.9344448153),
    (1.3333333333, 1.0118671087, 0.7613686284),
    (1.7777777778, 1.1583364078, 1.158394846),
    (2.2222222222, 0.283190682, 1.4671850788),
    (2.6666666667, 1.3483731883, 2),
    (3.1111111111, 1.6532978884, 1.1837577238),
    (3.5555555556, 1.0356437214, 1.2849945466),
    (4, 0, 0)
};
//dot(points[0], blue);

pen myPen = red + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4651328952, 0.9223851651),
    (0.4444444444, 0.7537503456, 2),
    (0.8888888889, 0.5858562556, 1.5740656651),
    (1.3333333333, 1.0475746559, 0.8767686498),
    (1.7777777778, 0.9762552003, 1.6426398893),
    (2.2222222222, 0.380194228, 1.3311519133),
    (2.6666666667, 0.1649291558, 2),
    (3.1111111111, 0.3101851109, 2),
    (3.5555555556, 0.7090174101, 1.6026713895),
    (4, 1.4294878048, 1.7716342838)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7887593284, 1.4574035863),
    (0.4444444444, 0.7818957757, 2),
    (0.8888888889, 0.6153324361, 0.8254731304),
    (1.3333333333, 1.1583364078, 0.8994801466),
    (1.7777777778, 1.0356437214, 1.4101650889),
    (2.2222222222, 0.5959284432, 1.628237785),
    (2.6666666667, 1.0535555509, 1.7155533301),
    (3.1111111111, 0.6458160614, 1.6578926905),
    (3.5555555556, 0.5309016762, 1.3256141333),
    (4, 1.3662224388, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1843801476, 1.0296909368),
    (0.4444444444, 1.2391024005, 1.0230023935),
    (0.8888888889, 0.9762552003, 0.5125577543),
    (1.3333333333, 1.1843801476, 0.5279221189),
    (1.7777777778, 1.1019619535, 0.3808854164),
    (2.2222222222, 1.4574035863, 0.7277720932),
    (2.6666666667, 1.2832826301, 1.561272692),
    (3.1111111111, 1.6298631491, 0.8586690321),
    (3.5555555556, 1.0296909368, 0.3341540683),
    (4, 1.5061829653, 0.6769340567)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1019619535, 1.0296909368),
    (0.4444444444, 1.0897463234, 2),
    (0.8888888889, 1.0416045061, 0.8826304984),
    (1.3333333333, 0.6057478075, 0.7613686284),
    (1.7777777778, 1.1081053214, 2),
    (2.2222222222, 1.5348671048, 1.1905539763),
    (2.6666666667, 1.3067209471, 2),
    (3.1111111111, 1.2236553321, 1.250414619),
    (3.5555555556, 0.9940671063, 1.4907034996),
    (4, 1.6298631491, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.564870242, 1.6099992322),
    (0.4444444444, 0.6153324361, 1.2648299697),
    (0.8888888889, 0.4651328952, 1.5740656651),
    (1.3333333333, 1.7492398529, 1.3932983124),
    (1.7777777778, 0.8607539595, 2),
    (2.2222222222, 0.5858562556, 1.39962532),
    (2.6666666667, 1.0237447997, 2),
    (3.1111111111, 0.5639538851, 1.6578926905),
    (3.5555555556, 0.3366118777, 1.3256141333),
    (4, 1.3199549421, 1.6760114005)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.3366118777, 0.7318084089),
    (0.4444444444, 0.1649291558, 1.5969134823),
    (0.8888888889, 0.3114530955, 1.5740656651),
    (1.3333333333, 1.8350708442, 1.2267137173),
    (1.7777777778, 0.6687229368, 2),
    (2.2222222222, 0, 1.5348549924),
    (2.6666666667, 0.9284232209, 2),
    (3.1111111111, 0.4614293872, 1.762756952),
    (3.5555555556, 0.380194228, 1.7977615772),
    (4, 1.0687399327, 2)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6516268117, 1.4574035863),
    (0.4444444444, 0.1013003807, 1.5969134823),
    (0.8888888889, 0.5539083117, 1.1910120937),
    (1.3333333333, 1.6885469045, 1.6300484453),
    (1.7777777778, 0.6246986086, 1.4101650889),
    (2.2222222222, 0.1649291558, 1.4671850788),
    (2.6666666667, 1.0118671087, 2),
    (3.1111111111, 0.8963017747, 1.4685530452),
    (3.5555555556, 0.9223851651, 1.6712719238),
    (4, 0.9333119571, 1.539689776)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0655551847, 1.1745268696),
    (0.4444444444, 1.0715767791, 0.6281676625),
    (0.8888888889, 1.0475746559, 1.5740656651),
    (1.3333333333, 0.7318084089, 0.8017740079),
    (1.7777777778, 1.1455717397, 1.2468996646),
    (2.2222222222, 1.4937928719, 1.39962532),
    (2.6666666667, 1.0776148349, 1.4302164221),
    (3.1111111111, 0.4868641759, 0.4502303034),
    (3.5555555556, 0.7955605068, 1.3256141333),
    (4, 1.7417230994, 0.6054090895)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9762552003, 1.0296909368),
    (0.4444444444, 1.0296909368, 1.2648299697),
    (0.8888888889, 1.0059328937, 1.3661389652),
    (1.3333333333, 1.2681915911, 0.5927625073),
    (1.7777777778, 1.1329553904, 0.9952101864),
    (2.2222222222, 1.5499081273, 1.5348549924),
    (2.6666666667, 1.3846675639, 1.561272692),
    (3.1111111111, 1.1069649739, 1.0671676165),
    (3.5555555556, 1.0655551847, 1.2496772613),
    (4, 1.6084091192, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1, 1.1745268696),
    (0.4444444444, 1.0475746559, 1.2648299697),
    (0.8888888889, 1.1142746058, 1.3661389652),
    (1.3333333333, 1.1777991043, 0.8767686498),
    (1.7777777778, 1.1519345001, 1.1113812947),
    (2.2222222222, 0.6246986086, 0.6595055024),
    (2.6666666667, 0.7392101608, 1.0392154501),
    (3.1111111111, 0.5434660666, 0.8586690321),
    (3.5555555556, 1.0118671087, 1.3256141333),
    (4, 1.5791815461, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9643562786, 0.9223851651),
    (0.4444444444, 1.1519345001, 1.2648299697),
    (0.8888888889, 0.8544282603, 1.2794723027),
    (1.3333333333, 1.1019619535, 0.7302708238),
    (1.7777777778, 1.0958428304, 1.2023040921),
    (2.2222222222, 0.3593645848, 1.0008104347),
    (2.6666666667, 1.3147724895, 2),
    (3.1111111111, 0.4743857496, 1.5722392017),
    (3.5555555556, 0.6338610348, 1.198811539),
    (4, 1.3378974644, 1.441419072)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5539083117, 0.9223851651),
    (0.4444444444, 0.212410364, 0.8585070772),
    (0.8888888889, 0.4173916178, 0.8254731304),
    (1.3333333333, 0.8607539595, 1.0666880429),
    (1.7777777778, 0.6770447817, 0.8066439035),
    (2.2222222222, 0.3114530955, 1.2717332769),
    (2.6666666667, 0.3366118777, 1.7155533301),
    (3.1111111111, 0.2867503717, 1.3014159822),
    (3.5555555556, 0.564870242, 0.85717115),
    (4, 1.4181972811, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7090174101, 1.3188469745),
    (0.4444444444, 0.5755110625, 1.0230023935),
    (0.8888888889, 0.9223851651, 1.1266978453),
    (1.3333333333, 1.2987932509, 1.0055192992),
    (1.7777777778, 1.0836708428, 1.6426398893),
    (2.2222222222, 0.6153324361, 1.6804337199),
    (2.6666666667, 1.0296909368, 1.3119475441),
    (3.1111111111, 0.8523240435, 0.9993186063),
    (3.5555555556, 0.8416635922, 0.9535965829),
    (4, 1.4531840842, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9464444491, 1.0296909368),
    (0.4444444444, 0.2507601471, 2),
    (0.8888888889, 0.4931132021, 1.4405688668),
    (1.3333333333, 0.7465226249, 1.163690014),
    (1.7777777778, 0.9821960318, 2),
    (2.2222222222, 0.399449704, 1.5348549924),
    (2.6666666667, 0.399449704, 1.561272692),
    (3.1111111111, 0.5538401768, 2),
    (3.5555555556, 0.9284232209, 1.4907034996),
    (4, 2, 1.6760114005)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 2, 1.767523057),
    (0.4444444444, 0.9163291572, 1.2648299697),
    (0.8888888889, 1.0595485882, 1.1910120937),
    (1.3333333333, 1.6406354152, 0.2916795691),
    (1.7777777778, 1.0655551847, 1.0539449316),
    (2.2222222222, 0.5755110625, 0.8254751638),
    (2.6666666667, 1.3753013914, 1.7155533301),
    (3.1111111111, 1.679210827, 1.3690403656),
    (3.5555555556, 0.8980380465, 1.0154282222),
    (4, 1.5364162319, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4812135846, 0.8254731304),
    (0.4444444444, 1.8986996193, 1.2648299697),
    (0.8888888889, 1.7492398529, 0.5539083117),
    (1.3333333333, 1.1976976108, 1.0055192992),
    (1.7777777778, 1.4690983238, 0.6908746163),
    (2.2222222222, 1.600550296, 0.764388484),
    (2.6666666667, 1.716809318, 0.9822912358),
    (3.1111111111, 1.8301269492, 0.4113688836),
    (3.5555555556, 1.1976976108, 0.1086838911),
    (4, 1.2777739686, 0.892501825)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3753013914, 0.9223851651),
    (0.4444444444, 1.6885469045, 1.0230023935),
    (0.8888888889, 1.6885469045, 1.0059328937),
    (1.3333333333, 1.4141437444, 0.8468470828),
    (1.7777777778, 1.5499081273, 1.0539449316),
    (2.2222222222, 1.716809318, 1.0008104347),
    (2.6666666667, 1.8350708442, 1.2347159361),
    (3.1111111111, 1.7812224505, 0.7159791419),
    (3.5555555556, 1.1583364078, 1.0154282222),
    (4, 1.2090110601, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1142746058, 1.6099992322),
    (0.4444444444, 1.3846675639, 1.2648299697),
    (0.8888888889, 1.2909825899, 1.2794723027),
    (1.3333333333, 1.2320315815, 1.3932983124),
    (1.7777777778, 1.3661389652, 0.8609761514),
    (2.2222222222, 0.8795284755, 1.1905539763),
    (2.6666666667, 1.4460916883, 1.561272692),
    (3.1111111111, 0.5105604553, 1.4685530452),
    (3.5555555556, 0.9041571696, 0.8960973232),
    (4, 1.2859393044, 1.1989678515)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1266978453, 0.6008685523),
    (0.4444444444, 0.5062071281, 1.2648299697),
    (0.8888888889, 1.3397466119, 0.8254731304),
    (1.3333333333, 1.787589636, 1.2948060845),
    (1.7777777778, 1.3312770632, 0.9952101864),
    (2.2222222222, 0.8480654999, 0.764388484),
    (2.6666666667, 1.1976976108, 1.3119475441),
    (3.1111111111, 0.6703190838, 0.8110186275),
    (3.5555555556, 1.1392460405, 0.5821447971),
    (4, 1.2462549974, 0.8230545257)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9223851651, 0.7318084089),
    (0.4444444444, 0.4500918727, 1.5969134823),
    (0.8888888889, 0.283190682, 1.5740656651),
    (1.3333333333, 0.9970336357, 1.6898148891),
    (1.7777777778, 0.6852275105, 1.7907640593),
    (2.2222222222, 0.7090174101, 1.4671850788),
    (2.6666666667, 1.0897463234, 1.7155533301),
    (3.1111111111, 0.6021507957, 1.5722392017),
    (3.5555555556, 0.5959284432, 1.6712719238),
    (4, 0.9271724927, 1.441419072)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4244889375, 1.3188469745),
    (0.4444444444, 1.3147724895, 1.2648299697),
    (0.8888888889, 1.3147724895, 1.8641287063),
    (1.3333333333, 1.22503339, 1.1963712684),
    (1.7777777778, 1.3483731883, 1.2468996646),
    (2.2222222222, 0.8544282603, 1.0008104347),
    (2.6666666667, 1.2607898392, 1.1648921773),
    (3.1111111111, 0.1983251607, 0.6076812705),
    (3.5555555556, 0.7465226249, 0.827707186),
    (4, 1.2018030917, 0.872100205)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2681915911, 0.6645071899),
    (0.4444444444, 1.2607898392, 1.5969134823),
    (0.8888888889, 1.6406354152, 0.9344448153),
    (1.3333333333, 1.6633881223, 1.0974961283),
    (1.7777777778, 1.3753013914, 0.9952101864),
    (2.2222222222, 0.8156198524, 1.1117638801),
    (2.6666666667, 1.4812135846, 1.0936192592),
    (3.1111111111, 0.8135352611, 1.4685530452),
    (3.5555555556, 1.2181042243, 1.1432206168),
    (4, 1.1946662182, 1.539689776)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0178039682, 1.1745268696),
    (0.4444444444, 1.1204715245, 1.5969134823),
    (0.8888888889, 1.5657800038, 1.5740656651),
    (1.3333333333, 0.7608975995, 0.6973397881),
    (1.7777777778, 1.4574035863, 0.9153916302),
    (2.2222222222, 0.8980380465, 1.1905539763),
    (2.6666666667, 1.6633881223, 1.3119475441),
    (3.1111111111, 0.716392928, 1.1837577238),
    (3.5555555556, 1, 0.4828978505),
    (4, 1.1667619774, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0535555509, 0.9223851651),
    (0.4444444444, 0.6602533881, 1.5969134823),
    (0.8888888889, 0.8795284755, 1.767523057),
    (1.3333333333, 1.0237447997, 1.7843465515),
    (1.7777777778, 1.1712664124, 1.2468996646),
    (2.2222222222, 0.9404514118, 1.2717332769),
    (2.6666666667, 1.2462496544, 1.561272692),
    (3.1111111111, 0.6112081523, 1.1121004663),
    (3.5555555556, 0.5755110625, 1.1432206168),
    (4, 1.0190248777, 0.4937273831)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5348671048, 0.7318084089),
    (0.4444444444, 1.3483731883, 0.7729643972),
    (0.8888888889, 1.5499081273, 0.7280725506),
    (1.3333333333, 1.0715767791, 0.783706167),
    (1.7777777778, 1.8986996193, 1.4101650889),
    (2.2222222222, 1.0776148349, 0.7402841334),
    (2.6666666667, 1.5205547536, 1.3119475441),
    (3.1111111111, 1.1599312329, 0.8985048692),
    (3.5555555556, 1.1081053214, 0.9831179082),
    (4, 1.126512999, 0.9390727132)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5499081273, 0.3114530955),
    (0.4444444444, 1.5499081273, 0.8585070772),
    (0.8888888889, 1.8350708442, 0.7280725506),
    (1.3333333333, 1.3661389652, 0.5927625073),
    (1.7777777778, 1.787589636, 1.1113812947),
    (2.2222222222, 0.8733021547, 1.5348549924),
    (2.6666666667, 1.6406354152, 1.7155533301),
    (3.1111111111, 0.9086905211, 1.3251144672),
    (3.5555555556, 1.2320315815, 1.1015517522),
    (4, 1.2386313716, 1.1275631831)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5425964137, 1.3188469745),
    (0.4444444444, 1.787589636, 0.6569977756),
    (0.8888888889, 1.716809318, 0.6383700608),
    (1.3333333333, 1.3312770632, 1.5131358241),
    (1.7777777778, 1.619805772, 1.5257206213),
    (2.2222222222, 0.8089879063, 1.1905539763),
    (2.6666666667, 1.1081053214, 1.561272692),
    (3.1111111111, 0.583472753, 0.9993186063),
    (3.5555555556, 1.1204715245, 0.827707186),
    (4, 0.9761348674, 1.1275631831)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8544282603, 0.6008685523),
    (0.4444444444, 1.3397466119, 0.9256178097),
    (0.8888888889, 0.6687229368, 1.2794723027),
    (1.3333333333, 0.4173916178, 1.4461598232),
    (1.7777777778, 0.7392101608, 1.4101650889),
    (2.2222222222, 0.7012067491, 0.8254751638),
    (2.6666666667, 1.1142746058, 1.4302164221),
    (3.1111111111, 0.9822469657, 0.9993186063),
    (3.5555555556, 0.4931132021, 1.0633388599),
    (4, 1.1134441918, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8480654999, 1.4574035863),
    (0.4444444444, 0.6932790529, 1.2648299697),
    (0.8888888889, 0.8089879063, 0.8826304984),
    (1.3333333333, 1.3942521925, 1.0055192992),
    (1.7777777778, 0.8795284755, 1.1113812947),
    (2.2222222222, 0.6932790529, 1.4671850788),
    (2.6666666667, 1.2756874683, 1.0936192592),
    (3.1111111111, 0.6860726901, 0.9993186063),
    (3.5555555556, 0.9762552003, 1.0633388599),
    (4, 1.0562030792, 1.1644878268)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8287335876, 1.0296909368),
    (0.4444444444, 0.7012067491, 0.8585070772),
    (0.8888888889, 0.8416635922, 0.6383700608),
    (1.3333333333, 1.0836708428, 0.6434244929),
    (1.7777777778, 1.3942521925, 1.3070612262),
    (2.2222222222, 0.6852275105, 1.1117638801),
    (2.6666666667, 1.1329553904, 1.2347159361),
    (3.1111111111, 0.7936238579, 0.9176889588),
    (3.5555555556, 0.6428330556, 0.6285577317),
    (4, 0.9455675593, 0.9554430393)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5068867979, 1.767523057),
    (0.4444444444, 1.0776148349, 2),
    (0.8888888889, 0.8670446096, 1.4405688668),
    (1.3333333333, 1.5657800038, 1.739162567),
    (1.7777777778, 1.6885469045, 1.6426398893),
    (2.2222222222, 0.6687229368, 1.6804337199),
    (2.6666666667, 1.0958428304, 1.7155533301),
    (3.1111111111, 0.4479429594, 2),
    (3.5555555556, 0.7392101608, 2),
    (4, 0.9086905211, 1.441419072)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3483731883, 0.7318084089),
    (0.4444444444, 1.716809318, 1.0230023935),
    (0.8888888889, 1.600550296, 0.7280725506),
    (1.3333333333, 1.4937928719, 0.8994801466),
    (1.7777777778, 1.4460916883, 0.7373333084),
    (2.2222222222, 1.4460916883, 0.8254751638),
    (2.6666666667, 1.5499081273, 1.2347159361),
    (3.1111111111, 0.7382451684, 1.4221503635),
    (3.5555555556, 0.6057478075, 1.3934587741),
    (4, 1.1464244022, 1.441419072)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9284232209, 0.8254731304),
    (0.4444444444, 0.9583954939, 1.0230023935),
    (0.8888888889, 1.3571669444, 1.0059328937),
    (1.3333333333, 1.5205547536, 0.8767686498),
    (1.7777777778, 1.435129758, 0.8609761514),
    (2.2222222222, 1.6406354152, 0.764388484),
    (2.6666666667, 1.600550296, 1.4302164221),
    (3.1111111111, 1.1805918749, 1.0671676165),
    (3.5555555556, 1.1910120937, 0.7351718883),
    (4, 1.2617984034, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7955605068, 0.6008685523),
    (0.4444444444, 0.6770447817, 1.2648299697),
    (0.8888888889, 0.380194228, 1.2794723027),
    (1.3333333333, 1.1910120937, 1.3932983124),
    (1.7777777778, 0.7012067491, 2),
    (2.2222222222, 0.5539083117, 1.6804337199),
    (2.6666666667, 1.0836708428, 1.1648921773),
    (3.1111111111, 0.6782498566, 1.6578926905),
    (3.5555555556, 0.3593645848, 1.2496772613),
    (4, 0.8963017747, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4690983238, 0.4259343349),
    (0.4444444444, 1.5348671048, 1.2648299697),
    (0.8888888889, 1.3942521925, 1.1910120937),
    (1.3333333333, 1.2391024005, 1.5808760815),
    (1.7777777778, 1.2909825899, 1.6426398893),
    (2.2222222222, 0.7818957757, 1.39962532),
    (2.6666666667, 1.2987932509, 1.4302164221),
    (3.1111111111, 0.3316391408, 0.945681362),
    (3.5555555556, 1.2044394932, 1.5514933958),
    (4, 1.1736478987, 1.1275631831)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2112406716, 1.1745268696),
    (0.4444444444, 1.3312770632, 1.5969134823),
    (0.8888888889, 1.3753013914, 1.5740656651),
    (1.3333333333, 1.2462496544, 1.4461598232),
    (1.7777777778, 1.4040715568, 1.4101650889),
    (2.2222222222, 0.8670446096, 1.628237785),
    (2.6666666667, 1.1843801476, 0.6555127601),
    (3.1111111111, 0.7089485501, 1.3690403656),
    (3.5555555556, 1.0776148349, 1.0633388599),
    (4, 0.9578012944, 1.441419072)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2044394932, 1.0296909368),
    (0.4444444444, 1.1266978453, 1.0230023935),
    (0.8888888889, 1.2987932509, 1.0059328937),
    (1.3333333333, 0.9970336357, 1.1963712684),
    (1.7777777778, 1.5348671048, 1.5257206213),
    (2.2222222222, 0.9102536766, 1.1117638801),
    (2.6666666667, 1.5068867979, 1.3119475441),
    (3.1111111111, 2, 1.0671676165),
    (3.5555555556, 1.1329553904, 1.4328332648),
    (4, 1.0499655372, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2832826301, 1.1745268696),
    (0.4444444444, 1.4460916883, 1.5969134823),
    (0.8888888889, 1.6633881223, 1.5740656651),
    (1.3333333333, 0.8733021547, 1.0666880429),
    (1.7777777778, 2, 1.5257206213),
    (2.2222222222, 0.9223851651, 1.1905539763),
    (2.6666666667, 1.3397466119, 1.7155533301),
    (3.1111111111, 0.8266040683, 1.250414619),
    (3.5555555556, 1.22503339, 1.1432206168),
    (4, 1.1397431709, 1.612702619)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0595485882, 0.7318084089),
    (0.4444444444, 0.5187864154, 1.2648299697),
    (0.8888888889, 0.9524253441, 0.9344448153),
    (1.3333333333, 1.2044394932, 1.6898148891),
    (1.7777777778, 1.0296909368, 1.3070612262),
    (2.2222222222, 0.8857253942, 1.2717332769),
    (2.6666666667, 1.787589636, 1.0392154501),
    (3.1111111111, 0.6622742915, 1.250414619),
    (3.5555555556, 1.1712664124, 0.827707186),
    (4, 1.3026602119, 0.4937273831)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8352203718, 0.9223851651),
    (0.4444444444, 0.6852275105, 1.2648299697),
    (0.8888888889, 0.3593645848, 1.1910120937),
    (1.3333333333, 1.2756874683, 1.2948060845),
    (1.7777777778, 1.2607898392, 1.4101650889),
    (2.2222222222, 0.4173916178, 1.628237785),
    (2.6666666667, 1.1519345001, 1.4302164221),
    (3.1111111111, 0.7310372, 2),
    (3.5555555556, 0.7318084089, 1.7977615772),
    (4, 0.9210233824, 1.539689776)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1647796282, 1.1745268696),
    (0.4444444444, 1.1019619535, 1.2648299697),
    (0.8888888889, 0.7679684185, 1.8641287063),
    (1.3333333333, 1.4460916883, 1.3932983124),
    (1.7777777778, 1.22503339, 2),
    (2.2222222222, 0.7887593284, 1.628237785),
    (2.6666666667, 1.1583364078, 2),
    (3.1111111111, 0.7732862827, 1.762756952),
    (3.5555555556, 0.8222008957, 1.5514933958),
    (4, 0.9944807008, 1.441419072)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.435129758, 0.5425964137),
    (0.4444444444, 1.1142746058, 2),
    (0.8888888889, 1.4460916883, 0.7280725506),
    (1.3333333333, 1.3483731883, 0.6973397881),
    (1.7777777778, 1.5657800038, 2),
    (2.2222222222, 1.7492398529, 1.1905539763),
    (2.6666666667, 2, 1.1648921773),
    (3.1111111111, 1.1667619774, 0.4113688836),
    (3.5555555556, 1.1519345001, 1.3934587741),
    (4, 1.1805918749, 0.9943815053)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2987932509, 0.8254731304),
    (0.4444444444, 1.2534773751, 0.7215743629),
    (0.8888888889, 1.4690983238, 1.0776148349),
    (1.3333333333, 0.6972579443, 0.5927625073),
    (1.7777777778, 1.2987932509, 1.3070612262),
    (2.2222222222, 0.9041571696, 1.0008104347),
    (2.6666666667, 1.4574035863, 0.6839194196),
    (3.1111111111, 1.0941068932, 1.762756952),
    (3.5555555556, 1.1777991043, 0.5143907122),
    (4, 1.1875969245, 0.8230545257)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8222008957, 0.4863550884),
    (0.4444444444, 1.0655551847, 0.8585070772),
    (0.8888888889, 1.3067209471, 0.5125577543),
    (1.3333333333, 1.0655551847, 1.2546179581),
    (1.7777777778, 1.2756874683, 1.3070612262),
    (2.2222222222, 0.8023023892, 1.0008104347),
    (2.6666666667, 1.1647796282, 1.1648921773),
    (3.1111111111, 0.4036320282, 0.9993186063),
    (3.5555555556, 0.4651328952, 1.2496772613),
    (4, 1.23109971, 1.441419072)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2181042243, 1.4574035863),
    (0.4444444444, 1.7492398529, 1.5969134823),
    (0.8888888889, 2, 1.2794723027),
    (1.3333333333, 2, 1.1318399315),
    (1.7777777778, 1.7492398529, 1.2023040921),
    (2.2222222222, 1.8986996193, 1.3311519133),
    (2.6666666667, 1.7492398529, 1.3119475441),
    (3.1111111111, 1.8956630523, 1.4685530452),
    (3.5555555556, 1.2391024005, 1.198811539),
    (4, 1.3112315114, 1.0395349001)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3661389652, 1.0296909368),
    (0.4444444444, 1.6633881223, 0.7729643972),
    (0.8888888889, 1.5205547536, 1.0059328937),
    (1.3333333333, 1.2181042243, 0.9375393224),
    (1.7777777778, 1.5205547536, 1.4101650889),
    (2.2222222222, 1.6885469045, 1.0008104347),
    (2.6666666667, 1.8986996193, 1.3119475441),
    (3.1111111111, 1.0006050785, 0.3673230706),
    (3.5555555556, 1.1647796282, 1.198811539),
    (4, 1.216293833, 1.1989678515)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0416045061, 1.0296909368),
    (0.4444444444, 1.600550296, 0.3771200578),
    (0.8888888889, 1.5068867979, 0.6811530255),
    (1.3333333333, 1.716809318, 0.9375393224),
    (1.7777777778, 1.600550296, 0.4519881112),
    (2.2222222222, 0.7955605068, 0.8855666945),
    (2.6666666667, 1.1777991043, 1.2347159361),
    (3.1111111111, 1.7417230994, 0.8586690321),
    (3.5555555556, 1.0836708428, 0.6285577317),
    (4, 0.97002413, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3571669444, 0.9223851651),
    (0.4444444444, 1.2987932509, 0.6839678314),
    (0.8888888889, 1.4040715568, 1.0059328937),
    (1.3333333333, 1.0416045061, 1.5131358241),
    (1.7777777778, 1.5068867979, 0.9153916302),
    (2.2222222222, 1.6633881223, 1.1117638801),
    (2.6666666667, 1.0655551847, 1.7155533301),
    (3.1111111111, 0.6373880481, 0.945681362),
    (3.5555555556, 0.7167173699, 0.5565993525),
    (4, 1.0251850552, 1.1989678515)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0356437214, 0.1649291558),
    (0.4444444444, 1.5657800038, 0.5805317772),
    (0.8888888889, 1.5348671048, 0.4794452464),
    (1.3333333333, 1.3571669444, 0.8017740079),
    (1.7777777778, 1.5826083822, 1.4101650889),
    (2.2222222222, 0.8352203718, 0.5394039792),
    (2.6666666667, 1.2534773751, 1.3119475441),
    (3.1111111111, 0.7868953429, 0.4961056762),
    (3.5555555556, 0.8733021547, 1.3646347971),
    (4, 1.25397557, 1.0395349001)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3229552183, 0.4863550884),
    (0.4444444444, 1.619805772, 0.6050909329),
    (0.8888888889, 1.787589636, 0.5755110625),
    (1.3333333333, 1.1204715245, 0.7613686284),
    (1.7777777778, 1.4937928719, 0.7753534052),
    (2.2222222222, 1.8350708442, 0.7017024986),
    (2.6666666667, 1.22503339, 0.9568636233),
    (3.1111111111, 0.8003050892, 0.5738084394),
    (3.5555555556, 1.2112406716, 0.9268711326),
    (4, 1.0941068932, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0296909368, 1.1745268696),
    (0.4444444444, 1.1081053214, 1.2648299697),
    (0.8888888889, 1.3229552183, 0.77496661),
    (1.3333333333, 1.4244889375, 1.0974961283),
    (1.7777777778, 1.2832826301, 1.6426398893),
    (2.2222222222, 0.8918946786, 1.5348549924),
    (2.6666666667, 1.4040715568, 1.561272692),
    (3.1111111111, 0.7594563851, 0.7159791419),
    (3.5555555556, 0.8352203718, 0.6285577317),
    (4, 0.9883617877, 1.0395349001)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4141437444, 0.7318084089),
    (0.4444444444, 1.2462496544, 1.2648299697),
    (0.8888888889, 1.4244889375, 1.1266978453),
    (1.3333333333, 1.5348671048, 0.4299032946),
    (1.7777777778, 1.4141437444, 1.4101650889),
    (2.2222222222, 1.5657800038, 1.628237785),
    (2.6666666667, 1.3661389652, 2),
    (3.1111111111, 1.1736478987, 1.6578926905),
    (3.5555555556, 0.9643562786, 1.4907034996),
    (4, 1.0750424818, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8156198524, 0.8254731304),
    (0.4444444444, 0.8544282603, 1.2648299697),
    (0.8888888889, 0.7537503456, 1.0059328937),
    (1.3333333333, 1.5826083822, 1.1318399315),
    (1.7777777778, 0.8352203718, 0.9952101864),
    (2.2222222222, 0.7243125317, 1.1117638801),
    (2.6666666667, 1.1455717397, 1.561272692),
    (3.1111111111, 0.8200887508, 1.0671676165),
    (3.5555555556, 0.9703090632, 0.6601823512),
    (4, 1.1331068094, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3312770632, 0.4863550884),
    (0.4444444444, 1.0356437214, 0.6569977756),
    (0.8888888889, 1.4574035863, 0.6811530255),
    (1.3333333333, 1.2832826301, 0.9375393224),
    (1.7777777778, 1.3067209471, 0.8066439035),
    (2.2222222222, 0.9344448153, 0.5778051143),
    (2.6666666667, 1.4244889375, 1.4302164221),
    (3.1111111111, 0.8069414507, 1.0671676165),
    (3.5555555556, 0.8480654999, 0.9831179082),
    (4, 1.0877242166, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8089879063, 0.8254731304),
    (0.4444444444, 1.6406354152, 1.0230023935),
    (0.8888888889, 1.4937928719, 1.5740656651),
    (1.3333333333, 1.435129758, 1.0974961283),
    (1.7777777778, 1.6633881223, 1.0539449316),
    (2.2222222222, 1.5826083822, 0.8855666945),
    (2.6666666667, 1.619805772, 1.561272692),
    (3.1111111111, 0.7664003613, 1.3690403656),
    (3.5555555556, 1.1843801476, 0.7930891878),
    (4, 1.1531529172, 0.872100205)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.0237447997, 0.4863550884),
    (0.4444444444, 0.8918946786, 1.2648299697),
    (0.8888888889, 0.8918946786, 1.0059328937),
    (1.3333333333, 0.77496661, 1.2267137173),
    (1.7777777778, 1.2391024005, 1.158394846),
    (2.2222222222, 0.9163291572, 0.8254751638),
    (2.6666666667, 1.4937928719, 1.4302164221),
    (3.1111111111, 0.7014168885, 1.5212944497),
    (3.5555555556, 0.5539083117, 1.1432206168),
    (4, 0.9394431816, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4574035863, 0.6645071899),
    (0.4444444444, 1.3229552183, 0.6050909329),
    (0.8888888889, 1.435129758, 0.5125577543),
    (1.3333333333, 1.1392460405, 1.0055192992),
    (1.7777777778, 1.4244889375, 0.8609761514),
    (2.2222222222, 1.619805772, 1.2717332769),
    (2.6666666667, 1.6885469045, 0.9822912358),
    (3.1111111111, 1.6084091192, 1.1121004663),
    (3.5555555556, 0.2507601471, 0),
    (4, 1.2697291762, 0.4725976579)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.4173916178, 0.5425964137),
    (0.4444444444, 0.3366118777, 0.7215743629),
    (0.8888888889, 0.1649291558, 0.8254731304),
    (1.3333333333, 1.0897463234, 1.0452556908),
    (1.7777777778, 0.9583954939, 0.9153916302),
    (2.2222222222, 0.6602533881, 0.6207803934),
    (2.6666666667, 1.1392460405, 1.4302164221),
    (3.1111111111, 0.5929098309, 0.5170467787),
    (3.5555555556, 0.5187864154, 0.7351718883),
    (4, 1.0006050785, 0.9554430393)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.6932790529, 1.3188469745),
    (0.4444444444, 1.1647796282, 1.0230023935),
    (0.8888888889, 1.3312770632, 1.0776148349),
    (1.3333333333, 1.1712664124, 0.8228875552),
    (1.7777777778, 1.3397466119, 1.3070612262),
    (2.2222222222, 0.8607539595, 1.39962532),
    (2.6666666667, 1.5657800038, 1.4302164221),
    (3.1111111111, 0.8900827229, 0.771346443),
    (3.5555555556, 0.8607539595, 0.9535965829),
    (4, 1.0437464854, 1.539689776)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4040715568, 1.1745268696),
    (0.4444444444, 0.9464444491, 1.0230023935),
    (0.8888888889, 1.3483731883, 1.0776148349),
    (1.3333333333, 1.5499081273, 1.2546179581),
    (1.7777777778, 1.2462496544, 1.4101650889),
    (2.2222222222, 0.8416635922, 1.1905539763),
    (2.6666666667, 1.1712664124, 1.4302164221),
    (3.1111111111, 0.7237544271, 1.3690403656),
    (3.5555555556, 1.1455717397, 1.0410322635),
    (4, 1.031357739, 1.441419072)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3067209471, 0.3699954929),
    (0.4444444444, 0.9703090632, 1.0230023935),
    (0.8888888889, 0.9703090632, 0.9344448153),
    (1.3333333333, 0.6246986086, 1.0055192992),
    (1.7777777778, 1.3147724895, 1.1113812947),
    (2.2222222222, 0.8287335876, 0.8254751638),
    (2.6666666667, 1.2320315815, 1.561272692),
    (3.1111111111, 1.0375443884, 0.8586690321),
    (3.5555555556, 0.7537503456, 0.6800614493),
    (4, 1.0813700025, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9583954939, 1.4574035863),
    (0.4444444444, 0.8607539595, 0.8585070772),
    (0.8888888889, 0.9643562786, 1.1910120937),
    (1.3333333333, 1.2112406716, 0.7613686284),
    (1.7777777778, 1.3571669444, 1.4101650889),
    (2.2222222222, 0.9821960318, 1.0008104347),
    (2.6666666667, 1.2909825899, 1.1648921773),
    (3.1111111111, 0.7801170272, 1.1837577238),
    (3.5555555556, 0.6770447817, 1.4328332648),
    (4, 1.006736303, 1.0395349001)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1777991043, 1.1745268696),
    (0.4444444444, 0.7167173699, 1.2648299697),
    (0.8888888889, 0.8480654999, 0.9344448153),
    (1.3333333333, 1.4690983238, 1.4461598232),
    (1.7777777778, 1.3846675639, 1.2023040921),
    (2.2222222222, 1.0595485882, 1.1117638801),
    (2.6666666667, 1.2044394932, 2),
    (3.1111111111, 0.4338652948, 1.762756952),
    (3.5555555556, 0.8670446096, 1.198811539),
    (4, 1.0375443884, 1.612702619)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0, 0.9223851651),
    (0.4444444444, 0.9344448153, 1.5969134823),
    (0.8888888889, 1.3661389652, 1.0059328937),
    (1.3333333333, 1.5068867979, 1.5131358241),
    (1.7777777778, 1.2534773751, 1.2023040921),
    (2.2222222222, 1.787589636, 1.39962532),
    (2.6666666667, 1.5348671048, 1.2347159361),
    (3.1111111111, 1.0437464854, 1.1837577238),
    (3.5555555556, 1.1266978453, 1.1015517522),
    (4, 1.2942321987, 0.892501825)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8416635922, 0.2675841216),
    (0.4444444444, 1.0237447997, 0.4947145759),
    (0.8888888889, 1.3846675639, 1.0059328937),
    (1.3333333333, 1.3067209471, 1.0055192992),
    (1.7777777778, 1.2681915911, 0.9952101864),
    (2.2222222222, 0.8222008957, 1.1905539763),
    (2.6666666667, 1.4690983238, 0.5361383491),
    (3.1111111111, 0.5738258213, 1.3690403656),
    (3.5555555556, 0.212410364, 0.4285645113),
    (4, 0.9639133927, 0.2092409413)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.9102536766, 0.7318084089),
    (0.4444444444, 0.7090174101, 0.8585070772),
    (0.8888888889, 0.6057478075, 1.0059328937),
    (1.3333333333, 0.5309016762, 1.163690014),
    (1.7777777778, 1.2320315815, 0.4913316344),
    (2.2222222222, 0.9464444491, 1.3311519133),
    (2.6666666667, 1.2181042243, 1.0392154501),
    (3.1111111111, 0.6200933179, 0.771346443),
    (3.5555555556, 1.1019619535, 0.5361517975),
    (4, 0.9822469657, 0.872100205)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.2756874683, 1.3188469745),
    (0.4444444444, 0.9284232209, 0.9256178097),
    (0.8888888889, 1.5826083822, 1.3661389652),
    (1.3333333333, 1.1519345001, 1.163690014),
    (1.7777777778, 1.8350708442, 0.9523650499),
    (2.2222222222, 1.435129758, 0.1258390422),
    (2.6666666667, 1.3942521925, 2),
    (3.1111111111, 1.1005198534, 1.4685530452),
    (3.5555555556, 1.2462496544, 0.7648408039),
    (4, 1.0624606776, 1.3523934443)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1976976108, 1.1745268696),
    (0.4444444444, 1.8350708442, 1.0230023935),
    (0.8888888889, 1.8986996193, 1.2794723027),
    (1.3333333333, 1.0356437214, 1.3458910443),
    (1.7777777778, 1.716809318, 1.0539449316),
    (2.2222222222, 0.9284232209, 1.3311519133),
    (2.6666666667, 1.5826083822, 1.561272692),
    (3.1111111111, 0.3699515547, 1.0671676165),
    (3.5555555556, 1.2534773751, 0.85717115),
    (4, 1.2236553321, 1.612702619)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.8023023892, 1.0296909368),
    (0.4444444444, 0.6687229368, 2),
    (0.8888888889, 0.8156198524, 1.1910120937),
    (1.3333333333, 1.1266978453, 1.0974961283),
    (1.7777777778, 0.8980380465, 1.4101650889),
    (2.2222222222, 0.6770447817, 1.1905539763),
    (2.6666666667, 1.1019619535, 2),
    (3.1111111111, 0.4989094734, 1.1837577238),
    (3.5555555556, 0.8287335876, 0.8960973232),
    (4, 0.9516864724, 1.441419072)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.5062071281, 0.6645071899),
    (0.4444444444, 0.9762552003, 1.2648299697),
    (0.8888888889, 0.6770447817, 1.2794723027),
    (1.3333333333, 1.0595485882, 1.163690014),
    (1.7777777778, 0.8733021547, 1.6426398893),
    (2.2222222222, 0.77496661, 1.2717332769),
    (2.6666666667, 1.2112406716, 1.3119475441),
    (3.1111111111, 0.3514718165, 1.1837577238),
    (3.5555555556, 0.1649291558, 0.8960973232),
    (4, 1.0128757674, 1.0848655217)
};
//dot(points[0], blue);

pen myPen = green + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.5205547536, 1.4574035863),
    (0.4444444444, 1.5826083822, 0.8585070772),
    (0.8888888889, 1.619805772, 0.4500918727),
    (1.3333333333, 1.619805772, 0.4299032946),
    (1.7777777778, 1.6406354152, 1.1113812947),
    (2.2222222222, 2, 2),
    (2.6666666667, 1.1910120937, 0),
    (3.1111111111, 0.8838451809, 0.9993186063),
    (3.5555555556, 1.0958428304, 1.3646347971),
    (4, 1.1199595093, 1.2910050977)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.4937928719, 0.8254731304),
    (0.4444444444, 0.9524253441, 1.0230023935),
    (0.8888888889, 1.4141437444, 1.0059328937),
    (1.3333333333, 1.1329553904, 0.9375393224),
    (1.7777777778, 1.3229552183, 1.0539449316),
    (2.2222222222, 0.9643562786, 1.1905539763),
    (2.6666666667, 1.3312770632, 1.2347159361),
    (3.1111111111, 1.006736303, 1.3014159822),
    (3.5555555556, 0.6687229368, 0.7037715155),
    (4, 0.9025038717, 1.2382452644)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.3846675639, 0.6008685523),
    (0.4444444444, 1.5205547536, 0.6569977756),
    (0.8888888889, 1.4812135846, 0.9344448153),
    (1.3333333333, 1.600550296, 0.8767686498),
    (1.7777777778, 1.4812135846, 0.9523650499),
    (2.2222222222, 0.9524253441, 0.8855666945),
    (2.6666666667, 1.435129758, 1.0029726035),
    (3.1111111111, 0.7453820419, 0.8586690321),
    (3.5555555556, 1.1142746058, 0.6285577317),
    (4, 1.1599312329, 0.8049276631)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(0.3) + opacity(0.1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}

triple[] points = {
    (0, 1.031737289, 0.9529497133),
    (0.4444444444, 1.0636317828, 1.1398021234),
    (0.8888888889, 0.9849218094, 0.8524577306),
    (1.3333333333, 0.7097501233, 0.8958220755),
    (1.7777777778, 0.7400098097, 0.8818559402),
    (2.2222222222, 1.15983439, 1.1698292281),
    (2.6666666667, 0.7544183091, 0.8455618392),
    (3.1111111111, 1.2271229605, 1.2354151962),
    (3.5555555556, 1.2681700914, 0.9389122324),
    (4, 0.5947508912, 0.6822186011)
};
//dot(points[0], blue);

pen myPen = red + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 1.1582368886, 0.9487572032),
    (0.4444444444, 1.2063959928, 1.0646654798),
    (0.8888888889, 1.306234096, 0.9918208779),
    (1.3333333333, 1.226755535, 1.0096651459),
    (1.7777777778, 1.3616423051, 1.1294921715),
    (2.2222222222, 1.1303301405, 1.1127572649),
    (2.6666666667, 1.3847509456, 1.3240536378),
    (3.1111111111, 0.9385632064, 1.0477191909),
    (3.5555555556, 0.9569483379, 0.9404648027),
    (4, 1.1957285442, 1.0696224045)
};
//dot(points[0], blue);

pen myPen = blue + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}


triple[] points = {
    (0, 0.7712555822, 1.115038352),
    (0.4444444444, 0.6748645151, 1.4512104326),
    (0.8888888889, 0.6494245221, 1.1844798937),
    (1.3333333333, 1.0764529881, 1.2154686596),
    (1.7777777778, 0.8776025556, 1.4286317798),
    (2.2222222222, 0.6506182184, 1.467374633),
    (2.6666666667, 0.8324295455, 1.5778193247),
    (3.1111111111, 0.6986553551, 1.4621480283),
    (3.5555555556, 0.7289371689, 1.3914523595),
    (4, 1.150429065, 1.3772692628)
};
//dot(points[0], blue);

pen myPen = green + linewidth(2.5) + opacity(1);

// 绘制轨迹
for (int i = 1; i < points.length; ++i) {
    draw(points[i-1]--points[i], myPen);  // 连接轨迹点
    //dot(points[i], blue);  // 在每个点添加蓝色标记
}
